/*
全部  API 文档

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package zsgf

import (
	"encoding/json"
)

// checks if the TokenModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TokenModel{}

// TokenModel struct for TokenModel
type TokenModel struct {
	AccessToken NullableString `json:"access_token,omitempty"`
	TokenType NullableString `json:"token_type,omitempty"`
	ExpiresIn *int64 `json:"expires_in,omitempty"`
}

// NewTokenModel instantiates a new TokenModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTokenModel() *TokenModel {
	this := TokenModel{}
	return &this
}

// NewTokenModelWithDefaults instantiates a new TokenModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTokenModelWithDefaults() *TokenModel {
	this := TokenModel{}
	return &this
}

// GetAccessToken returns the AccessToken field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TokenModel) GetAccessToken() string {
	if o == nil || IsNil(o.AccessToken.Get()) {
		var ret string
		return ret
	}
	return *o.AccessToken.Get()
}

// GetAccessTokenOk returns a tuple with the AccessToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TokenModel) GetAccessTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AccessToken.Get(), o.AccessToken.IsSet()
}

// HasAccessToken returns a boolean if a field has been set.
func (o *TokenModel) HasAccessToken() bool {
	if o != nil && o.AccessToken.IsSet() {
		return true
	}

	return false
}

// SetAccessToken gets a reference to the given NullableString and assigns it to the AccessToken field.
func (o *TokenModel) SetAccessToken(v string) {
	o.AccessToken.Set(&v)
}
// SetAccessTokenNil sets the value for AccessToken to be an explicit nil
func (o *TokenModel) SetAccessTokenNil() {
	o.AccessToken.Set(nil)
}

// UnsetAccessToken ensures that no value is present for AccessToken, not even an explicit nil
func (o *TokenModel) UnsetAccessToken() {
	o.AccessToken.Unset()
}

// GetTokenType returns the TokenType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TokenModel) GetTokenType() string {
	if o == nil || IsNil(o.TokenType.Get()) {
		var ret string
		return ret
	}
	return *o.TokenType.Get()
}

// GetTokenTypeOk returns a tuple with the TokenType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TokenModel) GetTokenTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TokenType.Get(), o.TokenType.IsSet()
}

// HasTokenType returns a boolean if a field has been set.
func (o *TokenModel) HasTokenType() bool {
	if o != nil && o.TokenType.IsSet() {
		return true
	}

	return false
}

// SetTokenType gets a reference to the given NullableString and assigns it to the TokenType field.
func (o *TokenModel) SetTokenType(v string) {
	o.TokenType.Set(&v)
}
// SetTokenTypeNil sets the value for TokenType to be an explicit nil
func (o *TokenModel) SetTokenTypeNil() {
	o.TokenType.Set(nil)
}

// UnsetTokenType ensures that no value is present for TokenType, not even an explicit nil
func (o *TokenModel) UnsetTokenType() {
	o.TokenType.Unset()
}

// GetExpiresIn returns the ExpiresIn field value if set, zero value otherwise.
func (o *TokenModel) GetExpiresIn() int64 {
	if o == nil || IsNil(o.ExpiresIn) {
		var ret int64
		return ret
	}
	return *o.ExpiresIn
}

// GetExpiresInOk returns a tuple with the ExpiresIn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenModel) GetExpiresInOk() (*int64, bool) {
	if o == nil || IsNil(o.ExpiresIn) {
		return nil, false
	}
	return o.ExpiresIn, true
}

// HasExpiresIn returns a boolean if a field has been set.
func (o *TokenModel) HasExpiresIn() bool {
	if o != nil && !IsNil(o.ExpiresIn) {
		return true
	}

	return false
}

// SetExpiresIn gets a reference to the given int64 and assigns it to the ExpiresIn field.
func (o *TokenModel) SetExpiresIn(v int64) {
	o.ExpiresIn = &v
}

func (o TokenModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TokenModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.AccessToken.IsSet() {
		toSerialize["access_token"] = o.AccessToken.Get()
	}
	if o.TokenType.IsSet() {
		toSerialize["token_type"] = o.TokenType.Get()
	}
	if !IsNil(o.ExpiresIn) {
		toSerialize["expires_in"] = o.ExpiresIn
	}
	return toSerialize, nil
}

type NullableTokenModel struct {
	value *TokenModel
	isSet bool
}

func (v NullableTokenModel) Get() *TokenModel {
	return v.value
}

func (v *NullableTokenModel) Set(val *TokenModel) {
	v.value = val
	v.isSet = true
}

func (v NullableTokenModel) IsSet() bool {
	return v.isSet
}

func (v *NullableTokenModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTokenModel(val *TokenModel) *NullableTokenModel {
	return &NullableTokenModel{value: val, isSet: true}
}

func (v NullableTokenModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTokenModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


