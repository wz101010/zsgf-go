/*
全部  API 文档

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package zsgf

import (
	"encoding/json"
)

// checks if the RecommendFriend type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RecommendFriend{}

// RecommendFriend struct for RecommendFriend
type RecommendFriend struct {
	UserID *int64 `json:"userID,omitempty"`
	NickName NullableString `json:"nickName,omitempty"`
	Avatar NullableString `json:"avatar,omitempty"`
	Gender NullableString `json:"gender,omitempty"`
	Age *int32 `json:"age,omitempty"`
	InterestTags NullableString `json:"interestTags,omitempty"`
	LocationName NullableString `json:"locationName,omitempty"`
	Latitude *float64 `json:"latitude,omitempty"`
	Longitude *float64 `json:"longitude,omitempty"`
	Distance *int64 `json:"distance,omitempty"`
}

// NewRecommendFriend instantiates a new RecommendFriend object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRecommendFriend() *RecommendFriend {
	this := RecommendFriend{}
	return &this
}

// NewRecommendFriendWithDefaults instantiates a new RecommendFriend object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRecommendFriendWithDefaults() *RecommendFriend {
	this := RecommendFriend{}
	return &this
}

// GetUserID returns the UserID field value if set, zero value otherwise.
func (o *RecommendFriend) GetUserID() int64 {
	if o == nil || IsNil(o.UserID) {
		var ret int64
		return ret
	}
	return *o.UserID
}

// GetUserIDOk returns a tuple with the UserID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecommendFriend) GetUserIDOk() (*int64, bool) {
	if o == nil || IsNil(o.UserID) {
		return nil, false
	}
	return o.UserID, true
}

// HasUserID returns a boolean if a field has been set.
func (o *RecommendFriend) HasUserID() bool {
	if o != nil && !IsNil(o.UserID) {
		return true
	}

	return false
}

// SetUserID gets a reference to the given int64 and assigns it to the UserID field.
func (o *RecommendFriend) SetUserID(v int64) {
	o.UserID = &v
}

// GetNickName returns the NickName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RecommendFriend) GetNickName() string {
	if o == nil || IsNil(o.NickName.Get()) {
		var ret string
		return ret
	}
	return *o.NickName.Get()
}

// GetNickNameOk returns a tuple with the NickName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecommendFriend) GetNickNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.NickName.Get(), o.NickName.IsSet()
}

// HasNickName returns a boolean if a field has been set.
func (o *RecommendFriend) HasNickName() bool {
	if o != nil && o.NickName.IsSet() {
		return true
	}

	return false
}

// SetNickName gets a reference to the given NullableString and assigns it to the NickName field.
func (o *RecommendFriend) SetNickName(v string) {
	o.NickName.Set(&v)
}
// SetNickNameNil sets the value for NickName to be an explicit nil
func (o *RecommendFriend) SetNickNameNil() {
	o.NickName.Set(nil)
}

// UnsetNickName ensures that no value is present for NickName, not even an explicit nil
func (o *RecommendFriend) UnsetNickName() {
	o.NickName.Unset()
}

// GetAvatar returns the Avatar field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RecommendFriend) GetAvatar() string {
	if o == nil || IsNil(o.Avatar.Get()) {
		var ret string
		return ret
	}
	return *o.Avatar.Get()
}

// GetAvatarOk returns a tuple with the Avatar field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecommendFriend) GetAvatarOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Avatar.Get(), o.Avatar.IsSet()
}

// HasAvatar returns a boolean if a field has been set.
func (o *RecommendFriend) HasAvatar() bool {
	if o != nil && o.Avatar.IsSet() {
		return true
	}

	return false
}

// SetAvatar gets a reference to the given NullableString and assigns it to the Avatar field.
func (o *RecommendFriend) SetAvatar(v string) {
	o.Avatar.Set(&v)
}
// SetAvatarNil sets the value for Avatar to be an explicit nil
func (o *RecommendFriend) SetAvatarNil() {
	o.Avatar.Set(nil)
}

// UnsetAvatar ensures that no value is present for Avatar, not even an explicit nil
func (o *RecommendFriend) UnsetAvatar() {
	o.Avatar.Unset()
}

// GetGender returns the Gender field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RecommendFriend) GetGender() string {
	if o == nil || IsNil(o.Gender.Get()) {
		var ret string
		return ret
	}
	return *o.Gender.Get()
}

// GetGenderOk returns a tuple with the Gender field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecommendFriend) GetGenderOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Gender.Get(), o.Gender.IsSet()
}

// HasGender returns a boolean if a field has been set.
func (o *RecommendFriend) HasGender() bool {
	if o != nil && o.Gender.IsSet() {
		return true
	}

	return false
}

// SetGender gets a reference to the given NullableString and assigns it to the Gender field.
func (o *RecommendFriend) SetGender(v string) {
	o.Gender.Set(&v)
}
// SetGenderNil sets the value for Gender to be an explicit nil
func (o *RecommendFriend) SetGenderNil() {
	o.Gender.Set(nil)
}

// UnsetGender ensures that no value is present for Gender, not even an explicit nil
func (o *RecommendFriend) UnsetGender() {
	o.Gender.Unset()
}

// GetAge returns the Age field value if set, zero value otherwise.
func (o *RecommendFriend) GetAge() int32 {
	if o == nil || IsNil(o.Age) {
		var ret int32
		return ret
	}
	return *o.Age
}

// GetAgeOk returns a tuple with the Age field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecommendFriend) GetAgeOk() (*int32, bool) {
	if o == nil || IsNil(o.Age) {
		return nil, false
	}
	return o.Age, true
}

// HasAge returns a boolean if a field has been set.
func (o *RecommendFriend) HasAge() bool {
	if o != nil && !IsNil(o.Age) {
		return true
	}

	return false
}

// SetAge gets a reference to the given int32 and assigns it to the Age field.
func (o *RecommendFriend) SetAge(v int32) {
	o.Age = &v
}

// GetInterestTags returns the InterestTags field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RecommendFriend) GetInterestTags() string {
	if o == nil || IsNil(o.InterestTags.Get()) {
		var ret string
		return ret
	}
	return *o.InterestTags.Get()
}

// GetInterestTagsOk returns a tuple with the InterestTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecommendFriend) GetInterestTagsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.InterestTags.Get(), o.InterestTags.IsSet()
}

// HasInterestTags returns a boolean if a field has been set.
func (o *RecommendFriend) HasInterestTags() bool {
	if o != nil && o.InterestTags.IsSet() {
		return true
	}

	return false
}

// SetInterestTags gets a reference to the given NullableString and assigns it to the InterestTags field.
func (o *RecommendFriend) SetInterestTags(v string) {
	o.InterestTags.Set(&v)
}
// SetInterestTagsNil sets the value for InterestTags to be an explicit nil
func (o *RecommendFriend) SetInterestTagsNil() {
	o.InterestTags.Set(nil)
}

// UnsetInterestTags ensures that no value is present for InterestTags, not even an explicit nil
func (o *RecommendFriend) UnsetInterestTags() {
	o.InterestTags.Unset()
}

// GetLocationName returns the LocationName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RecommendFriend) GetLocationName() string {
	if o == nil || IsNil(o.LocationName.Get()) {
		var ret string
		return ret
	}
	return *o.LocationName.Get()
}

// GetLocationNameOk returns a tuple with the LocationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecommendFriend) GetLocationNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LocationName.Get(), o.LocationName.IsSet()
}

// HasLocationName returns a boolean if a field has been set.
func (o *RecommendFriend) HasLocationName() bool {
	if o != nil && o.LocationName.IsSet() {
		return true
	}

	return false
}

// SetLocationName gets a reference to the given NullableString and assigns it to the LocationName field.
func (o *RecommendFriend) SetLocationName(v string) {
	o.LocationName.Set(&v)
}
// SetLocationNameNil sets the value for LocationName to be an explicit nil
func (o *RecommendFriend) SetLocationNameNil() {
	o.LocationName.Set(nil)
}

// UnsetLocationName ensures that no value is present for LocationName, not even an explicit nil
func (o *RecommendFriend) UnsetLocationName() {
	o.LocationName.Unset()
}

// GetLatitude returns the Latitude field value if set, zero value otherwise.
func (o *RecommendFriend) GetLatitude() float64 {
	if o == nil || IsNil(o.Latitude) {
		var ret float64
		return ret
	}
	return *o.Latitude
}

// GetLatitudeOk returns a tuple with the Latitude field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecommendFriend) GetLatitudeOk() (*float64, bool) {
	if o == nil || IsNil(o.Latitude) {
		return nil, false
	}
	return o.Latitude, true
}

// HasLatitude returns a boolean if a field has been set.
func (o *RecommendFriend) HasLatitude() bool {
	if o != nil && !IsNil(o.Latitude) {
		return true
	}

	return false
}

// SetLatitude gets a reference to the given float64 and assigns it to the Latitude field.
func (o *RecommendFriend) SetLatitude(v float64) {
	o.Latitude = &v
}

// GetLongitude returns the Longitude field value if set, zero value otherwise.
func (o *RecommendFriend) GetLongitude() float64 {
	if o == nil || IsNil(o.Longitude) {
		var ret float64
		return ret
	}
	return *o.Longitude
}

// GetLongitudeOk returns a tuple with the Longitude field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecommendFriend) GetLongitudeOk() (*float64, bool) {
	if o == nil || IsNil(o.Longitude) {
		return nil, false
	}
	return o.Longitude, true
}

// HasLongitude returns a boolean if a field has been set.
func (o *RecommendFriend) HasLongitude() bool {
	if o != nil && !IsNil(o.Longitude) {
		return true
	}

	return false
}

// SetLongitude gets a reference to the given float64 and assigns it to the Longitude field.
func (o *RecommendFriend) SetLongitude(v float64) {
	o.Longitude = &v
}

// GetDistance returns the Distance field value if set, zero value otherwise.
func (o *RecommendFriend) GetDistance() int64 {
	if o == nil || IsNil(o.Distance) {
		var ret int64
		return ret
	}
	return *o.Distance
}

// GetDistanceOk returns a tuple with the Distance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecommendFriend) GetDistanceOk() (*int64, bool) {
	if o == nil || IsNil(o.Distance) {
		return nil, false
	}
	return o.Distance, true
}

// HasDistance returns a boolean if a field has been set.
func (o *RecommendFriend) HasDistance() bool {
	if o != nil && !IsNil(o.Distance) {
		return true
	}

	return false
}

// SetDistance gets a reference to the given int64 and assigns it to the Distance field.
func (o *RecommendFriend) SetDistance(v int64) {
	o.Distance = &v
}

func (o RecommendFriend) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RecommendFriend) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.UserID) {
		toSerialize["userID"] = o.UserID
	}
	if o.NickName.IsSet() {
		toSerialize["nickName"] = o.NickName.Get()
	}
	if o.Avatar.IsSet() {
		toSerialize["avatar"] = o.Avatar.Get()
	}
	if o.Gender.IsSet() {
		toSerialize["gender"] = o.Gender.Get()
	}
	if !IsNil(o.Age) {
		toSerialize["age"] = o.Age
	}
	if o.InterestTags.IsSet() {
		toSerialize["interestTags"] = o.InterestTags.Get()
	}
	if o.LocationName.IsSet() {
		toSerialize["locationName"] = o.LocationName.Get()
	}
	if !IsNil(o.Latitude) {
		toSerialize["latitude"] = o.Latitude
	}
	if !IsNil(o.Longitude) {
		toSerialize["longitude"] = o.Longitude
	}
	if !IsNil(o.Distance) {
		toSerialize["distance"] = o.Distance
	}
	return toSerialize, nil
}

type NullableRecommendFriend struct {
	value *RecommendFriend
	isSet bool
}

func (v NullableRecommendFriend) Get() *RecommendFriend {
	return v.value
}

func (v *NullableRecommendFriend) Set(val *RecommendFriend) {
	v.value = val
	v.isSet = true
}

func (v NullableRecommendFriend) IsSet() bool {
	return v.isSet
}

func (v *NullableRecommendFriend) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRecommendFriend(val *RecommendFriend) *NullableRecommendFriend {
	return &NullableRecommendFriend{value: val, isSet: true}
}

func (v NullableRecommendFriend) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRecommendFriend) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


