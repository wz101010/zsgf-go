/*
全部  API 文档

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package zsgf

import (
	"encoding/json"
	"time"
)

// checks if the ServiceGroup type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServiceGroup{}

// ServiceGroup 服务功能分组实体，用于对服务功能进行分类和管理。
type ServiceGroup struct {
	// 服务功能分组的唯一标识符。
	Id *int64 `json:"id,omitempty"`
	// 关联的服务商的唯一标识符。
	ProviderID *int64 `json:"providerID,omitempty"`
	// 服务功能分组的名称。
	Name NullableString `json:"name,omitempty"`
	// 服务功能分组的唯一代码，用于系统内部标识。
	Code NullableString `json:"code,omitempty"`
	// 服务功能分组的图标URL或路径。
	Icon NullableString `json:"icon,omitempty"`
	// 服务功能分组的详细描述信息。
	Description NullableString `json:"description,omitempty"`
	// 指示服务功能分组是否在界面上显示。
	Show *bool `json:"show,omitempty"`
	// 服务功能分组在界面上的显示顺序。
	ShowIndex *int32 `json:"showIndex,omitempty"`
	// 服务功能分组的创建日期，默认为当前时间。
	CreateDate *time.Time `json:"createDate,omitempty"`
	// 服务功能分组的最后更新日期，默认为当前时间。
	LastUpdate *time.Time `json:"lastUpdate,omitempty"`
}

// NewServiceGroup instantiates a new ServiceGroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceGroup() *ServiceGroup {
	this := ServiceGroup{}
	return &this
}

// NewServiceGroupWithDefaults instantiates a new ServiceGroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceGroupWithDefaults() *ServiceGroup {
	this := ServiceGroup{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ServiceGroup) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceGroup) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ServiceGroup) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *ServiceGroup) SetId(v int64) {
	o.Id = &v
}

// GetProviderID returns the ProviderID field value if set, zero value otherwise.
func (o *ServiceGroup) GetProviderID() int64 {
	if o == nil || IsNil(o.ProviderID) {
		var ret int64
		return ret
	}
	return *o.ProviderID
}

// GetProviderIDOk returns a tuple with the ProviderID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceGroup) GetProviderIDOk() (*int64, bool) {
	if o == nil || IsNil(o.ProviderID) {
		return nil, false
	}
	return o.ProviderID, true
}

// HasProviderID returns a boolean if a field has been set.
func (o *ServiceGroup) HasProviderID() bool {
	if o != nil && !IsNil(o.ProviderID) {
		return true
	}

	return false
}

// SetProviderID gets a reference to the given int64 and assigns it to the ProviderID field.
func (o *ServiceGroup) SetProviderID(v int64) {
	o.ProviderID = &v
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceGroup) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceGroup) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *ServiceGroup) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *ServiceGroup) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *ServiceGroup) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *ServiceGroup) UnsetName() {
	o.Name.Unset()
}

// GetCode returns the Code field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceGroup) GetCode() string {
	if o == nil || IsNil(o.Code.Get()) {
		var ret string
		return ret
	}
	return *o.Code.Get()
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceGroup) GetCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Code.Get(), o.Code.IsSet()
}

// HasCode returns a boolean if a field has been set.
func (o *ServiceGroup) HasCode() bool {
	if o != nil && o.Code.IsSet() {
		return true
	}

	return false
}

// SetCode gets a reference to the given NullableString and assigns it to the Code field.
func (o *ServiceGroup) SetCode(v string) {
	o.Code.Set(&v)
}
// SetCodeNil sets the value for Code to be an explicit nil
func (o *ServiceGroup) SetCodeNil() {
	o.Code.Set(nil)
}

// UnsetCode ensures that no value is present for Code, not even an explicit nil
func (o *ServiceGroup) UnsetCode() {
	o.Code.Unset()
}

// GetIcon returns the Icon field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceGroup) GetIcon() string {
	if o == nil || IsNil(o.Icon.Get()) {
		var ret string
		return ret
	}
	return *o.Icon.Get()
}

// GetIconOk returns a tuple with the Icon field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceGroup) GetIconOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Icon.Get(), o.Icon.IsSet()
}

// HasIcon returns a boolean if a field has been set.
func (o *ServiceGroup) HasIcon() bool {
	if o != nil && o.Icon.IsSet() {
		return true
	}

	return false
}

// SetIcon gets a reference to the given NullableString and assigns it to the Icon field.
func (o *ServiceGroup) SetIcon(v string) {
	o.Icon.Set(&v)
}
// SetIconNil sets the value for Icon to be an explicit nil
func (o *ServiceGroup) SetIconNil() {
	o.Icon.Set(nil)
}

// UnsetIcon ensures that no value is present for Icon, not even an explicit nil
func (o *ServiceGroup) UnsetIcon() {
	o.Icon.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceGroup) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceGroup) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *ServiceGroup) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *ServiceGroup) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *ServiceGroup) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *ServiceGroup) UnsetDescription() {
	o.Description.Unset()
}

// GetShow returns the Show field value if set, zero value otherwise.
func (o *ServiceGroup) GetShow() bool {
	if o == nil || IsNil(o.Show) {
		var ret bool
		return ret
	}
	return *o.Show
}

// GetShowOk returns a tuple with the Show field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceGroup) GetShowOk() (*bool, bool) {
	if o == nil || IsNil(o.Show) {
		return nil, false
	}
	return o.Show, true
}

// HasShow returns a boolean if a field has been set.
func (o *ServiceGroup) HasShow() bool {
	if o != nil && !IsNil(o.Show) {
		return true
	}

	return false
}

// SetShow gets a reference to the given bool and assigns it to the Show field.
func (o *ServiceGroup) SetShow(v bool) {
	o.Show = &v
}

// GetShowIndex returns the ShowIndex field value if set, zero value otherwise.
func (o *ServiceGroup) GetShowIndex() int32 {
	if o == nil || IsNil(o.ShowIndex) {
		var ret int32
		return ret
	}
	return *o.ShowIndex
}

// GetShowIndexOk returns a tuple with the ShowIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceGroup) GetShowIndexOk() (*int32, bool) {
	if o == nil || IsNil(o.ShowIndex) {
		return nil, false
	}
	return o.ShowIndex, true
}

// HasShowIndex returns a boolean if a field has been set.
func (o *ServiceGroup) HasShowIndex() bool {
	if o != nil && !IsNil(o.ShowIndex) {
		return true
	}

	return false
}

// SetShowIndex gets a reference to the given int32 and assigns it to the ShowIndex field.
func (o *ServiceGroup) SetShowIndex(v int32) {
	o.ShowIndex = &v
}

// GetCreateDate returns the CreateDate field value if set, zero value otherwise.
func (o *ServiceGroup) GetCreateDate() time.Time {
	if o == nil || IsNil(o.CreateDate) {
		var ret time.Time
		return ret
	}
	return *o.CreateDate
}

// GetCreateDateOk returns a tuple with the CreateDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceGroup) GetCreateDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreateDate) {
		return nil, false
	}
	return o.CreateDate, true
}

// HasCreateDate returns a boolean if a field has been set.
func (o *ServiceGroup) HasCreateDate() bool {
	if o != nil && !IsNil(o.CreateDate) {
		return true
	}

	return false
}

// SetCreateDate gets a reference to the given time.Time and assigns it to the CreateDate field.
func (o *ServiceGroup) SetCreateDate(v time.Time) {
	o.CreateDate = &v
}

// GetLastUpdate returns the LastUpdate field value if set, zero value otherwise.
func (o *ServiceGroup) GetLastUpdate() time.Time {
	if o == nil || IsNil(o.LastUpdate) {
		var ret time.Time
		return ret
	}
	return *o.LastUpdate
}

// GetLastUpdateOk returns a tuple with the LastUpdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceGroup) GetLastUpdateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastUpdate) {
		return nil, false
	}
	return o.LastUpdate, true
}

// HasLastUpdate returns a boolean if a field has been set.
func (o *ServiceGroup) HasLastUpdate() bool {
	if o != nil && !IsNil(o.LastUpdate) {
		return true
	}

	return false
}

// SetLastUpdate gets a reference to the given time.Time and assigns it to the LastUpdate field.
func (o *ServiceGroup) SetLastUpdate(v time.Time) {
	o.LastUpdate = &v
}

func (o ServiceGroup) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServiceGroup) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.ProviderID) {
		toSerialize["providerID"] = o.ProviderID
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.Code.IsSet() {
		toSerialize["code"] = o.Code.Get()
	}
	if o.Icon.IsSet() {
		toSerialize["icon"] = o.Icon.Get()
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if !IsNil(o.Show) {
		toSerialize["show"] = o.Show
	}
	if !IsNil(o.ShowIndex) {
		toSerialize["showIndex"] = o.ShowIndex
	}
	if !IsNil(o.CreateDate) {
		toSerialize["createDate"] = o.CreateDate
	}
	if !IsNil(o.LastUpdate) {
		toSerialize["lastUpdate"] = o.LastUpdate
	}
	return toSerialize, nil
}

type NullableServiceGroup struct {
	value *ServiceGroup
	isSet bool
}

func (v NullableServiceGroup) Get() *ServiceGroup {
	return v.value
}

func (v *NullableServiceGroup) Set(val *ServiceGroup) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceGroup(val *ServiceGroup) *NullableServiceGroup {
	return &NullableServiceGroup{value: val, isSet: true}
}

func (v NullableServiceGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


