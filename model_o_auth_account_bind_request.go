/*
全部  API 文档

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package zsgf

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the OAuthAccountBindRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OAuthAccountBindRequest{}

// OAuthAccountBindRequest struct for OAuthAccountBindRequest
type OAuthAccountBindRequest struct {
	UnionID string `json:"unionID"`
	Platform string `json:"platform"`
	PlatformName string `json:"platformName"`
	Avatar NullableString `json:"avatar,omitempty"`
	Data NullableString `json:"data,omitempty"`
}

type _OAuthAccountBindRequest OAuthAccountBindRequest

// NewOAuthAccountBindRequest instantiates a new OAuthAccountBindRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOAuthAccountBindRequest(unionID string, platform string, platformName string) *OAuthAccountBindRequest {
	this := OAuthAccountBindRequest{}
	this.UnionID = unionID
	this.Platform = platform
	this.PlatformName = platformName
	return &this
}

// NewOAuthAccountBindRequestWithDefaults instantiates a new OAuthAccountBindRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOAuthAccountBindRequestWithDefaults() *OAuthAccountBindRequest {
	this := OAuthAccountBindRequest{}
	return &this
}

// GetUnionID returns the UnionID field value
func (o *OAuthAccountBindRequest) GetUnionID() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UnionID
}

// GetUnionIDOk returns a tuple with the UnionID field value
// and a boolean to check if the value has been set.
func (o *OAuthAccountBindRequest) GetUnionIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UnionID, true
}

// SetUnionID sets field value
func (o *OAuthAccountBindRequest) SetUnionID(v string) {
	o.UnionID = v
}

// GetPlatform returns the Platform field value
func (o *OAuthAccountBindRequest) GetPlatform() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Platform
}

// GetPlatformOk returns a tuple with the Platform field value
// and a boolean to check if the value has been set.
func (o *OAuthAccountBindRequest) GetPlatformOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Platform, true
}

// SetPlatform sets field value
func (o *OAuthAccountBindRequest) SetPlatform(v string) {
	o.Platform = v
}

// GetPlatformName returns the PlatformName field value
func (o *OAuthAccountBindRequest) GetPlatformName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PlatformName
}

// GetPlatformNameOk returns a tuple with the PlatformName field value
// and a boolean to check if the value has been set.
func (o *OAuthAccountBindRequest) GetPlatformNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PlatformName, true
}

// SetPlatformName sets field value
func (o *OAuthAccountBindRequest) SetPlatformName(v string) {
	o.PlatformName = v
}

// GetAvatar returns the Avatar field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OAuthAccountBindRequest) GetAvatar() string {
	if o == nil || IsNil(o.Avatar.Get()) {
		var ret string
		return ret
	}
	return *o.Avatar.Get()
}

// GetAvatarOk returns a tuple with the Avatar field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OAuthAccountBindRequest) GetAvatarOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Avatar.Get(), o.Avatar.IsSet()
}

// HasAvatar returns a boolean if a field has been set.
func (o *OAuthAccountBindRequest) HasAvatar() bool {
	if o != nil && o.Avatar.IsSet() {
		return true
	}

	return false
}

// SetAvatar gets a reference to the given NullableString and assigns it to the Avatar field.
func (o *OAuthAccountBindRequest) SetAvatar(v string) {
	o.Avatar.Set(&v)
}
// SetAvatarNil sets the value for Avatar to be an explicit nil
func (o *OAuthAccountBindRequest) SetAvatarNil() {
	o.Avatar.Set(nil)
}

// UnsetAvatar ensures that no value is present for Avatar, not even an explicit nil
func (o *OAuthAccountBindRequest) UnsetAvatar() {
	o.Avatar.Unset()
}

// GetData returns the Data field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OAuthAccountBindRequest) GetData() string {
	if o == nil || IsNil(o.Data.Get()) {
		var ret string
		return ret
	}
	return *o.Data.Get()
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OAuthAccountBindRequest) GetDataOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data.Get(), o.Data.IsSet()
}

// HasData returns a boolean if a field has been set.
func (o *OAuthAccountBindRequest) HasData() bool {
	if o != nil && o.Data.IsSet() {
		return true
	}

	return false
}

// SetData gets a reference to the given NullableString and assigns it to the Data field.
func (o *OAuthAccountBindRequest) SetData(v string) {
	o.Data.Set(&v)
}
// SetDataNil sets the value for Data to be an explicit nil
func (o *OAuthAccountBindRequest) SetDataNil() {
	o.Data.Set(nil)
}

// UnsetData ensures that no value is present for Data, not even an explicit nil
func (o *OAuthAccountBindRequest) UnsetData() {
	o.Data.Unset()
}

func (o OAuthAccountBindRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OAuthAccountBindRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["unionID"] = o.UnionID
	toSerialize["platform"] = o.Platform
	toSerialize["platformName"] = o.PlatformName
	if o.Avatar.IsSet() {
		toSerialize["avatar"] = o.Avatar.Get()
	}
	if o.Data.IsSet() {
		toSerialize["data"] = o.Data.Get()
	}
	return toSerialize, nil
}

func (o *OAuthAccountBindRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"unionID",
		"platform",
		"platformName",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOAuthAccountBindRequest := _OAuthAccountBindRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varOAuthAccountBindRequest)

	if err != nil {
		return err
	}

	*o = OAuthAccountBindRequest(varOAuthAccountBindRequest)

	return err
}

type NullableOAuthAccountBindRequest struct {
	value *OAuthAccountBindRequest
	isSet bool
}

func (v NullableOAuthAccountBindRequest) Get() *OAuthAccountBindRequest {
	return v.value
}

func (v *NullableOAuthAccountBindRequest) Set(val *OAuthAccountBindRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableOAuthAccountBindRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableOAuthAccountBindRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOAuthAccountBindRequest(val *OAuthAccountBindRequest) *NullableOAuthAccountBindRequest {
	return &NullableOAuthAccountBindRequest{value: val, isSet: true}
}

func (v NullableOAuthAccountBindRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOAuthAccountBindRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


