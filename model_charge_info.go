/*
全部  API 文档

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package zsgf

import (
	"encoding/json"
)

// checks if the ChargeInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChargeInfo{}

// ChargeInfo struct for ChargeInfo
type ChargeInfo struct {
	ChargeFee NullableString `json:"chargeFee,omitempty"`
	ChargeType NullableString `json:"chargeType,omitempty"`
	IsRatingOnSwitch NullableString `json:"isRatingOnSwitch,omitempty"`
	IsRatingOnTradeReceiver NullableString `json:"isRatingOnTradeReceiver,omitempty"`
	OriginalChargeFee NullableString `json:"originalChargeFee,omitempty"`
	SubFeeDetailList []SubFee `json:"subFeeDetailList,omitempty"`
	SwitchFeeRate NullableString `json:"switchFeeRate,omitempty"`
}

// NewChargeInfo instantiates a new ChargeInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChargeInfo() *ChargeInfo {
	this := ChargeInfo{}
	return &this
}

// NewChargeInfoWithDefaults instantiates a new ChargeInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChargeInfoWithDefaults() *ChargeInfo {
	this := ChargeInfo{}
	return &this
}

// GetChargeFee returns the ChargeFee field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ChargeInfo) GetChargeFee() string {
	if o == nil || IsNil(o.ChargeFee.Get()) {
		var ret string
		return ret
	}
	return *o.ChargeFee.Get()
}

// GetChargeFeeOk returns a tuple with the ChargeFee field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ChargeInfo) GetChargeFeeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ChargeFee.Get(), o.ChargeFee.IsSet()
}

// HasChargeFee returns a boolean if a field has been set.
func (o *ChargeInfo) HasChargeFee() bool {
	if o != nil && o.ChargeFee.IsSet() {
		return true
	}

	return false
}

// SetChargeFee gets a reference to the given NullableString and assigns it to the ChargeFee field.
func (o *ChargeInfo) SetChargeFee(v string) {
	o.ChargeFee.Set(&v)
}
// SetChargeFeeNil sets the value for ChargeFee to be an explicit nil
func (o *ChargeInfo) SetChargeFeeNil() {
	o.ChargeFee.Set(nil)
}

// UnsetChargeFee ensures that no value is present for ChargeFee, not even an explicit nil
func (o *ChargeInfo) UnsetChargeFee() {
	o.ChargeFee.Unset()
}

// GetChargeType returns the ChargeType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ChargeInfo) GetChargeType() string {
	if o == nil || IsNil(o.ChargeType.Get()) {
		var ret string
		return ret
	}
	return *o.ChargeType.Get()
}

// GetChargeTypeOk returns a tuple with the ChargeType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ChargeInfo) GetChargeTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ChargeType.Get(), o.ChargeType.IsSet()
}

// HasChargeType returns a boolean if a field has been set.
func (o *ChargeInfo) HasChargeType() bool {
	if o != nil && o.ChargeType.IsSet() {
		return true
	}

	return false
}

// SetChargeType gets a reference to the given NullableString and assigns it to the ChargeType field.
func (o *ChargeInfo) SetChargeType(v string) {
	o.ChargeType.Set(&v)
}
// SetChargeTypeNil sets the value for ChargeType to be an explicit nil
func (o *ChargeInfo) SetChargeTypeNil() {
	o.ChargeType.Set(nil)
}

// UnsetChargeType ensures that no value is present for ChargeType, not even an explicit nil
func (o *ChargeInfo) UnsetChargeType() {
	o.ChargeType.Unset()
}

// GetIsRatingOnSwitch returns the IsRatingOnSwitch field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ChargeInfo) GetIsRatingOnSwitch() string {
	if o == nil || IsNil(o.IsRatingOnSwitch.Get()) {
		var ret string
		return ret
	}
	return *o.IsRatingOnSwitch.Get()
}

// GetIsRatingOnSwitchOk returns a tuple with the IsRatingOnSwitch field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ChargeInfo) GetIsRatingOnSwitchOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsRatingOnSwitch.Get(), o.IsRatingOnSwitch.IsSet()
}

// HasIsRatingOnSwitch returns a boolean if a field has been set.
func (o *ChargeInfo) HasIsRatingOnSwitch() bool {
	if o != nil && o.IsRatingOnSwitch.IsSet() {
		return true
	}

	return false
}

// SetIsRatingOnSwitch gets a reference to the given NullableString and assigns it to the IsRatingOnSwitch field.
func (o *ChargeInfo) SetIsRatingOnSwitch(v string) {
	o.IsRatingOnSwitch.Set(&v)
}
// SetIsRatingOnSwitchNil sets the value for IsRatingOnSwitch to be an explicit nil
func (o *ChargeInfo) SetIsRatingOnSwitchNil() {
	o.IsRatingOnSwitch.Set(nil)
}

// UnsetIsRatingOnSwitch ensures that no value is present for IsRatingOnSwitch, not even an explicit nil
func (o *ChargeInfo) UnsetIsRatingOnSwitch() {
	o.IsRatingOnSwitch.Unset()
}

// GetIsRatingOnTradeReceiver returns the IsRatingOnTradeReceiver field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ChargeInfo) GetIsRatingOnTradeReceiver() string {
	if o == nil || IsNil(o.IsRatingOnTradeReceiver.Get()) {
		var ret string
		return ret
	}
	return *o.IsRatingOnTradeReceiver.Get()
}

// GetIsRatingOnTradeReceiverOk returns a tuple with the IsRatingOnTradeReceiver field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ChargeInfo) GetIsRatingOnTradeReceiverOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsRatingOnTradeReceiver.Get(), o.IsRatingOnTradeReceiver.IsSet()
}

// HasIsRatingOnTradeReceiver returns a boolean if a field has been set.
func (o *ChargeInfo) HasIsRatingOnTradeReceiver() bool {
	if o != nil && o.IsRatingOnTradeReceiver.IsSet() {
		return true
	}

	return false
}

// SetIsRatingOnTradeReceiver gets a reference to the given NullableString and assigns it to the IsRatingOnTradeReceiver field.
func (o *ChargeInfo) SetIsRatingOnTradeReceiver(v string) {
	o.IsRatingOnTradeReceiver.Set(&v)
}
// SetIsRatingOnTradeReceiverNil sets the value for IsRatingOnTradeReceiver to be an explicit nil
func (o *ChargeInfo) SetIsRatingOnTradeReceiverNil() {
	o.IsRatingOnTradeReceiver.Set(nil)
}

// UnsetIsRatingOnTradeReceiver ensures that no value is present for IsRatingOnTradeReceiver, not even an explicit nil
func (o *ChargeInfo) UnsetIsRatingOnTradeReceiver() {
	o.IsRatingOnTradeReceiver.Unset()
}

// GetOriginalChargeFee returns the OriginalChargeFee field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ChargeInfo) GetOriginalChargeFee() string {
	if o == nil || IsNil(o.OriginalChargeFee.Get()) {
		var ret string
		return ret
	}
	return *o.OriginalChargeFee.Get()
}

// GetOriginalChargeFeeOk returns a tuple with the OriginalChargeFee field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ChargeInfo) GetOriginalChargeFeeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OriginalChargeFee.Get(), o.OriginalChargeFee.IsSet()
}

// HasOriginalChargeFee returns a boolean if a field has been set.
func (o *ChargeInfo) HasOriginalChargeFee() bool {
	if o != nil && o.OriginalChargeFee.IsSet() {
		return true
	}

	return false
}

// SetOriginalChargeFee gets a reference to the given NullableString and assigns it to the OriginalChargeFee field.
func (o *ChargeInfo) SetOriginalChargeFee(v string) {
	o.OriginalChargeFee.Set(&v)
}
// SetOriginalChargeFeeNil sets the value for OriginalChargeFee to be an explicit nil
func (o *ChargeInfo) SetOriginalChargeFeeNil() {
	o.OriginalChargeFee.Set(nil)
}

// UnsetOriginalChargeFee ensures that no value is present for OriginalChargeFee, not even an explicit nil
func (o *ChargeInfo) UnsetOriginalChargeFee() {
	o.OriginalChargeFee.Unset()
}

// GetSubFeeDetailList returns the SubFeeDetailList field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ChargeInfo) GetSubFeeDetailList() []SubFee {
	if o == nil {
		var ret []SubFee
		return ret
	}
	return o.SubFeeDetailList
}

// GetSubFeeDetailListOk returns a tuple with the SubFeeDetailList field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ChargeInfo) GetSubFeeDetailListOk() ([]SubFee, bool) {
	if o == nil || IsNil(o.SubFeeDetailList) {
		return nil, false
	}
	return o.SubFeeDetailList, true
}

// HasSubFeeDetailList returns a boolean if a field has been set.
func (o *ChargeInfo) HasSubFeeDetailList() bool {
	if o != nil && !IsNil(o.SubFeeDetailList) {
		return true
	}

	return false
}

// SetSubFeeDetailList gets a reference to the given []SubFee and assigns it to the SubFeeDetailList field.
func (o *ChargeInfo) SetSubFeeDetailList(v []SubFee) {
	o.SubFeeDetailList = v
}

// GetSwitchFeeRate returns the SwitchFeeRate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ChargeInfo) GetSwitchFeeRate() string {
	if o == nil || IsNil(o.SwitchFeeRate.Get()) {
		var ret string
		return ret
	}
	return *o.SwitchFeeRate.Get()
}

// GetSwitchFeeRateOk returns a tuple with the SwitchFeeRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ChargeInfo) GetSwitchFeeRateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SwitchFeeRate.Get(), o.SwitchFeeRate.IsSet()
}

// HasSwitchFeeRate returns a boolean if a field has been set.
func (o *ChargeInfo) HasSwitchFeeRate() bool {
	if o != nil && o.SwitchFeeRate.IsSet() {
		return true
	}

	return false
}

// SetSwitchFeeRate gets a reference to the given NullableString and assigns it to the SwitchFeeRate field.
func (o *ChargeInfo) SetSwitchFeeRate(v string) {
	o.SwitchFeeRate.Set(&v)
}
// SetSwitchFeeRateNil sets the value for SwitchFeeRate to be an explicit nil
func (o *ChargeInfo) SetSwitchFeeRateNil() {
	o.SwitchFeeRate.Set(nil)
}

// UnsetSwitchFeeRate ensures that no value is present for SwitchFeeRate, not even an explicit nil
func (o *ChargeInfo) UnsetSwitchFeeRate() {
	o.SwitchFeeRate.Unset()
}

func (o ChargeInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChargeInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ChargeFee.IsSet() {
		toSerialize["chargeFee"] = o.ChargeFee.Get()
	}
	if o.ChargeType.IsSet() {
		toSerialize["chargeType"] = o.ChargeType.Get()
	}
	if o.IsRatingOnSwitch.IsSet() {
		toSerialize["isRatingOnSwitch"] = o.IsRatingOnSwitch.Get()
	}
	if o.IsRatingOnTradeReceiver.IsSet() {
		toSerialize["isRatingOnTradeReceiver"] = o.IsRatingOnTradeReceiver.Get()
	}
	if o.OriginalChargeFee.IsSet() {
		toSerialize["originalChargeFee"] = o.OriginalChargeFee.Get()
	}
	if o.SubFeeDetailList != nil {
		toSerialize["subFeeDetailList"] = o.SubFeeDetailList
	}
	if o.SwitchFeeRate.IsSet() {
		toSerialize["switchFeeRate"] = o.SwitchFeeRate.Get()
	}
	return toSerialize, nil
}

type NullableChargeInfo struct {
	value *ChargeInfo
	isSet bool
}

func (v NullableChargeInfo) Get() *ChargeInfo {
	return v.value
}

func (v *NullableChargeInfo) Set(val *ChargeInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableChargeInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableChargeInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChargeInfo(val *ChargeInfo) *NullableChargeInfo {
	return &NullableChargeInfo{value: val, isSet: true}
}

func (v NullableChargeInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChargeInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


