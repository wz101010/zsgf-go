/*
全部  API 文档

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package zsgf

import (
	"encoding/json"
	"time"
)

// checks if the UserLogins type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserLogins{}

// UserLogins 用户外部账号
type UserLogins struct {
	// 唯一标识符
	Id *int64 `json:"id,omitempty"`
	// 关联的用户ID
	UserID *int64 `json:"userID,omitempty"`
	// 第三方平台名称
	PlatformName NullableString `json:"platformName,omitempty"`
	// 第三方平台
	Platform NullableString `json:"platform,omitempty"`
	// 第三方平台唯一标识
	UnionID NullableString `json:"unionID,omitempty"`
	// 用户头像
	Avatar NullableString `json:"avatar,omitempty"`
	// 扩展数据
	Data NullableString `json:"data,omitempty"`
	// 启用
	Enable *bool `json:"enable,omitempty"`
	// 创建时间
	CreateDate *time.Time `json:"createDate,omitempty"`
	// 最后更新时间
	LastUpdate *time.Time `json:"lastUpdate,omitempty"`
}

// NewUserLogins instantiates a new UserLogins object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserLogins() *UserLogins {
	this := UserLogins{}
	return &this
}

// NewUserLoginsWithDefaults instantiates a new UserLogins object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserLoginsWithDefaults() *UserLogins {
	this := UserLogins{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *UserLogins) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserLogins) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *UserLogins) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *UserLogins) SetId(v int64) {
	o.Id = &v
}

// GetUserID returns the UserID field value if set, zero value otherwise.
func (o *UserLogins) GetUserID() int64 {
	if o == nil || IsNil(o.UserID) {
		var ret int64
		return ret
	}
	return *o.UserID
}

// GetUserIDOk returns a tuple with the UserID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserLogins) GetUserIDOk() (*int64, bool) {
	if o == nil || IsNil(o.UserID) {
		return nil, false
	}
	return o.UserID, true
}

// HasUserID returns a boolean if a field has been set.
func (o *UserLogins) HasUserID() bool {
	if o != nil && !IsNil(o.UserID) {
		return true
	}

	return false
}

// SetUserID gets a reference to the given int64 and assigns it to the UserID field.
func (o *UserLogins) SetUserID(v int64) {
	o.UserID = &v
}

// GetPlatformName returns the PlatformName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UserLogins) GetPlatformName() string {
	if o == nil || IsNil(o.PlatformName.Get()) {
		var ret string
		return ret
	}
	return *o.PlatformName.Get()
}

// GetPlatformNameOk returns a tuple with the PlatformName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UserLogins) GetPlatformNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PlatformName.Get(), o.PlatformName.IsSet()
}

// HasPlatformName returns a boolean if a field has been set.
func (o *UserLogins) HasPlatformName() bool {
	if o != nil && o.PlatformName.IsSet() {
		return true
	}

	return false
}

// SetPlatformName gets a reference to the given NullableString and assigns it to the PlatformName field.
func (o *UserLogins) SetPlatformName(v string) {
	o.PlatformName.Set(&v)
}
// SetPlatformNameNil sets the value for PlatformName to be an explicit nil
func (o *UserLogins) SetPlatformNameNil() {
	o.PlatformName.Set(nil)
}

// UnsetPlatformName ensures that no value is present for PlatformName, not even an explicit nil
func (o *UserLogins) UnsetPlatformName() {
	o.PlatformName.Unset()
}

// GetPlatform returns the Platform field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UserLogins) GetPlatform() string {
	if o == nil || IsNil(o.Platform.Get()) {
		var ret string
		return ret
	}
	return *o.Platform.Get()
}

// GetPlatformOk returns a tuple with the Platform field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UserLogins) GetPlatformOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Platform.Get(), o.Platform.IsSet()
}

// HasPlatform returns a boolean if a field has been set.
func (o *UserLogins) HasPlatform() bool {
	if o != nil && o.Platform.IsSet() {
		return true
	}

	return false
}

// SetPlatform gets a reference to the given NullableString and assigns it to the Platform field.
func (o *UserLogins) SetPlatform(v string) {
	o.Platform.Set(&v)
}
// SetPlatformNil sets the value for Platform to be an explicit nil
func (o *UserLogins) SetPlatformNil() {
	o.Platform.Set(nil)
}

// UnsetPlatform ensures that no value is present for Platform, not even an explicit nil
func (o *UserLogins) UnsetPlatform() {
	o.Platform.Unset()
}

// GetUnionID returns the UnionID field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UserLogins) GetUnionID() string {
	if o == nil || IsNil(o.UnionID.Get()) {
		var ret string
		return ret
	}
	return *o.UnionID.Get()
}

// GetUnionIDOk returns a tuple with the UnionID field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UserLogins) GetUnionIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UnionID.Get(), o.UnionID.IsSet()
}

// HasUnionID returns a boolean if a field has been set.
func (o *UserLogins) HasUnionID() bool {
	if o != nil && o.UnionID.IsSet() {
		return true
	}

	return false
}

// SetUnionID gets a reference to the given NullableString and assigns it to the UnionID field.
func (o *UserLogins) SetUnionID(v string) {
	o.UnionID.Set(&v)
}
// SetUnionIDNil sets the value for UnionID to be an explicit nil
func (o *UserLogins) SetUnionIDNil() {
	o.UnionID.Set(nil)
}

// UnsetUnionID ensures that no value is present for UnionID, not even an explicit nil
func (o *UserLogins) UnsetUnionID() {
	o.UnionID.Unset()
}

// GetAvatar returns the Avatar field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UserLogins) GetAvatar() string {
	if o == nil || IsNil(o.Avatar.Get()) {
		var ret string
		return ret
	}
	return *o.Avatar.Get()
}

// GetAvatarOk returns a tuple with the Avatar field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UserLogins) GetAvatarOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Avatar.Get(), o.Avatar.IsSet()
}

// HasAvatar returns a boolean if a field has been set.
func (o *UserLogins) HasAvatar() bool {
	if o != nil && o.Avatar.IsSet() {
		return true
	}

	return false
}

// SetAvatar gets a reference to the given NullableString and assigns it to the Avatar field.
func (o *UserLogins) SetAvatar(v string) {
	o.Avatar.Set(&v)
}
// SetAvatarNil sets the value for Avatar to be an explicit nil
func (o *UserLogins) SetAvatarNil() {
	o.Avatar.Set(nil)
}

// UnsetAvatar ensures that no value is present for Avatar, not even an explicit nil
func (o *UserLogins) UnsetAvatar() {
	o.Avatar.Unset()
}

// GetData returns the Data field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UserLogins) GetData() string {
	if o == nil || IsNil(o.Data.Get()) {
		var ret string
		return ret
	}
	return *o.Data.Get()
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UserLogins) GetDataOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data.Get(), o.Data.IsSet()
}

// HasData returns a boolean if a field has been set.
func (o *UserLogins) HasData() bool {
	if o != nil && o.Data.IsSet() {
		return true
	}

	return false
}

// SetData gets a reference to the given NullableString and assigns it to the Data field.
func (o *UserLogins) SetData(v string) {
	o.Data.Set(&v)
}
// SetDataNil sets the value for Data to be an explicit nil
func (o *UserLogins) SetDataNil() {
	o.Data.Set(nil)
}

// UnsetData ensures that no value is present for Data, not even an explicit nil
func (o *UserLogins) UnsetData() {
	o.Data.Unset()
}

// GetEnable returns the Enable field value if set, zero value otherwise.
func (o *UserLogins) GetEnable() bool {
	if o == nil || IsNil(o.Enable) {
		var ret bool
		return ret
	}
	return *o.Enable
}

// GetEnableOk returns a tuple with the Enable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserLogins) GetEnableOk() (*bool, bool) {
	if o == nil || IsNil(o.Enable) {
		return nil, false
	}
	return o.Enable, true
}

// HasEnable returns a boolean if a field has been set.
func (o *UserLogins) HasEnable() bool {
	if o != nil && !IsNil(o.Enable) {
		return true
	}

	return false
}

// SetEnable gets a reference to the given bool and assigns it to the Enable field.
func (o *UserLogins) SetEnable(v bool) {
	o.Enable = &v
}

// GetCreateDate returns the CreateDate field value if set, zero value otherwise.
func (o *UserLogins) GetCreateDate() time.Time {
	if o == nil || IsNil(o.CreateDate) {
		var ret time.Time
		return ret
	}
	return *o.CreateDate
}

// GetCreateDateOk returns a tuple with the CreateDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserLogins) GetCreateDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreateDate) {
		return nil, false
	}
	return o.CreateDate, true
}

// HasCreateDate returns a boolean if a field has been set.
func (o *UserLogins) HasCreateDate() bool {
	if o != nil && !IsNil(o.CreateDate) {
		return true
	}

	return false
}

// SetCreateDate gets a reference to the given time.Time and assigns it to the CreateDate field.
func (o *UserLogins) SetCreateDate(v time.Time) {
	o.CreateDate = &v
}

// GetLastUpdate returns the LastUpdate field value if set, zero value otherwise.
func (o *UserLogins) GetLastUpdate() time.Time {
	if o == nil || IsNil(o.LastUpdate) {
		var ret time.Time
		return ret
	}
	return *o.LastUpdate
}

// GetLastUpdateOk returns a tuple with the LastUpdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserLogins) GetLastUpdateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastUpdate) {
		return nil, false
	}
	return o.LastUpdate, true
}

// HasLastUpdate returns a boolean if a field has been set.
func (o *UserLogins) HasLastUpdate() bool {
	if o != nil && !IsNil(o.LastUpdate) {
		return true
	}

	return false
}

// SetLastUpdate gets a reference to the given time.Time and assigns it to the LastUpdate field.
func (o *UserLogins) SetLastUpdate(v time.Time) {
	o.LastUpdate = &v
}

func (o UserLogins) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserLogins) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.UserID) {
		toSerialize["userID"] = o.UserID
	}
	if o.PlatformName.IsSet() {
		toSerialize["platformName"] = o.PlatformName.Get()
	}
	if o.Platform.IsSet() {
		toSerialize["platform"] = o.Platform.Get()
	}
	if o.UnionID.IsSet() {
		toSerialize["unionID"] = o.UnionID.Get()
	}
	if o.Avatar.IsSet() {
		toSerialize["avatar"] = o.Avatar.Get()
	}
	if o.Data.IsSet() {
		toSerialize["data"] = o.Data.Get()
	}
	if !IsNil(o.Enable) {
		toSerialize["enable"] = o.Enable
	}
	if !IsNil(o.CreateDate) {
		toSerialize["createDate"] = o.CreateDate
	}
	if !IsNil(o.LastUpdate) {
		toSerialize["lastUpdate"] = o.LastUpdate
	}
	return toSerialize, nil
}

type NullableUserLogins struct {
	value *UserLogins
	isSet bool
}

func (v NullableUserLogins) Get() *UserLogins {
	return v.value
}

func (v *NullableUserLogins) Set(val *UserLogins) {
	v.value = val
	v.isSet = true
}

func (v NullableUserLogins) IsSet() bool {
	return v.isSet
}

func (v *NullableUserLogins) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserLogins(val *UserLogins) *NullableUserLogins {
	return &NullableUserLogins{value: val, isSet: true}
}

func (v NullableUserLogins) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserLogins) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


