/*
全部  API 文档

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package zsgf

import (
	"encoding/json"
)

// checks if the EnterprisePayInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EnterprisePayInfo{}

// EnterprisePayInfo struct for EnterprisePayInfo
type EnterprisePayInfo struct {
	BizInfo NullableString `json:"bizInfo,omitempty"`
	InvoiceAmount NullableString `json:"invoiceAmount,omitempty"`
	IsUseEnterprisePay *bool `json:"isUseEnterprisePay,omitempty"`
}

// NewEnterprisePayInfo instantiates a new EnterprisePayInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnterprisePayInfo() *EnterprisePayInfo {
	this := EnterprisePayInfo{}
	return &this
}

// NewEnterprisePayInfoWithDefaults instantiates a new EnterprisePayInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnterprisePayInfoWithDefaults() *EnterprisePayInfo {
	this := EnterprisePayInfo{}
	return &this
}

// GetBizInfo returns the BizInfo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EnterprisePayInfo) GetBizInfo() string {
	if o == nil || IsNil(o.BizInfo.Get()) {
		var ret string
		return ret
	}
	return *o.BizInfo.Get()
}

// GetBizInfoOk returns a tuple with the BizInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EnterprisePayInfo) GetBizInfoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BizInfo.Get(), o.BizInfo.IsSet()
}

// HasBizInfo returns a boolean if a field has been set.
func (o *EnterprisePayInfo) HasBizInfo() bool {
	if o != nil && o.BizInfo.IsSet() {
		return true
	}

	return false
}

// SetBizInfo gets a reference to the given NullableString and assigns it to the BizInfo field.
func (o *EnterprisePayInfo) SetBizInfo(v string) {
	o.BizInfo.Set(&v)
}
// SetBizInfoNil sets the value for BizInfo to be an explicit nil
func (o *EnterprisePayInfo) SetBizInfoNil() {
	o.BizInfo.Set(nil)
}

// UnsetBizInfo ensures that no value is present for BizInfo, not even an explicit nil
func (o *EnterprisePayInfo) UnsetBizInfo() {
	o.BizInfo.Unset()
}

// GetInvoiceAmount returns the InvoiceAmount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EnterprisePayInfo) GetInvoiceAmount() string {
	if o == nil || IsNil(o.InvoiceAmount.Get()) {
		var ret string
		return ret
	}
	return *o.InvoiceAmount.Get()
}

// GetInvoiceAmountOk returns a tuple with the InvoiceAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EnterprisePayInfo) GetInvoiceAmountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.InvoiceAmount.Get(), o.InvoiceAmount.IsSet()
}

// HasInvoiceAmount returns a boolean if a field has been set.
func (o *EnterprisePayInfo) HasInvoiceAmount() bool {
	if o != nil && o.InvoiceAmount.IsSet() {
		return true
	}

	return false
}

// SetInvoiceAmount gets a reference to the given NullableString and assigns it to the InvoiceAmount field.
func (o *EnterprisePayInfo) SetInvoiceAmount(v string) {
	o.InvoiceAmount.Set(&v)
}
// SetInvoiceAmountNil sets the value for InvoiceAmount to be an explicit nil
func (o *EnterprisePayInfo) SetInvoiceAmountNil() {
	o.InvoiceAmount.Set(nil)
}

// UnsetInvoiceAmount ensures that no value is present for InvoiceAmount, not even an explicit nil
func (o *EnterprisePayInfo) UnsetInvoiceAmount() {
	o.InvoiceAmount.Unset()
}

// GetIsUseEnterprisePay returns the IsUseEnterprisePay field value if set, zero value otherwise.
func (o *EnterprisePayInfo) GetIsUseEnterprisePay() bool {
	if o == nil || IsNil(o.IsUseEnterprisePay) {
		var ret bool
		return ret
	}
	return *o.IsUseEnterprisePay
}

// GetIsUseEnterprisePayOk returns a tuple with the IsUseEnterprisePay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnterprisePayInfo) GetIsUseEnterprisePayOk() (*bool, bool) {
	if o == nil || IsNil(o.IsUseEnterprisePay) {
		return nil, false
	}
	return o.IsUseEnterprisePay, true
}

// HasIsUseEnterprisePay returns a boolean if a field has been set.
func (o *EnterprisePayInfo) HasIsUseEnterprisePay() bool {
	if o != nil && !IsNil(o.IsUseEnterprisePay) {
		return true
	}

	return false
}

// SetIsUseEnterprisePay gets a reference to the given bool and assigns it to the IsUseEnterprisePay field.
func (o *EnterprisePayInfo) SetIsUseEnterprisePay(v bool) {
	o.IsUseEnterprisePay = &v
}

func (o EnterprisePayInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EnterprisePayInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.BizInfo.IsSet() {
		toSerialize["bizInfo"] = o.BizInfo.Get()
	}
	if o.InvoiceAmount.IsSet() {
		toSerialize["invoiceAmount"] = o.InvoiceAmount.Get()
	}
	if !IsNil(o.IsUseEnterprisePay) {
		toSerialize["isUseEnterprisePay"] = o.IsUseEnterprisePay
	}
	return toSerialize, nil
}

type NullableEnterprisePayInfo struct {
	value *EnterprisePayInfo
	isSet bool
}

func (v NullableEnterprisePayInfo) Get() *EnterprisePayInfo {
	return v.value
}

func (v *NullableEnterprisePayInfo) Set(val *EnterprisePayInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableEnterprisePayInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableEnterprisePayInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnterprisePayInfo(val *EnterprisePayInfo) *NullableEnterprisePayInfo {
	return &NullableEnterprisePayInfo{value: val, isSet: true}
}

func (v NullableEnterprisePayInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnterprisePayInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


