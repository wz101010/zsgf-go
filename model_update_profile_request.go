/*
全部  API 文档

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package zsgf

import (
	"encoding/json"
	"time"
)

// checks if the UpdateProfileRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateProfileRequest{}

// UpdateProfileRequest struct for UpdateProfileRequest
type UpdateProfileRequest struct {
	// 用户头像的链接或路径
	Avatar NullableString `json:"avatar,omitempty"`
	// 用户的其他数据，可以是序列化后的对象或JSON字符串
	Data NullableString `json:"data,omitempty"`
	// 用户的昵称
	NickName NullableString `json:"nickName,omitempty"`
	// 兴趣标签
	InterestTags NullableString `json:"interestTags,omitempty"`
	// 个人简介
	Biography NullableString `json:"biography,omitempty"`
	// 性别
	Gender NullableString `json:"gender,omitempty"`
	// 生日
	Birthday NullableTime `json:"birthday,omitempty"`
	// 职业
	Occupation NullableString `json:"occupation,omitempty"`
	// 学历
	Education NullableString `json:"education,omitempty"`
	// 联系方式
	Contact NullableString `json:"contact,omitempty"`
	// 语言
	Languages NullableString `json:"languages,omitempty"`
	// 社交网络链接
	SocialLinks NullableString `json:"socialLinks,omitempty"`
	// 婚姻状态
	RelationshipStatus NullableString `json:"relationshipStatus,omitempty"`
	// 公司
	Company NullableString `json:"company,omitempty"`
	// 行业
	Industry NullableString `json:"industry,omitempty"`
	// 行业职位
	CompanyPosition NullableString `json:"companyPosition,omitempty"`
	// 私密设置
	PrivateSettings NullableString `json:"privateSettings,omitempty"`
}

// NewUpdateProfileRequest instantiates a new UpdateProfileRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateProfileRequest() *UpdateProfileRequest {
	this := UpdateProfileRequest{}
	return &this
}

// NewUpdateProfileRequestWithDefaults instantiates a new UpdateProfileRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateProfileRequestWithDefaults() *UpdateProfileRequest {
	this := UpdateProfileRequest{}
	return &this
}

// GetAvatar returns the Avatar field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateProfileRequest) GetAvatar() string {
	if o == nil || IsNil(o.Avatar.Get()) {
		var ret string
		return ret
	}
	return *o.Avatar.Get()
}

// GetAvatarOk returns a tuple with the Avatar field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateProfileRequest) GetAvatarOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Avatar.Get(), o.Avatar.IsSet()
}

// HasAvatar returns a boolean if a field has been set.
func (o *UpdateProfileRequest) HasAvatar() bool {
	if o != nil && o.Avatar.IsSet() {
		return true
	}

	return false
}

// SetAvatar gets a reference to the given NullableString and assigns it to the Avatar field.
func (o *UpdateProfileRequest) SetAvatar(v string) {
	o.Avatar.Set(&v)
}
// SetAvatarNil sets the value for Avatar to be an explicit nil
func (o *UpdateProfileRequest) SetAvatarNil() {
	o.Avatar.Set(nil)
}

// UnsetAvatar ensures that no value is present for Avatar, not even an explicit nil
func (o *UpdateProfileRequest) UnsetAvatar() {
	o.Avatar.Unset()
}

// GetData returns the Data field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateProfileRequest) GetData() string {
	if o == nil || IsNil(o.Data.Get()) {
		var ret string
		return ret
	}
	return *o.Data.Get()
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateProfileRequest) GetDataOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data.Get(), o.Data.IsSet()
}

// HasData returns a boolean if a field has been set.
func (o *UpdateProfileRequest) HasData() bool {
	if o != nil && o.Data.IsSet() {
		return true
	}

	return false
}

// SetData gets a reference to the given NullableString and assigns it to the Data field.
func (o *UpdateProfileRequest) SetData(v string) {
	o.Data.Set(&v)
}
// SetDataNil sets the value for Data to be an explicit nil
func (o *UpdateProfileRequest) SetDataNil() {
	o.Data.Set(nil)
}

// UnsetData ensures that no value is present for Data, not even an explicit nil
func (o *UpdateProfileRequest) UnsetData() {
	o.Data.Unset()
}

// GetNickName returns the NickName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateProfileRequest) GetNickName() string {
	if o == nil || IsNil(o.NickName.Get()) {
		var ret string
		return ret
	}
	return *o.NickName.Get()
}

// GetNickNameOk returns a tuple with the NickName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateProfileRequest) GetNickNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.NickName.Get(), o.NickName.IsSet()
}

// HasNickName returns a boolean if a field has been set.
func (o *UpdateProfileRequest) HasNickName() bool {
	if o != nil && o.NickName.IsSet() {
		return true
	}

	return false
}

// SetNickName gets a reference to the given NullableString and assigns it to the NickName field.
func (o *UpdateProfileRequest) SetNickName(v string) {
	o.NickName.Set(&v)
}
// SetNickNameNil sets the value for NickName to be an explicit nil
func (o *UpdateProfileRequest) SetNickNameNil() {
	o.NickName.Set(nil)
}

// UnsetNickName ensures that no value is present for NickName, not even an explicit nil
func (o *UpdateProfileRequest) UnsetNickName() {
	o.NickName.Unset()
}

// GetInterestTags returns the InterestTags field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateProfileRequest) GetInterestTags() string {
	if o == nil || IsNil(o.InterestTags.Get()) {
		var ret string
		return ret
	}
	return *o.InterestTags.Get()
}

// GetInterestTagsOk returns a tuple with the InterestTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateProfileRequest) GetInterestTagsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.InterestTags.Get(), o.InterestTags.IsSet()
}

// HasInterestTags returns a boolean if a field has been set.
func (o *UpdateProfileRequest) HasInterestTags() bool {
	if o != nil && o.InterestTags.IsSet() {
		return true
	}

	return false
}

// SetInterestTags gets a reference to the given NullableString and assigns it to the InterestTags field.
func (o *UpdateProfileRequest) SetInterestTags(v string) {
	o.InterestTags.Set(&v)
}
// SetInterestTagsNil sets the value for InterestTags to be an explicit nil
func (o *UpdateProfileRequest) SetInterestTagsNil() {
	o.InterestTags.Set(nil)
}

// UnsetInterestTags ensures that no value is present for InterestTags, not even an explicit nil
func (o *UpdateProfileRequest) UnsetInterestTags() {
	o.InterestTags.Unset()
}

// GetBiography returns the Biography field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateProfileRequest) GetBiography() string {
	if o == nil || IsNil(o.Biography.Get()) {
		var ret string
		return ret
	}
	return *o.Biography.Get()
}

// GetBiographyOk returns a tuple with the Biography field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateProfileRequest) GetBiographyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Biography.Get(), o.Biography.IsSet()
}

// HasBiography returns a boolean if a field has been set.
func (o *UpdateProfileRequest) HasBiography() bool {
	if o != nil && o.Biography.IsSet() {
		return true
	}

	return false
}

// SetBiography gets a reference to the given NullableString and assigns it to the Biography field.
func (o *UpdateProfileRequest) SetBiography(v string) {
	o.Biography.Set(&v)
}
// SetBiographyNil sets the value for Biography to be an explicit nil
func (o *UpdateProfileRequest) SetBiographyNil() {
	o.Biography.Set(nil)
}

// UnsetBiography ensures that no value is present for Biography, not even an explicit nil
func (o *UpdateProfileRequest) UnsetBiography() {
	o.Biography.Unset()
}

// GetGender returns the Gender field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateProfileRequest) GetGender() string {
	if o == nil || IsNil(o.Gender.Get()) {
		var ret string
		return ret
	}
	return *o.Gender.Get()
}

// GetGenderOk returns a tuple with the Gender field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateProfileRequest) GetGenderOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Gender.Get(), o.Gender.IsSet()
}

// HasGender returns a boolean if a field has been set.
func (o *UpdateProfileRequest) HasGender() bool {
	if o != nil && o.Gender.IsSet() {
		return true
	}

	return false
}

// SetGender gets a reference to the given NullableString and assigns it to the Gender field.
func (o *UpdateProfileRequest) SetGender(v string) {
	o.Gender.Set(&v)
}
// SetGenderNil sets the value for Gender to be an explicit nil
func (o *UpdateProfileRequest) SetGenderNil() {
	o.Gender.Set(nil)
}

// UnsetGender ensures that no value is present for Gender, not even an explicit nil
func (o *UpdateProfileRequest) UnsetGender() {
	o.Gender.Unset()
}

// GetBirthday returns the Birthday field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateProfileRequest) GetBirthday() time.Time {
	if o == nil || IsNil(o.Birthday.Get()) {
		var ret time.Time
		return ret
	}
	return *o.Birthday.Get()
}

// GetBirthdayOk returns a tuple with the Birthday field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateProfileRequest) GetBirthdayOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.Birthday.Get(), o.Birthday.IsSet()
}

// HasBirthday returns a boolean if a field has been set.
func (o *UpdateProfileRequest) HasBirthday() bool {
	if o != nil && o.Birthday.IsSet() {
		return true
	}

	return false
}

// SetBirthday gets a reference to the given NullableTime and assigns it to the Birthday field.
func (o *UpdateProfileRequest) SetBirthday(v time.Time) {
	o.Birthday.Set(&v)
}
// SetBirthdayNil sets the value for Birthday to be an explicit nil
func (o *UpdateProfileRequest) SetBirthdayNil() {
	o.Birthday.Set(nil)
}

// UnsetBirthday ensures that no value is present for Birthday, not even an explicit nil
func (o *UpdateProfileRequest) UnsetBirthday() {
	o.Birthday.Unset()
}

// GetOccupation returns the Occupation field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateProfileRequest) GetOccupation() string {
	if o == nil || IsNil(o.Occupation.Get()) {
		var ret string
		return ret
	}
	return *o.Occupation.Get()
}

// GetOccupationOk returns a tuple with the Occupation field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateProfileRequest) GetOccupationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Occupation.Get(), o.Occupation.IsSet()
}

// HasOccupation returns a boolean if a field has been set.
func (o *UpdateProfileRequest) HasOccupation() bool {
	if o != nil && o.Occupation.IsSet() {
		return true
	}

	return false
}

// SetOccupation gets a reference to the given NullableString and assigns it to the Occupation field.
func (o *UpdateProfileRequest) SetOccupation(v string) {
	o.Occupation.Set(&v)
}
// SetOccupationNil sets the value for Occupation to be an explicit nil
func (o *UpdateProfileRequest) SetOccupationNil() {
	o.Occupation.Set(nil)
}

// UnsetOccupation ensures that no value is present for Occupation, not even an explicit nil
func (o *UpdateProfileRequest) UnsetOccupation() {
	o.Occupation.Unset()
}

// GetEducation returns the Education field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateProfileRequest) GetEducation() string {
	if o == nil || IsNil(o.Education.Get()) {
		var ret string
		return ret
	}
	return *o.Education.Get()
}

// GetEducationOk returns a tuple with the Education field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateProfileRequest) GetEducationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Education.Get(), o.Education.IsSet()
}

// HasEducation returns a boolean if a field has been set.
func (o *UpdateProfileRequest) HasEducation() bool {
	if o != nil && o.Education.IsSet() {
		return true
	}

	return false
}

// SetEducation gets a reference to the given NullableString and assigns it to the Education field.
func (o *UpdateProfileRequest) SetEducation(v string) {
	o.Education.Set(&v)
}
// SetEducationNil sets the value for Education to be an explicit nil
func (o *UpdateProfileRequest) SetEducationNil() {
	o.Education.Set(nil)
}

// UnsetEducation ensures that no value is present for Education, not even an explicit nil
func (o *UpdateProfileRequest) UnsetEducation() {
	o.Education.Unset()
}

// GetContact returns the Contact field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateProfileRequest) GetContact() string {
	if o == nil || IsNil(o.Contact.Get()) {
		var ret string
		return ret
	}
	return *o.Contact.Get()
}

// GetContactOk returns a tuple with the Contact field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateProfileRequest) GetContactOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Contact.Get(), o.Contact.IsSet()
}

// HasContact returns a boolean if a field has been set.
func (o *UpdateProfileRequest) HasContact() bool {
	if o != nil && o.Contact.IsSet() {
		return true
	}

	return false
}

// SetContact gets a reference to the given NullableString and assigns it to the Contact field.
func (o *UpdateProfileRequest) SetContact(v string) {
	o.Contact.Set(&v)
}
// SetContactNil sets the value for Contact to be an explicit nil
func (o *UpdateProfileRequest) SetContactNil() {
	o.Contact.Set(nil)
}

// UnsetContact ensures that no value is present for Contact, not even an explicit nil
func (o *UpdateProfileRequest) UnsetContact() {
	o.Contact.Unset()
}

// GetLanguages returns the Languages field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateProfileRequest) GetLanguages() string {
	if o == nil || IsNil(o.Languages.Get()) {
		var ret string
		return ret
	}
	return *o.Languages.Get()
}

// GetLanguagesOk returns a tuple with the Languages field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateProfileRequest) GetLanguagesOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Languages.Get(), o.Languages.IsSet()
}

// HasLanguages returns a boolean if a field has been set.
func (o *UpdateProfileRequest) HasLanguages() bool {
	if o != nil && o.Languages.IsSet() {
		return true
	}

	return false
}

// SetLanguages gets a reference to the given NullableString and assigns it to the Languages field.
func (o *UpdateProfileRequest) SetLanguages(v string) {
	o.Languages.Set(&v)
}
// SetLanguagesNil sets the value for Languages to be an explicit nil
func (o *UpdateProfileRequest) SetLanguagesNil() {
	o.Languages.Set(nil)
}

// UnsetLanguages ensures that no value is present for Languages, not even an explicit nil
func (o *UpdateProfileRequest) UnsetLanguages() {
	o.Languages.Unset()
}

// GetSocialLinks returns the SocialLinks field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateProfileRequest) GetSocialLinks() string {
	if o == nil || IsNil(o.SocialLinks.Get()) {
		var ret string
		return ret
	}
	return *o.SocialLinks.Get()
}

// GetSocialLinksOk returns a tuple with the SocialLinks field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateProfileRequest) GetSocialLinksOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SocialLinks.Get(), o.SocialLinks.IsSet()
}

// HasSocialLinks returns a boolean if a field has been set.
func (o *UpdateProfileRequest) HasSocialLinks() bool {
	if o != nil && o.SocialLinks.IsSet() {
		return true
	}

	return false
}

// SetSocialLinks gets a reference to the given NullableString and assigns it to the SocialLinks field.
func (o *UpdateProfileRequest) SetSocialLinks(v string) {
	o.SocialLinks.Set(&v)
}
// SetSocialLinksNil sets the value for SocialLinks to be an explicit nil
func (o *UpdateProfileRequest) SetSocialLinksNil() {
	o.SocialLinks.Set(nil)
}

// UnsetSocialLinks ensures that no value is present for SocialLinks, not even an explicit nil
func (o *UpdateProfileRequest) UnsetSocialLinks() {
	o.SocialLinks.Unset()
}

// GetRelationshipStatus returns the RelationshipStatus field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateProfileRequest) GetRelationshipStatus() string {
	if o == nil || IsNil(o.RelationshipStatus.Get()) {
		var ret string
		return ret
	}
	return *o.RelationshipStatus.Get()
}

// GetRelationshipStatusOk returns a tuple with the RelationshipStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateProfileRequest) GetRelationshipStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RelationshipStatus.Get(), o.RelationshipStatus.IsSet()
}

// HasRelationshipStatus returns a boolean if a field has been set.
func (o *UpdateProfileRequest) HasRelationshipStatus() bool {
	if o != nil && o.RelationshipStatus.IsSet() {
		return true
	}

	return false
}

// SetRelationshipStatus gets a reference to the given NullableString and assigns it to the RelationshipStatus field.
func (o *UpdateProfileRequest) SetRelationshipStatus(v string) {
	o.RelationshipStatus.Set(&v)
}
// SetRelationshipStatusNil sets the value for RelationshipStatus to be an explicit nil
func (o *UpdateProfileRequest) SetRelationshipStatusNil() {
	o.RelationshipStatus.Set(nil)
}

// UnsetRelationshipStatus ensures that no value is present for RelationshipStatus, not even an explicit nil
func (o *UpdateProfileRequest) UnsetRelationshipStatus() {
	o.RelationshipStatus.Unset()
}

// GetCompany returns the Company field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateProfileRequest) GetCompany() string {
	if o == nil || IsNil(o.Company.Get()) {
		var ret string
		return ret
	}
	return *o.Company.Get()
}

// GetCompanyOk returns a tuple with the Company field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateProfileRequest) GetCompanyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Company.Get(), o.Company.IsSet()
}

// HasCompany returns a boolean if a field has been set.
func (o *UpdateProfileRequest) HasCompany() bool {
	if o != nil && o.Company.IsSet() {
		return true
	}

	return false
}

// SetCompany gets a reference to the given NullableString and assigns it to the Company field.
func (o *UpdateProfileRequest) SetCompany(v string) {
	o.Company.Set(&v)
}
// SetCompanyNil sets the value for Company to be an explicit nil
func (o *UpdateProfileRequest) SetCompanyNil() {
	o.Company.Set(nil)
}

// UnsetCompany ensures that no value is present for Company, not even an explicit nil
func (o *UpdateProfileRequest) UnsetCompany() {
	o.Company.Unset()
}

// GetIndustry returns the Industry field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateProfileRequest) GetIndustry() string {
	if o == nil || IsNil(o.Industry.Get()) {
		var ret string
		return ret
	}
	return *o.Industry.Get()
}

// GetIndustryOk returns a tuple with the Industry field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateProfileRequest) GetIndustryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Industry.Get(), o.Industry.IsSet()
}

// HasIndustry returns a boolean if a field has been set.
func (o *UpdateProfileRequest) HasIndustry() bool {
	if o != nil && o.Industry.IsSet() {
		return true
	}

	return false
}

// SetIndustry gets a reference to the given NullableString and assigns it to the Industry field.
func (o *UpdateProfileRequest) SetIndustry(v string) {
	o.Industry.Set(&v)
}
// SetIndustryNil sets the value for Industry to be an explicit nil
func (o *UpdateProfileRequest) SetIndustryNil() {
	o.Industry.Set(nil)
}

// UnsetIndustry ensures that no value is present for Industry, not even an explicit nil
func (o *UpdateProfileRequest) UnsetIndustry() {
	o.Industry.Unset()
}

// GetCompanyPosition returns the CompanyPosition field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateProfileRequest) GetCompanyPosition() string {
	if o == nil || IsNil(o.CompanyPosition.Get()) {
		var ret string
		return ret
	}
	return *o.CompanyPosition.Get()
}

// GetCompanyPositionOk returns a tuple with the CompanyPosition field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateProfileRequest) GetCompanyPositionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CompanyPosition.Get(), o.CompanyPosition.IsSet()
}

// HasCompanyPosition returns a boolean if a field has been set.
func (o *UpdateProfileRequest) HasCompanyPosition() bool {
	if o != nil && o.CompanyPosition.IsSet() {
		return true
	}

	return false
}

// SetCompanyPosition gets a reference to the given NullableString and assigns it to the CompanyPosition field.
func (o *UpdateProfileRequest) SetCompanyPosition(v string) {
	o.CompanyPosition.Set(&v)
}
// SetCompanyPositionNil sets the value for CompanyPosition to be an explicit nil
func (o *UpdateProfileRequest) SetCompanyPositionNil() {
	o.CompanyPosition.Set(nil)
}

// UnsetCompanyPosition ensures that no value is present for CompanyPosition, not even an explicit nil
func (o *UpdateProfileRequest) UnsetCompanyPosition() {
	o.CompanyPosition.Unset()
}

// GetPrivateSettings returns the PrivateSettings field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateProfileRequest) GetPrivateSettings() string {
	if o == nil || IsNil(o.PrivateSettings.Get()) {
		var ret string
		return ret
	}
	return *o.PrivateSettings.Get()
}

// GetPrivateSettingsOk returns a tuple with the PrivateSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateProfileRequest) GetPrivateSettingsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PrivateSettings.Get(), o.PrivateSettings.IsSet()
}

// HasPrivateSettings returns a boolean if a field has been set.
func (o *UpdateProfileRequest) HasPrivateSettings() bool {
	if o != nil && o.PrivateSettings.IsSet() {
		return true
	}

	return false
}

// SetPrivateSettings gets a reference to the given NullableString and assigns it to the PrivateSettings field.
func (o *UpdateProfileRequest) SetPrivateSettings(v string) {
	o.PrivateSettings.Set(&v)
}
// SetPrivateSettingsNil sets the value for PrivateSettings to be an explicit nil
func (o *UpdateProfileRequest) SetPrivateSettingsNil() {
	o.PrivateSettings.Set(nil)
}

// UnsetPrivateSettings ensures that no value is present for PrivateSettings, not even an explicit nil
func (o *UpdateProfileRequest) UnsetPrivateSettings() {
	o.PrivateSettings.Unset()
}

func (o UpdateProfileRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateProfileRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Avatar.IsSet() {
		toSerialize["avatar"] = o.Avatar.Get()
	}
	if o.Data.IsSet() {
		toSerialize["data"] = o.Data.Get()
	}
	if o.NickName.IsSet() {
		toSerialize["nickName"] = o.NickName.Get()
	}
	if o.InterestTags.IsSet() {
		toSerialize["interestTags"] = o.InterestTags.Get()
	}
	if o.Biography.IsSet() {
		toSerialize["biography"] = o.Biography.Get()
	}
	if o.Gender.IsSet() {
		toSerialize["gender"] = o.Gender.Get()
	}
	if o.Birthday.IsSet() {
		toSerialize["birthday"] = o.Birthday.Get()
	}
	if o.Occupation.IsSet() {
		toSerialize["occupation"] = o.Occupation.Get()
	}
	if o.Education.IsSet() {
		toSerialize["education"] = o.Education.Get()
	}
	if o.Contact.IsSet() {
		toSerialize["contact"] = o.Contact.Get()
	}
	if o.Languages.IsSet() {
		toSerialize["languages"] = o.Languages.Get()
	}
	if o.SocialLinks.IsSet() {
		toSerialize["socialLinks"] = o.SocialLinks.Get()
	}
	if o.RelationshipStatus.IsSet() {
		toSerialize["relationshipStatus"] = o.RelationshipStatus.Get()
	}
	if o.Company.IsSet() {
		toSerialize["company"] = o.Company.Get()
	}
	if o.Industry.IsSet() {
		toSerialize["industry"] = o.Industry.Get()
	}
	if o.CompanyPosition.IsSet() {
		toSerialize["companyPosition"] = o.CompanyPosition.Get()
	}
	if o.PrivateSettings.IsSet() {
		toSerialize["privateSettings"] = o.PrivateSettings.Get()
	}
	return toSerialize, nil
}

type NullableUpdateProfileRequest struct {
	value *UpdateProfileRequest
	isSet bool
}

func (v NullableUpdateProfileRequest) Get() *UpdateProfileRequest {
	return v.value
}

func (v *NullableUpdateProfileRequest) Set(val *UpdateProfileRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateProfileRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateProfileRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateProfileRequest(val *UpdateProfileRequest) *NullableUpdateProfileRequest {
	return &NullableUpdateProfileRequest{value: val, isSet: true}
}

func (v NullableUpdateProfileRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateProfileRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


