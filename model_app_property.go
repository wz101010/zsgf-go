/*
全部  API 文档

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package zsgf

import (
	"encoding/json"
)

// checks if the AppProperty type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AppProperty{}

// AppProperty struct for AppProperty
type AppProperty struct {
	Code NullableString `json:"code,omitempty"`
	Value NullableString `json:"value,omitempty"`
	Desc NullableString `json:"desc,omitempty"`
}

// NewAppProperty instantiates a new AppProperty object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppProperty() *AppProperty {
	this := AppProperty{}
	return &this
}

// NewAppPropertyWithDefaults instantiates a new AppProperty object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppPropertyWithDefaults() *AppProperty {
	this := AppProperty{}
	return &this
}

// GetCode returns the Code field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AppProperty) GetCode() string {
	if o == nil || IsNil(o.Code.Get()) {
		var ret string
		return ret
	}
	return *o.Code.Get()
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AppProperty) GetCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Code.Get(), o.Code.IsSet()
}

// HasCode returns a boolean if a field has been set.
func (o *AppProperty) HasCode() bool {
	if o != nil && o.Code.IsSet() {
		return true
	}

	return false
}

// SetCode gets a reference to the given NullableString and assigns it to the Code field.
func (o *AppProperty) SetCode(v string) {
	o.Code.Set(&v)
}
// SetCodeNil sets the value for Code to be an explicit nil
func (o *AppProperty) SetCodeNil() {
	o.Code.Set(nil)
}

// UnsetCode ensures that no value is present for Code, not even an explicit nil
func (o *AppProperty) UnsetCode() {
	o.Code.Unset()
}

// GetValue returns the Value field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AppProperty) GetValue() string {
	if o == nil || IsNil(o.Value.Get()) {
		var ret string
		return ret
	}
	return *o.Value.Get()
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AppProperty) GetValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Value.Get(), o.Value.IsSet()
}

// HasValue returns a boolean if a field has been set.
func (o *AppProperty) HasValue() bool {
	if o != nil && o.Value.IsSet() {
		return true
	}

	return false
}

// SetValue gets a reference to the given NullableString and assigns it to the Value field.
func (o *AppProperty) SetValue(v string) {
	o.Value.Set(&v)
}
// SetValueNil sets the value for Value to be an explicit nil
func (o *AppProperty) SetValueNil() {
	o.Value.Set(nil)
}

// UnsetValue ensures that no value is present for Value, not even an explicit nil
func (o *AppProperty) UnsetValue() {
	o.Value.Unset()
}

// GetDesc returns the Desc field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AppProperty) GetDesc() string {
	if o == nil || IsNil(o.Desc.Get()) {
		var ret string
		return ret
	}
	return *o.Desc.Get()
}

// GetDescOk returns a tuple with the Desc field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AppProperty) GetDescOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Desc.Get(), o.Desc.IsSet()
}

// HasDesc returns a boolean if a field has been set.
func (o *AppProperty) HasDesc() bool {
	if o != nil && o.Desc.IsSet() {
		return true
	}

	return false
}

// SetDesc gets a reference to the given NullableString and assigns it to the Desc field.
func (o *AppProperty) SetDesc(v string) {
	o.Desc.Set(&v)
}
// SetDescNil sets the value for Desc to be an explicit nil
func (o *AppProperty) SetDescNil() {
	o.Desc.Set(nil)
}

// UnsetDesc ensures that no value is present for Desc, not even an explicit nil
func (o *AppProperty) UnsetDesc() {
	o.Desc.Unset()
}

func (o AppProperty) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AppProperty) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Code.IsSet() {
		toSerialize["code"] = o.Code.Get()
	}
	if o.Value.IsSet() {
		toSerialize["value"] = o.Value.Get()
	}
	if o.Desc.IsSet() {
		toSerialize["desc"] = o.Desc.Get()
	}
	return toSerialize, nil
}

type NullableAppProperty struct {
	value *AppProperty
	isSet bool
}

func (v NullableAppProperty) Get() *AppProperty {
	return v.value
}

func (v *NullableAppProperty) Set(val *AppProperty) {
	v.value = val
	v.isSet = true
}

func (v NullableAppProperty) IsSet() bool {
	return v.isSet
}

func (v *NullableAppProperty) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppProperty(val *AppProperty) *NullableAppProperty {
	return &NullableAppProperty{value: val, isSet: true}
}

func (v NullableAppProperty) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppProperty) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


