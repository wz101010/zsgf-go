/*
全部  API 文档

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package zsgf

import (
	"encoding/json"
)

// checks if the TradeFundBill type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TradeFundBill{}

// TradeFundBill struct for TradeFundBill
type TradeFundBill struct {
	Amount NullableString `json:"amount,omitempty"`
	BankCode NullableString `json:"bankCode,omitempty"`
	FundChannel NullableString `json:"fundChannel,omitempty"`
	FundType NullableString `json:"fundType,omitempty"`
	RealAmount NullableString `json:"realAmount,omitempty"`
}

// NewTradeFundBill instantiates a new TradeFundBill object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTradeFundBill() *TradeFundBill {
	this := TradeFundBill{}
	return &this
}

// NewTradeFundBillWithDefaults instantiates a new TradeFundBill object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTradeFundBillWithDefaults() *TradeFundBill {
	this := TradeFundBill{}
	return &this
}

// GetAmount returns the Amount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TradeFundBill) GetAmount() string {
	if o == nil || IsNil(o.Amount.Get()) {
		var ret string
		return ret
	}
	return *o.Amount.Get()
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TradeFundBill) GetAmountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Amount.Get(), o.Amount.IsSet()
}

// HasAmount returns a boolean if a field has been set.
func (o *TradeFundBill) HasAmount() bool {
	if o != nil && o.Amount.IsSet() {
		return true
	}

	return false
}

// SetAmount gets a reference to the given NullableString and assigns it to the Amount field.
func (o *TradeFundBill) SetAmount(v string) {
	o.Amount.Set(&v)
}
// SetAmountNil sets the value for Amount to be an explicit nil
func (o *TradeFundBill) SetAmountNil() {
	o.Amount.Set(nil)
}

// UnsetAmount ensures that no value is present for Amount, not even an explicit nil
func (o *TradeFundBill) UnsetAmount() {
	o.Amount.Unset()
}

// GetBankCode returns the BankCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TradeFundBill) GetBankCode() string {
	if o == nil || IsNil(o.BankCode.Get()) {
		var ret string
		return ret
	}
	return *o.BankCode.Get()
}

// GetBankCodeOk returns a tuple with the BankCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TradeFundBill) GetBankCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BankCode.Get(), o.BankCode.IsSet()
}

// HasBankCode returns a boolean if a field has been set.
func (o *TradeFundBill) HasBankCode() bool {
	if o != nil && o.BankCode.IsSet() {
		return true
	}

	return false
}

// SetBankCode gets a reference to the given NullableString and assigns it to the BankCode field.
func (o *TradeFundBill) SetBankCode(v string) {
	o.BankCode.Set(&v)
}
// SetBankCodeNil sets the value for BankCode to be an explicit nil
func (o *TradeFundBill) SetBankCodeNil() {
	o.BankCode.Set(nil)
}

// UnsetBankCode ensures that no value is present for BankCode, not even an explicit nil
func (o *TradeFundBill) UnsetBankCode() {
	o.BankCode.Unset()
}

// GetFundChannel returns the FundChannel field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TradeFundBill) GetFundChannel() string {
	if o == nil || IsNil(o.FundChannel.Get()) {
		var ret string
		return ret
	}
	return *o.FundChannel.Get()
}

// GetFundChannelOk returns a tuple with the FundChannel field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TradeFundBill) GetFundChannelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FundChannel.Get(), o.FundChannel.IsSet()
}

// HasFundChannel returns a boolean if a field has been set.
func (o *TradeFundBill) HasFundChannel() bool {
	if o != nil && o.FundChannel.IsSet() {
		return true
	}

	return false
}

// SetFundChannel gets a reference to the given NullableString and assigns it to the FundChannel field.
func (o *TradeFundBill) SetFundChannel(v string) {
	o.FundChannel.Set(&v)
}
// SetFundChannelNil sets the value for FundChannel to be an explicit nil
func (o *TradeFundBill) SetFundChannelNil() {
	o.FundChannel.Set(nil)
}

// UnsetFundChannel ensures that no value is present for FundChannel, not even an explicit nil
func (o *TradeFundBill) UnsetFundChannel() {
	o.FundChannel.Unset()
}

// GetFundType returns the FundType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TradeFundBill) GetFundType() string {
	if o == nil || IsNil(o.FundType.Get()) {
		var ret string
		return ret
	}
	return *o.FundType.Get()
}

// GetFundTypeOk returns a tuple with the FundType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TradeFundBill) GetFundTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FundType.Get(), o.FundType.IsSet()
}

// HasFundType returns a boolean if a field has been set.
func (o *TradeFundBill) HasFundType() bool {
	if o != nil && o.FundType.IsSet() {
		return true
	}

	return false
}

// SetFundType gets a reference to the given NullableString and assigns it to the FundType field.
func (o *TradeFundBill) SetFundType(v string) {
	o.FundType.Set(&v)
}
// SetFundTypeNil sets the value for FundType to be an explicit nil
func (o *TradeFundBill) SetFundTypeNil() {
	o.FundType.Set(nil)
}

// UnsetFundType ensures that no value is present for FundType, not even an explicit nil
func (o *TradeFundBill) UnsetFundType() {
	o.FundType.Unset()
}

// GetRealAmount returns the RealAmount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TradeFundBill) GetRealAmount() string {
	if o == nil || IsNil(o.RealAmount.Get()) {
		var ret string
		return ret
	}
	return *o.RealAmount.Get()
}

// GetRealAmountOk returns a tuple with the RealAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TradeFundBill) GetRealAmountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RealAmount.Get(), o.RealAmount.IsSet()
}

// HasRealAmount returns a boolean if a field has been set.
func (o *TradeFundBill) HasRealAmount() bool {
	if o != nil && o.RealAmount.IsSet() {
		return true
	}

	return false
}

// SetRealAmount gets a reference to the given NullableString and assigns it to the RealAmount field.
func (o *TradeFundBill) SetRealAmount(v string) {
	o.RealAmount.Set(&v)
}
// SetRealAmountNil sets the value for RealAmount to be an explicit nil
func (o *TradeFundBill) SetRealAmountNil() {
	o.RealAmount.Set(nil)
}

// UnsetRealAmount ensures that no value is present for RealAmount, not even an explicit nil
func (o *TradeFundBill) UnsetRealAmount() {
	o.RealAmount.Unset()
}

func (o TradeFundBill) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TradeFundBill) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Amount.IsSet() {
		toSerialize["amount"] = o.Amount.Get()
	}
	if o.BankCode.IsSet() {
		toSerialize["bankCode"] = o.BankCode.Get()
	}
	if o.FundChannel.IsSet() {
		toSerialize["fundChannel"] = o.FundChannel.Get()
	}
	if o.FundType.IsSet() {
		toSerialize["fundType"] = o.FundType.Get()
	}
	if o.RealAmount.IsSet() {
		toSerialize["realAmount"] = o.RealAmount.Get()
	}
	return toSerialize, nil
}

type NullableTradeFundBill struct {
	value *TradeFundBill
	isSet bool
}

func (v NullableTradeFundBill) Get() *TradeFundBill {
	return v.value
}

func (v *NullableTradeFundBill) Set(val *TradeFundBill) {
	v.value = val
	v.isSet = true
}

func (v NullableTradeFundBill) IsSet() bool {
	return v.isSet
}

func (v *NullableTradeFundBill) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTradeFundBill(val *TradeFundBill) *NullableTradeFundBill {
	return &NullableTradeFundBill{value: val, isSet: true}
}

func (v NullableTradeFundBill) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTradeFundBill) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


