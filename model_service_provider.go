/*
全部  API 文档

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package zsgf

import (
	"encoding/json"
	"time"
)

// checks if the ServiceProvider type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServiceProvider{}

// ServiceProvider 服务商实体，用于表示和管理系统中的服务提供方信息。
type ServiceProvider struct {
	// 服务商的唯一标识符。
	Id *int64 `json:"id,omitempty"`
	// 服务商的业务代码，用于标识其所属业务领域。
	BizCode NullableString `json:"bizCode,omitempty"`
	// 服务商的名称。
	Name NullableString `json:"name,omitempty"`
	// 服务商的唯一代码，用于系统内部标识。
	Code NullableString `json:"code,omitempty"`
	// 服务商图标的URL或路径。
	Icon NullableString `json:"icon,omitempty"`
	// 服务商的详细描述信息。
	Description NullableString `json:"description,omitempty"`
	// 用于分类或标记服务商的标签。
	Tags NullableString `json:"tags,omitempty"`
	// 指示服务商是否在界面上显示。
	Show *bool `json:"show,omitempty"`
	// 服务商在界面上的显示顺序。
	ShowIndex *int32 `json:"showIndex,omitempty"`
	// 服务商记录的创建日期，默认为当前时间。
	CreateDate *time.Time `json:"createDate,omitempty"`
	// 服务商记录的最后更新日期，默认为当前时间。
	LastUpdate *time.Time `json:"lastUpdate,omitempty"`
}

// NewServiceProvider instantiates a new ServiceProvider object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceProvider() *ServiceProvider {
	this := ServiceProvider{}
	return &this
}

// NewServiceProviderWithDefaults instantiates a new ServiceProvider object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceProviderWithDefaults() *ServiceProvider {
	this := ServiceProvider{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ServiceProvider) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceProvider) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ServiceProvider) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *ServiceProvider) SetId(v int64) {
	o.Id = &v
}

// GetBizCode returns the BizCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceProvider) GetBizCode() string {
	if o == nil || IsNil(o.BizCode.Get()) {
		var ret string
		return ret
	}
	return *o.BizCode.Get()
}

// GetBizCodeOk returns a tuple with the BizCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceProvider) GetBizCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BizCode.Get(), o.BizCode.IsSet()
}

// HasBizCode returns a boolean if a field has been set.
func (o *ServiceProvider) HasBizCode() bool {
	if o != nil && o.BizCode.IsSet() {
		return true
	}

	return false
}

// SetBizCode gets a reference to the given NullableString and assigns it to the BizCode field.
func (o *ServiceProvider) SetBizCode(v string) {
	o.BizCode.Set(&v)
}
// SetBizCodeNil sets the value for BizCode to be an explicit nil
func (o *ServiceProvider) SetBizCodeNil() {
	o.BizCode.Set(nil)
}

// UnsetBizCode ensures that no value is present for BizCode, not even an explicit nil
func (o *ServiceProvider) UnsetBizCode() {
	o.BizCode.Unset()
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceProvider) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceProvider) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *ServiceProvider) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *ServiceProvider) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *ServiceProvider) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *ServiceProvider) UnsetName() {
	o.Name.Unset()
}

// GetCode returns the Code field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceProvider) GetCode() string {
	if o == nil || IsNil(o.Code.Get()) {
		var ret string
		return ret
	}
	return *o.Code.Get()
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceProvider) GetCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Code.Get(), o.Code.IsSet()
}

// HasCode returns a boolean if a field has been set.
func (o *ServiceProvider) HasCode() bool {
	if o != nil && o.Code.IsSet() {
		return true
	}

	return false
}

// SetCode gets a reference to the given NullableString and assigns it to the Code field.
func (o *ServiceProvider) SetCode(v string) {
	o.Code.Set(&v)
}
// SetCodeNil sets the value for Code to be an explicit nil
func (o *ServiceProvider) SetCodeNil() {
	o.Code.Set(nil)
}

// UnsetCode ensures that no value is present for Code, not even an explicit nil
func (o *ServiceProvider) UnsetCode() {
	o.Code.Unset()
}

// GetIcon returns the Icon field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceProvider) GetIcon() string {
	if o == nil || IsNil(o.Icon.Get()) {
		var ret string
		return ret
	}
	return *o.Icon.Get()
}

// GetIconOk returns a tuple with the Icon field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceProvider) GetIconOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Icon.Get(), o.Icon.IsSet()
}

// HasIcon returns a boolean if a field has been set.
func (o *ServiceProvider) HasIcon() bool {
	if o != nil && o.Icon.IsSet() {
		return true
	}

	return false
}

// SetIcon gets a reference to the given NullableString and assigns it to the Icon field.
func (o *ServiceProvider) SetIcon(v string) {
	o.Icon.Set(&v)
}
// SetIconNil sets the value for Icon to be an explicit nil
func (o *ServiceProvider) SetIconNil() {
	o.Icon.Set(nil)
}

// UnsetIcon ensures that no value is present for Icon, not even an explicit nil
func (o *ServiceProvider) UnsetIcon() {
	o.Icon.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceProvider) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceProvider) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *ServiceProvider) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *ServiceProvider) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *ServiceProvider) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *ServiceProvider) UnsetDescription() {
	o.Description.Unset()
}

// GetTags returns the Tags field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceProvider) GetTags() string {
	if o == nil || IsNil(o.Tags.Get()) {
		var ret string
		return ret
	}
	return *o.Tags.Get()
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceProvider) GetTagsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Tags.Get(), o.Tags.IsSet()
}

// HasTags returns a boolean if a field has been set.
func (o *ServiceProvider) HasTags() bool {
	if o != nil && o.Tags.IsSet() {
		return true
	}

	return false
}

// SetTags gets a reference to the given NullableString and assigns it to the Tags field.
func (o *ServiceProvider) SetTags(v string) {
	o.Tags.Set(&v)
}
// SetTagsNil sets the value for Tags to be an explicit nil
func (o *ServiceProvider) SetTagsNil() {
	o.Tags.Set(nil)
}

// UnsetTags ensures that no value is present for Tags, not even an explicit nil
func (o *ServiceProvider) UnsetTags() {
	o.Tags.Unset()
}

// GetShow returns the Show field value if set, zero value otherwise.
func (o *ServiceProvider) GetShow() bool {
	if o == nil || IsNil(o.Show) {
		var ret bool
		return ret
	}
	return *o.Show
}

// GetShowOk returns a tuple with the Show field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceProvider) GetShowOk() (*bool, bool) {
	if o == nil || IsNil(o.Show) {
		return nil, false
	}
	return o.Show, true
}

// HasShow returns a boolean if a field has been set.
func (o *ServiceProvider) HasShow() bool {
	if o != nil && !IsNil(o.Show) {
		return true
	}

	return false
}

// SetShow gets a reference to the given bool and assigns it to the Show field.
func (o *ServiceProvider) SetShow(v bool) {
	o.Show = &v
}

// GetShowIndex returns the ShowIndex field value if set, zero value otherwise.
func (o *ServiceProvider) GetShowIndex() int32 {
	if o == nil || IsNil(o.ShowIndex) {
		var ret int32
		return ret
	}
	return *o.ShowIndex
}

// GetShowIndexOk returns a tuple with the ShowIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceProvider) GetShowIndexOk() (*int32, bool) {
	if o == nil || IsNil(o.ShowIndex) {
		return nil, false
	}
	return o.ShowIndex, true
}

// HasShowIndex returns a boolean if a field has been set.
func (o *ServiceProvider) HasShowIndex() bool {
	if o != nil && !IsNil(o.ShowIndex) {
		return true
	}

	return false
}

// SetShowIndex gets a reference to the given int32 and assigns it to the ShowIndex field.
func (o *ServiceProvider) SetShowIndex(v int32) {
	o.ShowIndex = &v
}

// GetCreateDate returns the CreateDate field value if set, zero value otherwise.
func (o *ServiceProvider) GetCreateDate() time.Time {
	if o == nil || IsNil(o.CreateDate) {
		var ret time.Time
		return ret
	}
	return *o.CreateDate
}

// GetCreateDateOk returns a tuple with the CreateDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceProvider) GetCreateDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreateDate) {
		return nil, false
	}
	return o.CreateDate, true
}

// HasCreateDate returns a boolean if a field has been set.
func (o *ServiceProvider) HasCreateDate() bool {
	if o != nil && !IsNil(o.CreateDate) {
		return true
	}

	return false
}

// SetCreateDate gets a reference to the given time.Time and assigns it to the CreateDate field.
func (o *ServiceProvider) SetCreateDate(v time.Time) {
	o.CreateDate = &v
}

// GetLastUpdate returns the LastUpdate field value if set, zero value otherwise.
func (o *ServiceProvider) GetLastUpdate() time.Time {
	if o == nil || IsNil(o.LastUpdate) {
		var ret time.Time
		return ret
	}
	return *o.LastUpdate
}

// GetLastUpdateOk returns a tuple with the LastUpdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceProvider) GetLastUpdateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastUpdate) {
		return nil, false
	}
	return o.LastUpdate, true
}

// HasLastUpdate returns a boolean if a field has been set.
func (o *ServiceProvider) HasLastUpdate() bool {
	if o != nil && !IsNil(o.LastUpdate) {
		return true
	}

	return false
}

// SetLastUpdate gets a reference to the given time.Time and assigns it to the LastUpdate field.
func (o *ServiceProvider) SetLastUpdate(v time.Time) {
	o.LastUpdate = &v
}

func (o ServiceProvider) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServiceProvider) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if o.BizCode.IsSet() {
		toSerialize["bizCode"] = o.BizCode.Get()
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.Code.IsSet() {
		toSerialize["code"] = o.Code.Get()
	}
	if o.Icon.IsSet() {
		toSerialize["icon"] = o.Icon.Get()
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.Tags.IsSet() {
		toSerialize["tags"] = o.Tags.Get()
	}
	if !IsNil(o.Show) {
		toSerialize["show"] = o.Show
	}
	if !IsNil(o.ShowIndex) {
		toSerialize["showIndex"] = o.ShowIndex
	}
	if !IsNil(o.CreateDate) {
		toSerialize["createDate"] = o.CreateDate
	}
	if !IsNil(o.LastUpdate) {
		toSerialize["lastUpdate"] = o.LastUpdate
	}
	return toSerialize, nil
}

type NullableServiceProvider struct {
	value *ServiceProvider
	isSet bool
}

func (v NullableServiceProvider) Get() *ServiceProvider {
	return v.value
}

func (v *NullableServiceProvider) Set(val *ServiceProvider) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceProvider) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceProvider) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceProvider(val *ServiceProvider) *NullableServiceProvider {
	return &NullableServiceProvider{value: val, isSet: true}
}

func (v NullableServiceProvider) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceProvider) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


