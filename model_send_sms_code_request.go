/*
全部  API 文档

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package zsgf

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the SendSMSCodeRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SendSMSCodeRequest{}

// SendSMSCodeRequest struct for SendSMSCodeRequest
type SendSMSCodeRequest struct {
	// 手机号
	Phone string `json:"phone"`
	// 用途。可选值：signup/forgetpwd
	Type string `json:"type"`
}

type _SendSMSCodeRequest SendSMSCodeRequest

// NewSendSMSCodeRequest instantiates a new SendSMSCodeRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSendSMSCodeRequest(phone string, type_ string) *SendSMSCodeRequest {
	this := SendSMSCodeRequest{}
	this.Phone = phone
	this.Type = type_
	return &this
}

// NewSendSMSCodeRequestWithDefaults instantiates a new SendSMSCodeRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSendSMSCodeRequestWithDefaults() *SendSMSCodeRequest {
	this := SendSMSCodeRequest{}
	return &this
}

// GetPhone returns the Phone field value
func (o *SendSMSCodeRequest) GetPhone() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Phone
}

// GetPhoneOk returns a tuple with the Phone field value
// and a boolean to check if the value has been set.
func (o *SendSMSCodeRequest) GetPhoneOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Phone, true
}

// SetPhone sets field value
func (o *SendSMSCodeRequest) SetPhone(v string) {
	o.Phone = v
}

// GetType returns the Type field value
func (o *SendSMSCodeRequest) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *SendSMSCodeRequest) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *SendSMSCodeRequest) SetType(v string) {
	o.Type = v
}

func (o SendSMSCodeRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SendSMSCodeRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["phone"] = o.Phone
	toSerialize["type"] = o.Type
	return toSerialize, nil
}

func (o *SendSMSCodeRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"phone",
		"type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSendSMSCodeRequest := _SendSMSCodeRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSendSMSCodeRequest)

	if err != nil {
		return err
	}

	*o = SendSMSCodeRequest(varSendSMSCodeRequest)

	return err
}

type NullableSendSMSCodeRequest struct {
	value *SendSMSCodeRequest
	isSet bool
}

func (v NullableSendSMSCodeRequest) Get() *SendSMSCodeRequest {
	return v.value
}

func (v *NullableSendSMSCodeRequest) Set(val *SendSMSCodeRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSendSMSCodeRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSendSMSCodeRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSendSMSCodeRequest(val *SendSMSCodeRequest) *NullableSendSMSCodeRequest {
	return &NullableSendSMSCodeRequest{value: val, isSet: true}
}

func (v NullableSendSMSCodeRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSendSMSCodeRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


