/*
全部  API 文档

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package zsgf

import (
	"encoding/json"
)

// checks if the ReturnPageNotifyRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReturnPageNotifyRequest{}

// ReturnPageNotifyRequest 支付宝返回页面通知请求
type ReturnPageNotifyRequest struct {
	// 应用ID
	AppId NullableString `json:"app_id,omitempty"`
	// 授权应用ID
	AuthAppId NullableString `json:"auth_app_id,omitempty"`
	// 字符集
	Charset NullableString `json:"charset,omitempty"`
	// 接口名称
	Method NullableString `json:"method,omitempty"`
	// 商户订单号
	OutTradeNo NullableString `json:"out_trade_no,omitempty"`
	// 卖家支付宝用户号
	SellerId NullableString `json:"seller_id,omitempty"`
	// 签名
	Sign NullableString `json:"sign,omitempty"`
	// 签名类型
	SignType NullableString `json:"sign_type,omitempty"`
	// 时间戳
	Timestamp NullableString `json:"timestamp,omitempty"`
	// 订单总金额
	TotalAmount NullableString `json:"total_amount,omitempty"`
	// 支付宝交易号
	TradeNo NullableString `json:"trade_no,omitempty"`
	// 接口版本
	Version NullableString `json:"version,omitempty"`
}

// NewReturnPageNotifyRequest instantiates a new ReturnPageNotifyRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReturnPageNotifyRequest() *ReturnPageNotifyRequest {
	this := ReturnPageNotifyRequest{}
	return &this
}

// NewReturnPageNotifyRequestWithDefaults instantiates a new ReturnPageNotifyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReturnPageNotifyRequestWithDefaults() *ReturnPageNotifyRequest {
	this := ReturnPageNotifyRequest{}
	return &this
}

// GetAppId returns the AppId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ReturnPageNotifyRequest) GetAppId() string {
	if o == nil || IsNil(o.AppId.Get()) {
		var ret string
		return ret
	}
	return *o.AppId.Get()
}

// GetAppIdOk returns a tuple with the AppId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReturnPageNotifyRequest) GetAppIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AppId.Get(), o.AppId.IsSet()
}

// HasAppId returns a boolean if a field has been set.
func (o *ReturnPageNotifyRequest) HasAppId() bool {
	if o != nil && o.AppId.IsSet() {
		return true
	}

	return false
}

// SetAppId gets a reference to the given NullableString and assigns it to the AppId field.
func (o *ReturnPageNotifyRequest) SetAppId(v string) {
	o.AppId.Set(&v)
}
// SetAppIdNil sets the value for AppId to be an explicit nil
func (o *ReturnPageNotifyRequest) SetAppIdNil() {
	o.AppId.Set(nil)
}

// UnsetAppId ensures that no value is present for AppId, not even an explicit nil
func (o *ReturnPageNotifyRequest) UnsetAppId() {
	o.AppId.Unset()
}

// GetAuthAppId returns the AuthAppId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ReturnPageNotifyRequest) GetAuthAppId() string {
	if o == nil || IsNil(o.AuthAppId.Get()) {
		var ret string
		return ret
	}
	return *o.AuthAppId.Get()
}

// GetAuthAppIdOk returns a tuple with the AuthAppId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReturnPageNotifyRequest) GetAuthAppIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AuthAppId.Get(), o.AuthAppId.IsSet()
}

// HasAuthAppId returns a boolean if a field has been set.
func (o *ReturnPageNotifyRequest) HasAuthAppId() bool {
	if o != nil && o.AuthAppId.IsSet() {
		return true
	}

	return false
}

// SetAuthAppId gets a reference to the given NullableString and assigns it to the AuthAppId field.
func (o *ReturnPageNotifyRequest) SetAuthAppId(v string) {
	o.AuthAppId.Set(&v)
}
// SetAuthAppIdNil sets the value for AuthAppId to be an explicit nil
func (o *ReturnPageNotifyRequest) SetAuthAppIdNil() {
	o.AuthAppId.Set(nil)
}

// UnsetAuthAppId ensures that no value is present for AuthAppId, not even an explicit nil
func (o *ReturnPageNotifyRequest) UnsetAuthAppId() {
	o.AuthAppId.Unset()
}

// GetCharset returns the Charset field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ReturnPageNotifyRequest) GetCharset() string {
	if o == nil || IsNil(o.Charset.Get()) {
		var ret string
		return ret
	}
	return *o.Charset.Get()
}

// GetCharsetOk returns a tuple with the Charset field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReturnPageNotifyRequest) GetCharsetOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Charset.Get(), o.Charset.IsSet()
}

// HasCharset returns a boolean if a field has been set.
func (o *ReturnPageNotifyRequest) HasCharset() bool {
	if o != nil && o.Charset.IsSet() {
		return true
	}

	return false
}

// SetCharset gets a reference to the given NullableString and assigns it to the Charset field.
func (o *ReturnPageNotifyRequest) SetCharset(v string) {
	o.Charset.Set(&v)
}
// SetCharsetNil sets the value for Charset to be an explicit nil
func (o *ReturnPageNotifyRequest) SetCharsetNil() {
	o.Charset.Set(nil)
}

// UnsetCharset ensures that no value is present for Charset, not even an explicit nil
func (o *ReturnPageNotifyRequest) UnsetCharset() {
	o.Charset.Unset()
}

// GetMethod returns the Method field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ReturnPageNotifyRequest) GetMethod() string {
	if o == nil || IsNil(o.Method.Get()) {
		var ret string
		return ret
	}
	return *o.Method.Get()
}

// GetMethodOk returns a tuple with the Method field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReturnPageNotifyRequest) GetMethodOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Method.Get(), o.Method.IsSet()
}

// HasMethod returns a boolean if a field has been set.
func (o *ReturnPageNotifyRequest) HasMethod() bool {
	if o != nil && o.Method.IsSet() {
		return true
	}

	return false
}

// SetMethod gets a reference to the given NullableString and assigns it to the Method field.
func (o *ReturnPageNotifyRequest) SetMethod(v string) {
	o.Method.Set(&v)
}
// SetMethodNil sets the value for Method to be an explicit nil
func (o *ReturnPageNotifyRequest) SetMethodNil() {
	o.Method.Set(nil)
}

// UnsetMethod ensures that no value is present for Method, not even an explicit nil
func (o *ReturnPageNotifyRequest) UnsetMethod() {
	o.Method.Unset()
}

// GetOutTradeNo returns the OutTradeNo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ReturnPageNotifyRequest) GetOutTradeNo() string {
	if o == nil || IsNil(o.OutTradeNo.Get()) {
		var ret string
		return ret
	}
	return *o.OutTradeNo.Get()
}

// GetOutTradeNoOk returns a tuple with the OutTradeNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReturnPageNotifyRequest) GetOutTradeNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OutTradeNo.Get(), o.OutTradeNo.IsSet()
}

// HasOutTradeNo returns a boolean if a field has been set.
func (o *ReturnPageNotifyRequest) HasOutTradeNo() bool {
	if o != nil && o.OutTradeNo.IsSet() {
		return true
	}

	return false
}

// SetOutTradeNo gets a reference to the given NullableString and assigns it to the OutTradeNo field.
func (o *ReturnPageNotifyRequest) SetOutTradeNo(v string) {
	o.OutTradeNo.Set(&v)
}
// SetOutTradeNoNil sets the value for OutTradeNo to be an explicit nil
func (o *ReturnPageNotifyRequest) SetOutTradeNoNil() {
	o.OutTradeNo.Set(nil)
}

// UnsetOutTradeNo ensures that no value is present for OutTradeNo, not even an explicit nil
func (o *ReturnPageNotifyRequest) UnsetOutTradeNo() {
	o.OutTradeNo.Unset()
}

// GetSellerId returns the SellerId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ReturnPageNotifyRequest) GetSellerId() string {
	if o == nil || IsNil(o.SellerId.Get()) {
		var ret string
		return ret
	}
	return *o.SellerId.Get()
}

// GetSellerIdOk returns a tuple with the SellerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReturnPageNotifyRequest) GetSellerIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SellerId.Get(), o.SellerId.IsSet()
}

// HasSellerId returns a boolean if a field has been set.
func (o *ReturnPageNotifyRequest) HasSellerId() bool {
	if o != nil && o.SellerId.IsSet() {
		return true
	}

	return false
}

// SetSellerId gets a reference to the given NullableString and assigns it to the SellerId field.
func (o *ReturnPageNotifyRequest) SetSellerId(v string) {
	o.SellerId.Set(&v)
}
// SetSellerIdNil sets the value for SellerId to be an explicit nil
func (o *ReturnPageNotifyRequest) SetSellerIdNil() {
	o.SellerId.Set(nil)
}

// UnsetSellerId ensures that no value is present for SellerId, not even an explicit nil
func (o *ReturnPageNotifyRequest) UnsetSellerId() {
	o.SellerId.Unset()
}

// GetSign returns the Sign field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ReturnPageNotifyRequest) GetSign() string {
	if o == nil || IsNil(o.Sign.Get()) {
		var ret string
		return ret
	}
	return *o.Sign.Get()
}

// GetSignOk returns a tuple with the Sign field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReturnPageNotifyRequest) GetSignOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Sign.Get(), o.Sign.IsSet()
}

// HasSign returns a boolean if a field has been set.
func (o *ReturnPageNotifyRequest) HasSign() bool {
	if o != nil && o.Sign.IsSet() {
		return true
	}

	return false
}

// SetSign gets a reference to the given NullableString and assigns it to the Sign field.
func (o *ReturnPageNotifyRequest) SetSign(v string) {
	o.Sign.Set(&v)
}
// SetSignNil sets the value for Sign to be an explicit nil
func (o *ReturnPageNotifyRequest) SetSignNil() {
	o.Sign.Set(nil)
}

// UnsetSign ensures that no value is present for Sign, not even an explicit nil
func (o *ReturnPageNotifyRequest) UnsetSign() {
	o.Sign.Unset()
}

// GetSignType returns the SignType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ReturnPageNotifyRequest) GetSignType() string {
	if o == nil || IsNil(o.SignType.Get()) {
		var ret string
		return ret
	}
	return *o.SignType.Get()
}

// GetSignTypeOk returns a tuple with the SignType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReturnPageNotifyRequest) GetSignTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SignType.Get(), o.SignType.IsSet()
}

// HasSignType returns a boolean if a field has been set.
func (o *ReturnPageNotifyRequest) HasSignType() bool {
	if o != nil && o.SignType.IsSet() {
		return true
	}

	return false
}

// SetSignType gets a reference to the given NullableString and assigns it to the SignType field.
func (o *ReturnPageNotifyRequest) SetSignType(v string) {
	o.SignType.Set(&v)
}
// SetSignTypeNil sets the value for SignType to be an explicit nil
func (o *ReturnPageNotifyRequest) SetSignTypeNil() {
	o.SignType.Set(nil)
}

// UnsetSignType ensures that no value is present for SignType, not even an explicit nil
func (o *ReturnPageNotifyRequest) UnsetSignType() {
	o.SignType.Unset()
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ReturnPageNotifyRequest) GetTimestamp() string {
	if o == nil || IsNil(o.Timestamp.Get()) {
		var ret string
		return ret
	}
	return *o.Timestamp.Get()
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReturnPageNotifyRequest) GetTimestampOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Timestamp.Get(), o.Timestamp.IsSet()
}

// HasTimestamp returns a boolean if a field has been set.
func (o *ReturnPageNotifyRequest) HasTimestamp() bool {
	if o != nil && o.Timestamp.IsSet() {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given NullableString and assigns it to the Timestamp field.
func (o *ReturnPageNotifyRequest) SetTimestamp(v string) {
	o.Timestamp.Set(&v)
}
// SetTimestampNil sets the value for Timestamp to be an explicit nil
func (o *ReturnPageNotifyRequest) SetTimestampNil() {
	o.Timestamp.Set(nil)
}

// UnsetTimestamp ensures that no value is present for Timestamp, not even an explicit nil
func (o *ReturnPageNotifyRequest) UnsetTimestamp() {
	o.Timestamp.Unset()
}

// GetTotalAmount returns the TotalAmount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ReturnPageNotifyRequest) GetTotalAmount() string {
	if o == nil || IsNil(o.TotalAmount.Get()) {
		var ret string
		return ret
	}
	return *o.TotalAmount.Get()
}

// GetTotalAmountOk returns a tuple with the TotalAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReturnPageNotifyRequest) GetTotalAmountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TotalAmount.Get(), o.TotalAmount.IsSet()
}

// HasTotalAmount returns a boolean if a field has been set.
func (o *ReturnPageNotifyRequest) HasTotalAmount() bool {
	if o != nil && o.TotalAmount.IsSet() {
		return true
	}

	return false
}

// SetTotalAmount gets a reference to the given NullableString and assigns it to the TotalAmount field.
func (o *ReturnPageNotifyRequest) SetTotalAmount(v string) {
	o.TotalAmount.Set(&v)
}
// SetTotalAmountNil sets the value for TotalAmount to be an explicit nil
func (o *ReturnPageNotifyRequest) SetTotalAmountNil() {
	o.TotalAmount.Set(nil)
}

// UnsetTotalAmount ensures that no value is present for TotalAmount, not even an explicit nil
func (o *ReturnPageNotifyRequest) UnsetTotalAmount() {
	o.TotalAmount.Unset()
}

// GetTradeNo returns the TradeNo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ReturnPageNotifyRequest) GetTradeNo() string {
	if o == nil || IsNil(o.TradeNo.Get()) {
		var ret string
		return ret
	}
	return *o.TradeNo.Get()
}

// GetTradeNoOk returns a tuple with the TradeNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReturnPageNotifyRequest) GetTradeNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TradeNo.Get(), o.TradeNo.IsSet()
}

// HasTradeNo returns a boolean if a field has been set.
func (o *ReturnPageNotifyRequest) HasTradeNo() bool {
	if o != nil && o.TradeNo.IsSet() {
		return true
	}

	return false
}

// SetTradeNo gets a reference to the given NullableString and assigns it to the TradeNo field.
func (o *ReturnPageNotifyRequest) SetTradeNo(v string) {
	o.TradeNo.Set(&v)
}
// SetTradeNoNil sets the value for TradeNo to be an explicit nil
func (o *ReturnPageNotifyRequest) SetTradeNoNil() {
	o.TradeNo.Set(nil)
}

// UnsetTradeNo ensures that no value is present for TradeNo, not even an explicit nil
func (o *ReturnPageNotifyRequest) UnsetTradeNo() {
	o.TradeNo.Unset()
}

// GetVersion returns the Version field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ReturnPageNotifyRequest) GetVersion() string {
	if o == nil || IsNil(o.Version.Get()) {
		var ret string
		return ret
	}
	return *o.Version.Get()
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReturnPageNotifyRequest) GetVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Version.Get(), o.Version.IsSet()
}

// HasVersion returns a boolean if a field has been set.
func (o *ReturnPageNotifyRequest) HasVersion() bool {
	if o != nil && o.Version.IsSet() {
		return true
	}

	return false
}

// SetVersion gets a reference to the given NullableString and assigns it to the Version field.
func (o *ReturnPageNotifyRequest) SetVersion(v string) {
	o.Version.Set(&v)
}
// SetVersionNil sets the value for Version to be an explicit nil
func (o *ReturnPageNotifyRequest) SetVersionNil() {
	o.Version.Set(nil)
}

// UnsetVersion ensures that no value is present for Version, not even an explicit nil
func (o *ReturnPageNotifyRequest) UnsetVersion() {
	o.Version.Unset()
}

func (o ReturnPageNotifyRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReturnPageNotifyRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.AppId.IsSet() {
		toSerialize["app_id"] = o.AppId.Get()
	}
	if o.AuthAppId.IsSet() {
		toSerialize["auth_app_id"] = o.AuthAppId.Get()
	}
	if o.Charset.IsSet() {
		toSerialize["charset"] = o.Charset.Get()
	}
	if o.Method.IsSet() {
		toSerialize["method"] = o.Method.Get()
	}
	if o.OutTradeNo.IsSet() {
		toSerialize["out_trade_no"] = o.OutTradeNo.Get()
	}
	if o.SellerId.IsSet() {
		toSerialize["seller_id"] = o.SellerId.Get()
	}
	if o.Sign.IsSet() {
		toSerialize["sign"] = o.Sign.Get()
	}
	if o.SignType.IsSet() {
		toSerialize["sign_type"] = o.SignType.Get()
	}
	if o.Timestamp.IsSet() {
		toSerialize["timestamp"] = o.Timestamp.Get()
	}
	if o.TotalAmount.IsSet() {
		toSerialize["total_amount"] = o.TotalAmount.Get()
	}
	if o.TradeNo.IsSet() {
		toSerialize["trade_no"] = o.TradeNo.Get()
	}
	if o.Version.IsSet() {
		toSerialize["version"] = o.Version.Get()
	}
	return toSerialize, nil
}

type NullableReturnPageNotifyRequest struct {
	value *ReturnPageNotifyRequest
	isSet bool
}

func (v NullableReturnPageNotifyRequest) Get() *ReturnPageNotifyRequest {
	return v.value
}

func (v *NullableReturnPageNotifyRequest) Set(val *ReturnPageNotifyRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableReturnPageNotifyRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableReturnPageNotifyRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReturnPageNotifyRequest(val *ReturnPageNotifyRequest) *NullableReturnPageNotifyRequest {
	return &NullableReturnPageNotifyRequest{value: val, isSet: true}
}

func (v NullableReturnPageNotifyRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReturnPageNotifyRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


