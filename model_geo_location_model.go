/*
全部  API 文档

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package zsgf

import (
	"encoding/json"
	"time"
)

// checks if the GeoLocationModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GeoLocationModel{}

// GeoLocationModel struct for GeoLocationModel
type GeoLocationModel struct {
	// 纬度
	Latitude *float64 `json:"latitude,omitempty"`
	// 经度
	Longitude *float64 `json:"longitude,omitempty"`
	// 地点的名称
	LocationName NullableString `json:"locationName,omitempty"`
	// 地点的类型，如家庭、工作、学校等
	LocationType NullableString `json:"locationType,omitempty"`
	// 收货人姓名
	RecipientName NullableString `json:"recipientName,omitempty"`
	// 收货人联系电话
	PhoneNumber NullableString `json:"phoneNumber,omitempty"`
	// 收货人电子邮件
	Email NullableString `json:"email,omitempty"`
	// 国家
	Country NullableString `json:"country,omitempty"`
	// 州/省
	State NullableString `json:"state,omitempty"`
	// 城市
	City NullableString `json:"city,omitempty"`
	// 区/县
	District NullableString `json:"district,omitempty"`
	// 街道
	Street NullableString `json:"street,omitempty"`
	// 邮政编码
	ZipCode NullableString `json:"zipCode,omitempty"`
	// 详细的地址信息
	Address NullableString `json:"address,omitempty"`
	// 地址类型，百度、高德、谷歌
	MapType NullableString `json:"mapType,omitempty"`
	// 备注
	Remark NullableString `json:"remark,omitempty"`
	// 标签
	Tags NullableString `json:"tags,omitempty"`
	// 启用
	Enable *bool `json:"enable,omitempty"`
	// 排序
	ShowIndex *int32 `json:"showIndex,omitempty"`
	// 创建时间
	CreateDate *time.Time `json:"createDate,omitempty"`
	// 最后更新的时间
	LastUpdate *time.Time `json:"lastUpdate,omitempty"`
}

// NewGeoLocationModel instantiates a new GeoLocationModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGeoLocationModel() *GeoLocationModel {
	this := GeoLocationModel{}
	return &this
}

// NewGeoLocationModelWithDefaults instantiates a new GeoLocationModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGeoLocationModelWithDefaults() *GeoLocationModel {
	this := GeoLocationModel{}
	return &this
}

// GetLatitude returns the Latitude field value if set, zero value otherwise.
func (o *GeoLocationModel) GetLatitude() float64 {
	if o == nil || IsNil(o.Latitude) {
		var ret float64
		return ret
	}
	return *o.Latitude
}

// GetLatitudeOk returns a tuple with the Latitude field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeoLocationModel) GetLatitudeOk() (*float64, bool) {
	if o == nil || IsNil(o.Latitude) {
		return nil, false
	}
	return o.Latitude, true
}

// HasLatitude returns a boolean if a field has been set.
func (o *GeoLocationModel) HasLatitude() bool {
	if o != nil && !IsNil(o.Latitude) {
		return true
	}

	return false
}

// SetLatitude gets a reference to the given float64 and assigns it to the Latitude field.
func (o *GeoLocationModel) SetLatitude(v float64) {
	o.Latitude = &v
}

// GetLongitude returns the Longitude field value if set, zero value otherwise.
func (o *GeoLocationModel) GetLongitude() float64 {
	if o == nil || IsNil(o.Longitude) {
		var ret float64
		return ret
	}
	return *o.Longitude
}

// GetLongitudeOk returns a tuple with the Longitude field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeoLocationModel) GetLongitudeOk() (*float64, bool) {
	if o == nil || IsNil(o.Longitude) {
		return nil, false
	}
	return o.Longitude, true
}

// HasLongitude returns a boolean if a field has been set.
func (o *GeoLocationModel) HasLongitude() bool {
	if o != nil && !IsNil(o.Longitude) {
		return true
	}

	return false
}

// SetLongitude gets a reference to the given float64 and assigns it to the Longitude field.
func (o *GeoLocationModel) SetLongitude(v float64) {
	o.Longitude = &v
}

// GetLocationName returns the LocationName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GeoLocationModel) GetLocationName() string {
	if o == nil || IsNil(o.LocationName.Get()) {
		var ret string
		return ret
	}
	return *o.LocationName.Get()
}

// GetLocationNameOk returns a tuple with the LocationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GeoLocationModel) GetLocationNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LocationName.Get(), o.LocationName.IsSet()
}

// HasLocationName returns a boolean if a field has been set.
func (o *GeoLocationModel) HasLocationName() bool {
	if o != nil && o.LocationName.IsSet() {
		return true
	}

	return false
}

// SetLocationName gets a reference to the given NullableString and assigns it to the LocationName field.
func (o *GeoLocationModel) SetLocationName(v string) {
	o.LocationName.Set(&v)
}
// SetLocationNameNil sets the value for LocationName to be an explicit nil
func (o *GeoLocationModel) SetLocationNameNil() {
	o.LocationName.Set(nil)
}

// UnsetLocationName ensures that no value is present for LocationName, not even an explicit nil
func (o *GeoLocationModel) UnsetLocationName() {
	o.LocationName.Unset()
}

// GetLocationType returns the LocationType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GeoLocationModel) GetLocationType() string {
	if o == nil || IsNil(o.LocationType.Get()) {
		var ret string
		return ret
	}
	return *o.LocationType.Get()
}

// GetLocationTypeOk returns a tuple with the LocationType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GeoLocationModel) GetLocationTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LocationType.Get(), o.LocationType.IsSet()
}

// HasLocationType returns a boolean if a field has been set.
func (o *GeoLocationModel) HasLocationType() bool {
	if o != nil && o.LocationType.IsSet() {
		return true
	}

	return false
}

// SetLocationType gets a reference to the given NullableString and assigns it to the LocationType field.
func (o *GeoLocationModel) SetLocationType(v string) {
	o.LocationType.Set(&v)
}
// SetLocationTypeNil sets the value for LocationType to be an explicit nil
func (o *GeoLocationModel) SetLocationTypeNil() {
	o.LocationType.Set(nil)
}

// UnsetLocationType ensures that no value is present for LocationType, not even an explicit nil
func (o *GeoLocationModel) UnsetLocationType() {
	o.LocationType.Unset()
}

// GetRecipientName returns the RecipientName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GeoLocationModel) GetRecipientName() string {
	if o == nil || IsNil(o.RecipientName.Get()) {
		var ret string
		return ret
	}
	return *o.RecipientName.Get()
}

// GetRecipientNameOk returns a tuple with the RecipientName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GeoLocationModel) GetRecipientNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RecipientName.Get(), o.RecipientName.IsSet()
}

// HasRecipientName returns a boolean if a field has been set.
func (o *GeoLocationModel) HasRecipientName() bool {
	if o != nil && o.RecipientName.IsSet() {
		return true
	}

	return false
}

// SetRecipientName gets a reference to the given NullableString and assigns it to the RecipientName field.
func (o *GeoLocationModel) SetRecipientName(v string) {
	o.RecipientName.Set(&v)
}
// SetRecipientNameNil sets the value for RecipientName to be an explicit nil
func (o *GeoLocationModel) SetRecipientNameNil() {
	o.RecipientName.Set(nil)
}

// UnsetRecipientName ensures that no value is present for RecipientName, not even an explicit nil
func (o *GeoLocationModel) UnsetRecipientName() {
	o.RecipientName.Unset()
}

// GetPhoneNumber returns the PhoneNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GeoLocationModel) GetPhoneNumber() string {
	if o == nil || IsNil(o.PhoneNumber.Get()) {
		var ret string
		return ret
	}
	return *o.PhoneNumber.Get()
}

// GetPhoneNumberOk returns a tuple with the PhoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GeoLocationModel) GetPhoneNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PhoneNumber.Get(), o.PhoneNumber.IsSet()
}

// HasPhoneNumber returns a boolean if a field has been set.
func (o *GeoLocationModel) HasPhoneNumber() bool {
	if o != nil && o.PhoneNumber.IsSet() {
		return true
	}

	return false
}

// SetPhoneNumber gets a reference to the given NullableString and assigns it to the PhoneNumber field.
func (o *GeoLocationModel) SetPhoneNumber(v string) {
	o.PhoneNumber.Set(&v)
}
// SetPhoneNumberNil sets the value for PhoneNumber to be an explicit nil
func (o *GeoLocationModel) SetPhoneNumberNil() {
	o.PhoneNumber.Set(nil)
}

// UnsetPhoneNumber ensures that no value is present for PhoneNumber, not even an explicit nil
func (o *GeoLocationModel) UnsetPhoneNumber() {
	o.PhoneNumber.Unset()
}

// GetEmail returns the Email field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GeoLocationModel) GetEmail() string {
	if o == nil || IsNil(o.Email.Get()) {
		var ret string
		return ret
	}
	return *o.Email.Get()
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GeoLocationModel) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Email.Get(), o.Email.IsSet()
}

// HasEmail returns a boolean if a field has been set.
func (o *GeoLocationModel) HasEmail() bool {
	if o != nil && o.Email.IsSet() {
		return true
	}

	return false
}

// SetEmail gets a reference to the given NullableString and assigns it to the Email field.
func (o *GeoLocationModel) SetEmail(v string) {
	o.Email.Set(&v)
}
// SetEmailNil sets the value for Email to be an explicit nil
func (o *GeoLocationModel) SetEmailNil() {
	o.Email.Set(nil)
}

// UnsetEmail ensures that no value is present for Email, not even an explicit nil
func (o *GeoLocationModel) UnsetEmail() {
	o.Email.Unset()
}

// GetCountry returns the Country field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GeoLocationModel) GetCountry() string {
	if o == nil || IsNil(o.Country.Get()) {
		var ret string
		return ret
	}
	return *o.Country.Get()
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GeoLocationModel) GetCountryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Country.Get(), o.Country.IsSet()
}

// HasCountry returns a boolean if a field has been set.
func (o *GeoLocationModel) HasCountry() bool {
	if o != nil && o.Country.IsSet() {
		return true
	}

	return false
}

// SetCountry gets a reference to the given NullableString and assigns it to the Country field.
func (o *GeoLocationModel) SetCountry(v string) {
	o.Country.Set(&v)
}
// SetCountryNil sets the value for Country to be an explicit nil
func (o *GeoLocationModel) SetCountryNil() {
	o.Country.Set(nil)
}

// UnsetCountry ensures that no value is present for Country, not even an explicit nil
func (o *GeoLocationModel) UnsetCountry() {
	o.Country.Unset()
}

// GetState returns the State field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GeoLocationModel) GetState() string {
	if o == nil || IsNil(o.State.Get()) {
		var ret string
		return ret
	}
	return *o.State.Get()
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GeoLocationModel) GetStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.State.Get(), o.State.IsSet()
}

// HasState returns a boolean if a field has been set.
func (o *GeoLocationModel) HasState() bool {
	if o != nil && o.State.IsSet() {
		return true
	}

	return false
}

// SetState gets a reference to the given NullableString and assigns it to the State field.
func (o *GeoLocationModel) SetState(v string) {
	o.State.Set(&v)
}
// SetStateNil sets the value for State to be an explicit nil
func (o *GeoLocationModel) SetStateNil() {
	o.State.Set(nil)
}

// UnsetState ensures that no value is present for State, not even an explicit nil
func (o *GeoLocationModel) UnsetState() {
	o.State.Unset()
}

// GetCity returns the City field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GeoLocationModel) GetCity() string {
	if o == nil || IsNil(o.City.Get()) {
		var ret string
		return ret
	}
	return *o.City.Get()
}

// GetCityOk returns a tuple with the City field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GeoLocationModel) GetCityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.City.Get(), o.City.IsSet()
}

// HasCity returns a boolean if a field has been set.
func (o *GeoLocationModel) HasCity() bool {
	if o != nil && o.City.IsSet() {
		return true
	}

	return false
}

// SetCity gets a reference to the given NullableString and assigns it to the City field.
func (o *GeoLocationModel) SetCity(v string) {
	o.City.Set(&v)
}
// SetCityNil sets the value for City to be an explicit nil
func (o *GeoLocationModel) SetCityNil() {
	o.City.Set(nil)
}

// UnsetCity ensures that no value is present for City, not even an explicit nil
func (o *GeoLocationModel) UnsetCity() {
	o.City.Unset()
}

// GetDistrict returns the District field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GeoLocationModel) GetDistrict() string {
	if o == nil || IsNil(o.District.Get()) {
		var ret string
		return ret
	}
	return *o.District.Get()
}

// GetDistrictOk returns a tuple with the District field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GeoLocationModel) GetDistrictOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.District.Get(), o.District.IsSet()
}

// HasDistrict returns a boolean if a field has been set.
func (o *GeoLocationModel) HasDistrict() bool {
	if o != nil && o.District.IsSet() {
		return true
	}

	return false
}

// SetDistrict gets a reference to the given NullableString and assigns it to the District field.
func (o *GeoLocationModel) SetDistrict(v string) {
	o.District.Set(&v)
}
// SetDistrictNil sets the value for District to be an explicit nil
func (o *GeoLocationModel) SetDistrictNil() {
	o.District.Set(nil)
}

// UnsetDistrict ensures that no value is present for District, not even an explicit nil
func (o *GeoLocationModel) UnsetDistrict() {
	o.District.Unset()
}

// GetStreet returns the Street field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GeoLocationModel) GetStreet() string {
	if o == nil || IsNil(o.Street.Get()) {
		var ret string
		return ret
	}
	return *o.Street.Get()
}

// GetStreetOk returns a tuple with the Street field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GeoLocationModel) GetStreetOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Street.Get(), o.Street.IsSet()
}

// HasStreet returns a boolean if a field has been set.
func (o *GeoLocationModel) HasStreet() bool {
	if o != nil && o.Street.IsSet() {
		return true
	}

	return false
}

// SetStreet gets a reference to the given NullableString and assigns it to the Street field.
func (o *GeoLocationModel) SetStreet(v string) {
	o.Street.Set(&v)
}
// SetStreetNil sets the value for Street to be an explicit nil
func (o *GeoLocationModel) SetStreetNil() {
	o.Street.Set(nil)
}

// UnsetStreet ensures that no value is present for Street, not even an explicit nil
func (o *GeoLocationModel) UnsetStreet() {
	o.Street.Unset()
}

// GetZipCode returns the ZipCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GeoLocationModel) GetZipCode() string {
	if o == nil || IsNil(o.ZipCode.Get()) {
		var ret string
		return ret
	}
	return *o.ZipCode.Get()
}

// GetZipCodeOk returns a tuple with the ZipCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GeoLocationModel) GetZipCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ZipCode.Get(), o.ZipCode.IsSet()
}

// HasZipCode returns a boolean if a field has been set.
func (o *GeoLocationModel) HasZipCode() bool {
	if o != nil && o.ZipCode.IsSet() {
		return true
	}

	return false
}

// SetZipCode gets a reference to the given NullableString and assigns it to the ZipCode field.
func (o *GeoLocationModel) SetZipCode(v string) {
	o.ZipCode.Set(&v)
}
// SetZipCodeNil sets the value for ZipCode to be an explicit nil
func (o *GeoLocationModel) SetZipCodeNil() {
	o.ZipCode.Set(nil)
}

// UnsetZipCode ensures that no value is present for ZipCode, not even an explicit nil
func (o *GeoLocationModel) UnsetZipCode() {
	o.ZipCode.Unset()
}

// GetAddress returns the Address field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GeoLocationModel) GetAddress() string {
	if o == nil || IsNil(o.Address.Get()) {
		var ret string
		return ret
	}
	return *o.Address.Get()
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GeoLocationModel) GetAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Address.Get(), o.Address.IsSet()
}

// HasAddress returns a boolean if a field has been set.
func (o *GeoLocationModel) HasAddress() bool {
	if o != nil && o.Address.IsSet() {
		return true
	}

	return false
}

// SetAddress gets a reference to the given NullableString and assigns it to the Address field.
func (o *GeoLocationModel) SetAddress(v string) {
	o.Address.Set(&v)
}
// SetAddressNil sets the value for Address to be an explicit nil
func (o *GeoLocationModel) SetAddressNil() {
	o.Address.Set(nil)
}

// UnsetAddress ensures that no value is present for Address, not even an explicit nil
func (o *GeoLocationModel) UnsetAddress() {
	o.Address.Unset()
}

// GetMapType returns the MapType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GeoLocationModel) GetMapType() string {
	if o == nil || IsNil(o.MapType.Get()) {
		var ret string
		return ret
	}
	return *o.MapType.Get()
}

// GetMapTypeOk returns a tuple with the MapType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GeoLocationModel) GetMapTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MapType.Get(), o.MapType.IsSet()
}

// HasMapType returns a boolean if a field has been set.
func (o *GeoLocationModel) HasMapType() bool {
	if o != nil && o.MapType.IsSet() {
		return true
	}

	return false
}

// SetMapType gets a reference to the given NullableString and assigns it to the MapType field.
func (o *GeoLocationModel) SetMapType(v string) {
	o.MapType.Set(&v)
}
// SetMapTypeNil sets the value for MapType to be an explicit nil
func (o *GeoLocationModel) SetMapTypeNil() {
	o.MapType.Set(nil)
}

// UnsetMapType ensures that no value is present for MapType, not even an explicit nil
func (o *GeoLocationModel) UnsetMapType() {
	o.MapType.Unset()
}

// GetRemark returns the Remark field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GeoLocationModel) GetRemark() string {
	if o == nil || IsNil(o.Remark.Get()) {
		var ret string
		return ret
	}
	return *o.Remark.Get()
}

// GetRemarkOk returns a tuple with the Remark field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GeoLocationModel) GetRemarkOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Remark.Get(), o.Remark.IsSet()
}

// HasRemark returns a boolean if a field has been set.
func (o *GeoLocationModel) HasRemark() bool {
	if o != nil && o.Remark.IsSet() {
		return true
	}

	return false
}

// SetRemark gets a reference to the given NullableString and assigns it to the Remark field.
func (o *GeoLocationModel) SetRemark(v string) {
	o.Remark.Set(&v)
}
// SetRemarkNil sets the value for Remark to be an explicit nil
func (o *GeoLocationModel) SetRemarkNil() {
	o.Remark.Set(nil)
}

// UnsetRemark ensures that no value is present for Remark, not even an explicit nil
func (o *GeoLocationModel) UnsetRemark() {
	o.Remark.Unset()
}

// GetTags returns the Tags field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GeoLocationModel) GetTags() string {
	if o == nil || IsNil(o.Tags.Get()) {
		var ret string
		return ret
	}
	return *o.Tags.Get()
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GeoLocationModel) GetTagsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Tags.Get(), o.Tags.IsSet()
}

// HasTags returns a boolean if a field has been set.
func (o *GeoLocationModel) HasTags() bool {
	if o != nil && o.Tags.IsSet() {
		return true
	}

	return false
}

// SetTags gets a reference to the given NullableString and assigns it to the Tags field.
func (o *GeoLocationModel) SetTags(v string) {
	o.Tags.Set(&v)
}
// SetTagsNil sets the value for Tags to be an explicit nil
func (o *GeoLocationModel) SetTagsNil() {
	o.Tags.Set(nil)
}

// UnsetTags ensures that no value is present for Tags, not even an explicit nil
func (o *GeoLocationModel) UnsetTags() {
	o.Tags.Unset()
}

// GetEnable returns the Enable field value if set, zero value otherwise.
func (o *GeoLocationModel) GetEnable() bool {
	if o == nil || IsNil(o.Enable) {
		var ret bool
		return ret
	}
	return *o.Enable
}

// GetEnableOk returns a tuple with the Enable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeoLocationModel) GetEnableOk() (*bool, bool) {
	if o == nil || IsNil(o.Enable) {
		return nil, false
	}
	return o.Enable, true
}

// HasEnable returns a boolean if a field has been set.
func (o *GeoLocationModel) HasEnable() bool {
	if o != nil && !IsNil(o.Enable) {
		return true
	}

	return false
}

// SetEnable gets a reference to the given bool and assigns it to the Enable field.
func (o *GeoLocationModel) SetEnable(v bool) {
	o.Enable = &v
}

// GetShowIndex returns the ShowIndex field value if set, zero value otherwise.
func (o *GeoLocationModel) GetShowIndex() int32 {
	if o == nil || IsNil(o.ShowIndex) {
		var ret int32
		return ret
	}
	return *o.ShowIndex
}

// GetShowIndexOk returns a tuple with the ShowIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeoLocationModel) GetShowIndexOk() (*int32, bool) {
	if o == nil || IsNil(o.ShowIndex) {
		return nil, false
	}
	return o.ShowIndex, true
}

// HasShowIndex returns a boolean if a field has been set.
func (o *GeoLocationModel) HasShowIndex() bool {
	if o != nil && !IsNil(o.ShowIndex) {
		return true
	}

	return false
}

// SetShowIndex gets a reference to the given int32 and assigns it to the ShowIndex field.
func (o *GeoLocationModel) SetShowIndex(v int32) {
	o.ShowIndex = &v
}

// GetCreateDate returns the CreateDate field value if set, zero value otherwise.
func (o *GeoLocationModel) GetCreateDate() time.Time {
	if o == nil || IsNil(o.CreateDate) {
		var ret time.Time
		return ret
	}
	return *o.CreateDate
}

// GetCreateDateOk returns a tuple with the CreateDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeoLocationModel) GetCreateDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreateDate) {
		return nil, false
	}
	return o.CreateDate, true
}

// HasCreateDate returns a boolean if a field has been set.
func (o *GeoLocationModel) HasCreateDate() bool {
	if o != nil && !IsNil(o.CreateDate) {
		return true
	}

	return false
}

// SetCreateDate gets a reference to the given time.Time and assigns it to the CreateDate field.
func (o *GeoLocationModel) SetCreateDate(v time.Time) {
	o.CreateDate = &v
}

// GetLastUpdate returns the LastUpdate field value if set, zero value otherwise.
func (o *GeoLocationModel) GetLastUpdate() time.Time {
	if o == nil || IsNil(o.LastUpdate) {
		var ret time.Time
		return ret
	}
	return *o.LastUpdate
}

// GetLastUpdateOk returns a tuple with the LastUpdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeoLocationModel) GetLastUpdateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastUpdate) {
		return nil, false
	}
	return o.LastUpdate, true
}

// HasLastUpdate returns a boolean if a field has been set.
func (o *GeoLocationModel) HasLastUpdate() bool {
	if o != nil && !IsNil(o.LastUpdate) {
		return true
	}

	return false
}

// SetLastUpdate gets a reference to the given time.Time and assigns it to the LastUpdate field.
func (o *GeoLocationModel) SetLastUpdate(v time.Time) {
	o.LastUpdate = &v
}

func (o GeoLocationModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GeoLocationModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Latitude) {
		toSerialize["latitude"] = o.Latitude
	}
	if !IsNil(o.Longitude) {
		toSerialize["longitude"] = o.Longitude
	}
	if o.LocationName.IsSet() {
		toSerialize["locationName"] = o.LocationName.Get()
	}
	if o.LocationType.IsSet() {
		toSerialize["locationType"] = o.LocationType.Get()
	}
	if o.RecipientName.IsSet() {
		toSerialize["recipientName"] = o.RecipientName.Get()
	}
	if o.PhoneNumber.IsSet() {
		toSerialize["phoneNumber"] = o.PhoneNumber.Get()
	}
	if o.Email.IsSet() {
		toSerialize["email"] = o.Email.Get()
	}
	if o.Country.IsSet() {
		toSerialize["country"] = o.Country.Get()
	}
	if o.State.IsSet() {
		toSerialize["state"] = o.State.Get()
	}
	if o.City.IsSet() {
		toSerialize["city"] = o.City.Get()
	}
	if o.District.IsSet() {
		toSerialize["district"] = o.District.Get()
	}
	if o.Street.IsSet() {
		toSerialize["street"] = o.Street.Get()
	}
	if o.ZipCode.IsSet() {
		toSerialize["zipCode"] = o.ZipCode.Get()
	}
	if o.Address.IsSet() {
		toSerialize["address"] = o.Address.Get()
	}
	if o.MapType.IsSet() {
		toSerialize["mapType"] = o.MapType.Get()
	}
	if o.Remark.IsSet() {
		toSerialize["remark"] = o.Remark.Get()
	}
	if o.Tags.IsSet() {
		toSerialize["tags"] = o.Tags.Get()
	}
	if !IsNil(o.Enable) {
		toSerialize["enable"] = o.Enable
	}
	if !IsNil(o.ShowIndex) {
		toSerialize["showIndex"] = o.ShowIndex
	}
	if !IsNil(o.CreateDate) {
		toSerialize["createDate"] = o.CreateDate
	}
	if !IsNil(o.LastUpdate) {
		toSerialize["lastUpdate"] = o.LastUpdate
	}
	return toSerialize, nil
}

type NullableGeoLocationModel struct {
	value *GeoLocationModel
	isSet bool
}

func (v NullableGeoLocationModel) Get() *GeoLocationModel {
	return v.value
}

func (v *NullableGeoLocationModel) Set(val *GeoLocationModel) {
	v.value = val
	v.isSet = true
}

func (v NullableGeoLocationModel) IsSet() bool {
	return v.isSet
}

func (v *NullableGeoLocationModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGeoLocationModel(val *GeoLocationModel) *NullableGeoLocationModel {
	return &NullableGeoLocationModel{value: val, isSet: true}
}

func (v NullableGeoLocationModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGeoLocationModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


