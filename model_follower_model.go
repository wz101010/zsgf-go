/*
全部  API 文档

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package zsgf

import (
	"encoding/json"
	"time"
)

// checks if the FollowerModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FollowerModel{}

// FollowerModel struct for FollowerModel
type FollowerModel struct {
	Id *int64 `json:"id,omitempty"`
	TargetUserID *int64 `json:"targetUserID,omitempty"`
	Alias NullableString `json:"alias,omitempty"`
	NickName NullableString `json:"nickName,omitempty"`
	Avatar NullableString `json:"avatar,omitempty"`
	IsMutual *bool `json:"isMutual,omitempty"`
	ClosenessScore *int64 `json:"closenessScore,omitempty"`
	AttentionScore *int64 `json:"attentionScore,omitempty"`
	Tags NullableString `json:"tags,omitempty"`
	Status NullableString `json:"status,omitempty"`
	Remark NullableString `json:"remark,omitempty"`
	CreateDate *time.Time `json:"createDate,omitempty"`
}

// NewFollowerModel instantiates a new FollowerModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFollowerModel() *FollowerModel {
	this := FollowerModel{}
	return &this
}

// NewFollowerModelWithDefaults instantiates a new FollowerModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFollowerModelWithDefaults() *FollowerModel {
	this := FollowerModel{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *FollowerModel) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FollowerModel) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *FollowerModel) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *FollowerModel) SetId(v int64) {
	o.Id = &v
}

// GetTargetUserID returns the TargetUserID field value if set, zero value otherwise.
func (o *FollowerModel) GetTargetUserID() int64 {
	if o == nil || IsNil(o.TargetUserID) {
		var ret int64
		return ret
	}
	return *o.TargetUserID
}

// GetTargetUserIDOk returns a tuple with the TargetUserID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FollowerModel) GetTargetUserIDOk() (*int64, bool) {
	if o == nil || IsNil(o.TargetUserID) {
		return nil, false
	}
	return o.TargetUserID, true
}

// HasTargetUserID returns a boolean if a field has been set.
func (o *FollowerModel) HasTargetUserID() bool {
	if o != nil && !IsNil(o.TargetUserID) {
		return true
	}

	return false
}

// SetTargetUserID gets a reference to the given int64 and assigns it to the TargetUserID field.
func (o *FollowerModel) SetTargetUserID(v int64) {
	o.TargetUserID = &v
}

// GetAlias returns the Alias field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FollowerModel) GetAlias() string {
	if o == nil || IsNil(o.Alias.Get()) {
		var ret string
		return ret
	}
	return *o.Alias.Get()
}

// GetAliasOk returns a tuple with the Alias field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FollowerModel) GetAliasOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Alias.Get(), o.Alias.IsSet()
}

// HasAlias returns a boolean if a field has been set.
func (o *FollowerModel) HasAlias() bool {
	if o != nil && o.Alias.IsSet() {
		return true
	}

	return false
}

// SetAlias gets a reference to the given NullableString and assigns it to the Alias field.
func (o *FollowerModel) SetAlias(v string) {
	o.Alias.Set(&v)
}
// SetAliasNil sets the value for Alias to be an explicit nil
func (o *FollowerModel) SetAliasNil() {
	o.Alias.Set(nil)
}

// UnsetAlias ensures that no value is present for Alias, not even an explicit nil
func (o *FollowerModel) UnsetAlias() {
	o.Alias.Unset()
}

// GetNickName returns the NickName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FollowerModel) GetNickName() string {
	if o == nil || IsNil(o.NickName.Get()) {
		var ret string
		return ret
	}
	return *o.NickName.Get()
}

// GetNickNameOk returns a tuple with the NickName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FollowerModel) GetNickNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.NickName.Get(), o.NickName.IsSet()
}

// HasNickName returns a boolean if a field has been set.
func (o *FollowerModel) HasNickName() bool {
	if o != nil && o.NickName.IsSet() {
		return true
	}

	return false
}

// SetNickName gets a reference to the given NullableString and assigns it to the NickName field.
func (o *FollowerModel) SetNickName(v string) {
	o.NickName.Set(&v)
}
// SetNickNameNil sets the value for NickName to be an explicit nil
func (o *FollowerModel) SetNickNameNil() {
	o.NickName.Set(nil)
}

// UnsetNickName ensures that no value is present for NickName, not even an explicit nil
func (o *FollowerModel) UnsetNickName() {
	o.NickName.Unset()
}

// GetAvatar returns the Avatar field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FollowerModel) GetAvatar() string {
	if o == nil || IsNil(o.Avatar.Get()) {
		var ret string
		return ret
	}
	return *o.Avatar.Get()
}

// GetAvatarOk returns a tuple with the Avatar field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FollowerModel) GetAvatarOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Avatar.Get(), o.Avatar.IsSet()
}

// HasAvatar returns a boolean if a field has been set.
func (o *FollowerModel) HasAvatar() bool {
	if o != nil && o.Avatar.IsSet() {
		return true
	}

	return false
}

// SetAvatar gets a reference to the given NullableString and assigns it to the Avatar field.
func (o *FollowerModel) SetAvatar(v string) {
	o.Avatar.Set(&v)
}
// SetAvatarNil sets the value for Avatar to be an explicit nil
func (o *FollowerModel) SetAvatarNil() {
	o.Avatar.Set(nil)
}

// UnsetAvatar ensures that no value is present for Avatar, not even an explicit nil
func (o *FollowerModel) UnsetAvatar() {
	o.Avatar.Unset()
}

// GetIsMutual returns the IsMutual field value if set, zero value otherwise.
func (o *FollowerModel) GetIsMutual() bool {
	if o == nil || IsNil(o.IsMutual) {
		var ret bool
		return ret
	}
	return *o.IsMutual
}

// GetIsMutualOk returns a tuple with the IsMutual field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FollowerModel) GetIsMutualOk() (*bool, bool) {
	if o == nil || IsNil(o.IsMutual) {
		return nil, false
	}
	return o.IsMutual, true
}

// HasIsMutual returns a boolean if a field has been set.
func (o *FollowerModel) HasIsMutual() bool {
	if o != nil && !IsNil(o.IsMutual) {
		return true
	}

	return false
}

// SetIsMutual gets a reference to the given bool and assigns it to the IsMutual field.
func (o *FollowerModel) SetIsMutual(v bool) {
	o.IsMutual = &v
}

// GetClosenessScore returns the ClosenessScore field value if set, zero value otherwise.
func (o *FollowerModel) GetClosenessScore() int64 {
	if o == nil || IsNil(o.ClosenessScore) {
		var ret int64
		return ret
	}
	return *o.ClosenessScore
}

// GetClosenessScoreOk returns a tuple with the ClosenessScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FollowerModel) GetClosenessScoreOk() (*int64, bool) {
	if o == nil || IsNil(o.ClosenessScore) {
		return nil, false
	}
	return o.ClosenessScore, true
}

// HasClosenessScore returns a boolean if a field has been set.
func (o *FollowerModel) HasClosenessScore() bool {
	if o != nil && !IsNil(o.ClosenessScore) {
		return true
	}

	return false
}

// SetClosenessScore gets a reference to the given int64 and assigns it to the ClosenessScore field.
func (o *FollowerModel) SetClosenessScore(v int64) {
	o.ClosenessScore = &v
}

// GetAttentionScore returns the AttentionScore field value if set, zero value otherwise.
func (o *FollowerModel) GetAttentionScore() int64 {
	if o == nil || IsNil(o.AttentionScore) {
		var ret int64
		return ret
	}
	return *o.AttentionScore
}

// GetAttentionScoreOk returns a tuple with the AttentionScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FollowerModel) GetAttentionScoreOk() (*int64, bool) {
	if o == nil || IsNil(o.AttentionScore) {
		return nil, false
	}
	return o.AttentionScore, true
}

// HasAttentionScore returns a boolean if a field has been set.
func (o *FollowerModel) HasAttentionScore() bool {
	if o != nil && !IsNil(o.AttentionScore) {
		return true
	}

	return false
}

// SetAttentionScore gets a reference to the given int64 and assigns it to the AttentionScore field.
func (o *FollowerModel) SetAttentionScore(v int64) {
	o.AttentionScore = &v
}

// GetTags returns the Tags field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FollowerModel) GetTags() string {
	if o == nil || IsNil(o.Tags.Get()) {
		var ret string
		return ret
	}
	return *o.Tags.Get()
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FollowerModel) GetTagsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Tags.Get(), o.Tags.IsSet()
}

// HasTags returns a boolean if a field has been set.
func (o *FollowerModel) HasTags() bool {
	if o != nil && o.Tags.IsSet() {
		return true
	}

	return false
}

// SetTags gets a reference to the given NullableString and assigns it to the Tags field.
func (o *FollowerModel) SetTags(v string) {
	o.Tags.Set(&v)
}
// SetTagsNil sets the value for Tags to be an explicit nil
func (o *FollowerModel) SetTagsNil() {
	o.Tags.Set(nil)
}

// UnsetTags ensures that no value is present for Tags, not even an explicit nil
func (o *FollowerModel) UnsetTags() {
	o.Tags.Unset()
}

// GetStatus returns the Status field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FollowerModel) GetStatus() string {
	if o == nil || IsNil(o.Status.Get()) {
		var ret string
		return ret
	}
	return *o.Status.Get()
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FollowerModel) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Status.Get(), o.Status.IsSet()
}

// HasStatus returns a boolean if a field has been set.
func (o *FollowerModel) HasStatus() bool {
	if o != nil && o.Status.IsSet() {
		return true
	}

	return false
}

// SetStatus gets a reference to the given NullableString and assigns it to the Status field.
func (o *FollowerModel) SetStatus(v string) {
	o.Status.Set(&v)
}
// SetStatusNil sets the value for Status to be an explicit nil
func (o *FollowerModel) SetStatusNil() {
	o.Status.Set(nil)
}

// UnsetStatus ensures that no value is present for Status, not even an explicit nil
func (o *FollowerModel) UnsetStatus() {
	o.Status.Unset()
}

// GetRemark returns the Remark field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FollowerModel) GetRemark() string {
	if o == nil || IsNil(o.Remark.Get()) {
		var ret string
		return ret
	}
	return *o.Remark.Get()
}

// GetRemarkOk returns a tuple with the Remark field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FollowerModel) GetRemarkOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Remark.Get(), o.Remark.IsSet()
}

// HasRemark returns a boolean if a field has been set.
func (o *FollowerModel) HasRemark() bool {
	if o != nil && o.Remark.IsSet() {
		return true
	}

	return false
}

// SetRemark gets a reference to the given NullableString and assigns it to the Remark field.
func (o *FollowerModel) SetRemark(v string) {
	o.Remark.Set(&v)
}
// SetRemarkNil sets the value for Remark to be an explicit nil
func (o *FollowerModel) SetRemarkNil() {
	o.Remark.Set(nil)
}

// UnsetRemark ensures that no value is present for Remark, not even an explicit nil
func (o *FollowerModel) UnsetRemark() {
	o.Remark.Unset()
}

// GetCreateDate returns the CreateDate field value if set, zero value otherwise.
func (o *FollowerModel) GetCreateDate() time.Time {
	if o == nil || IsNil(o.CreateDate) {
		var ret time.Time
		return ret
	}
	return *o.CreateDate
}

// GetCreateDateOk returns a tuple with the CreateDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FollowerModel) GetCreateDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreateDate) {
		return nil, false
	}
	return o.CreateDate, true
}

// HasCreateDate returns a boolean if a field has been set.
func (o *FollowerModel) HasCreateDate() bool {
	if o != nil && !IsNil(o.CreateDate) {
		return true
	}

	return false
}

// SetCreateDate gets a reference to the given time.Time and assigns it to the CreateDate field.
func (o *FollowerModel) SetCreateDate(v time.Time) {
	o.CreateDate = &v
}

func (o FollowerModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FollowerModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.TargetUserID) {
		toSerialize["targetUserID"] = o.TargetUserID
	}
	if o.Alias.IsSet() {
		toSerialize["alias"] = o.Alias.Get()
	}
	if o.NickName.IsSet() {
		toSerialize["nickName"] = o.NickName.Get()
	}
	if o.Avatar.IsSet() {
		toSerialize["avatar"] = o.Avatar.Get()
	}
	if !IsNil(o.IsMutual) {
		toSerialize["isMutual"] = o.IsMutual
	}
	if !IsNil(o.ClosenessScore) {
		toSerialize["closenessScore"] = o.ClosenessScore
	}
	if !IsNil(o.AttentionScore) {
		toSerialize["attentionScore"] = o.AttentionScore
	}
	if o.Tags.IsSet() {
		toSerialize["tags"] = o.Tags.Get()
	}
	if o.Status.IsSet() {
		toSerialize["status"] = o.Status.Get()
	}
	if o.Remark.IsSet() {
		toSerialize["remark"] = o.Remark.Get()
	}
	if !IsNil(o.CreateDate) {
		toSerialize["createDate"] = o.CreateDate
	}
	return toSerialize, nil
}

type NullableFollowerModel struct {
	value *FollowerModel
	isSet bool
}

func (v NullableFollowerModel) Get() *FollowerModel {
	return v.value
}

func (v *NullableFollowerModel) Set(val *FollowerModel) {
	v.value = val
	v.isSet = true
}

func (v NullableFollowerModel) IsSet() bool {
	return v.isSet
}

func (v *NullableFollowerModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFollowerModel(val *FollowerModel) *NullableFollowerModel {
	return &NullableFollowerModel{value: val, isSet: true}
}

func (v NullableFollowerModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFollowerModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


