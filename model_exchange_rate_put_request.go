/*
全部  API 文档

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package zsgf

import (
	"encoding/json"
)

// checks if the ExchangeRatePutRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExchangeRatePutRequest{}

// ExchangeRatePutRequest struct for ExchangeRatePutRequest
type ExchangeRatePutRequest struct {
	ToCurrencyCode NullableString `json:"toCurrencyCode,omitempty"`
	ExchangeRate *int64 `json:"exchangeRate,omitempty"`
	Description NullableString `json:"description,omitempty"`
}

// NewExchangeRatePutRequest instantiates a new ExchangeRatePutRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExchangeRatePutRequest() *ExchangeRatePutRequest {
	this := ExchangeRatePutRequest{}
	return &this
}

// NewExchangeRatePutRequestWithDefaults instantiates a new ExchangeRatePutRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExchangeRatePutRequestWithDefaults() *ExchangeRatePutRequest {
	this := ExchangeRatePutRequest{}
	return &this
}

// GetToCurrencyCode returns the ToCurrencyCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExchangeRatePutRequest) GetToCurrencyCode() string {
	if o == nil || IsNil(o.ToCurrencyCode.Get()) {
		var ret string
		return ret
	}
	return *o.ToCurrencyCode.Get()
}

// GetToCurrencyCodeOk returns a tuple with the ToCurrencyCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExchangeRatePutRequest) GetToCurrencyCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ToCurrencyCode.Get(), o.ToCurrencyCode.IsSet()
}

// HasToCurrencyCode returns a boolean if a field has been set.
func (o *ExchangeRatePutRequest) HasToCurrencyCode() bool {
	if o != nil && o.ToCurrencyCode.IsSet() {
		return true
	}

	return false
}

// SetToCurrencyCode gets a reference to the given NullableString and assigns it to the ToCurrencyCode field.
func (o *ExchangeRatePutRequest) SetToCurrencyCode(v string) {
	o.ToCurrencyCode.Set(&v)
}
// SetToCurrencyCodeNil sets the value for ToCurrencyCode to be an explicit nil
func (o *ExchangeRatePutRequest) SetToCurrencyCodeNil() {
	o.ToCurrencyCode.Set(nil)
}

// UnsetToCurrencyCode ensures that no value is present for ToCurrencyCode, not even an explicit nil
func (o *ExchangeRatePutRequest) UnsetToCurrencyCode() {
	o.ToCurrencyCode.Unset()
}

// GetExchangeRate returns the ExchangeRate field value if set, zero value otherwise.
func (o *ExchangeRatePutRequest) GetExchangeRate() int64 {
	if o == nil || IsNil(o.ExchangeRate) {
		var ret int64
		return ret
	}
	return *o.ExchangeRate
}

// GetExchangeRateOk returns a tuple with the ExchangeRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExchangeRatePutRequest) GetExchangeRateOk() (*int64, bool) {
	if o == nil || IsNil(o.ExchangeRate) {
		return nil, false
	}
	return o.ExchangeRate, true
}

// HasExchangeRate returns a boolean if a field has been set.
func (o *ExchangeRatePutRequest) HasExchangeRate() bool {
	if o != nil && !IsNil(o.ExchangeRate) {
		return true
	}

	return false
}

// SetExchangeRate gets a reference to the given int64 and assigns it to the ExchangeRate field.
func (o *ExchangeRatePutRequest) SetExchangeRate(v int64) {
	o.ExchangeRate = &v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExchangeRatePutRequest) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExchangeRatePutRequest) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *ExchangeRatePutRequest) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *ExchangeRatePutRequest) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *ExchangeRatePutRequest) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *ExchangeRatePutRequest) UnsetDescription() {
	o.Description.Unset()
}

func (o ExchangeRatePutRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExchangeRatePutRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ToCurrencyCode.IsSet() {
		toSerialize["toCurrencyCode"] = o.ToCurrencyCode.Get()
	}
	if !IsNil(o.ExchangeRate) {
		toSerialize["exchangeRate"] = o.ExchangeRate
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	return toSerialize, nil
}

type NullableExchangeRatePutRequest struct {
	value *ExchangeRatePutRequest
	isSet bool
}

func (v NullableExchangeRatePutRequest) Get() *ExchangeRatePutRequest {
	return v.value
}

func (v *NullableExchangeRatePutRequest) Set(val *ExchangeRatePutRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableExchangeRatePutRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableExchangeRatePutRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExchangeRatePutRequest(val *ExchangeRatePutRequest) *NullableExchangeRatePutRequest {
	return &NullableExchangeRatePutRequest{value: val, isSet: true}
}

func (v NullableExchangeRatePutRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExchangeRatePutRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


