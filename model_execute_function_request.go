/*
全部  API 文档

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package zsgf

import (
	"encoding/json"
)

// checks if the ExecuteFunctionRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExecuteFunctionRequest{}

// ExecuteFunctionRequest struct for ExecuteFunctionRequest
type ExecuteFunctionRequest struct {
	// 函数标识
	FunctionKey NullableString `json:"functionKey,omitempty"`
}

// NewExecuteFunctionRequest instantiates a new ExecuteFunctionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExecuteFunctionRequest() *ExecuteFunctionRequest {
	this := ExecuteFunctionRequest{}
	return &this
}

// NewExecuteFunctionRequestWithDefaults instantiates a new ExecuteFunctionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExecuteFunctionRequestWithDefaults() *ExecuteFunctionRequest {
	this := ExecuteFunctionRequest{}
	return &this
}

// GetFunctionKey returns the FunctionKey field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExecuteFunctionRequest) GetFunctionKey() string {
	if o == nil || IsNil(o.FunctionKey.Get()) {
		var ret string
		return ret
	}
	return *o.FunctionKey.Get()
}

// GetFunctionKeyOk returns a tuple with the FunctionKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExecuteFunctionRequest) GetFunctionKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FunctionKey.Get(), o.FunctionKey.IsSet()
}

// HasFunctionKey returns a boolean if a field has been set.
func (o *ExecuteFunctionRequest) HasFunctionKey() bool {
	if o != nil && o.FunctionKey.IsSet() {
		return true
	}

	return false
}

// SetFunctionKey gets a reference to the given NullableString and assigns it to the FunctionKey field.
func (o *ExecuteFunctionRequest) SetFunctionKey(v string) {
	o.FunctionKey.Set(&v)
}
// SetFunctionKeyNil sets the value for FunctionKey to be an explicit nil
func (o *ExecuteFunctionRequest) SetFunctionKeyNil() {
	o.FunctionKey.Set(nil)
}

// UnsetFunctionKey ensures that no value is present for FunctionKey, not even an explicit nil
func (o *ExecuteFunctionRequest) UnsetFunctionKey() {
	o.FunctionKey.Unset()
}

func (o ExecuteFunctionRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExecuteFunctionRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.FunctionKey.IsSet() {
		toSerialize["functionKey"] = o.FunctionKey.Get()
	}
	return toSerialize, nil
}

type NullableExecuteFunctionRequest struct {
	value *ExecuteFunctionRequest
	isSet bool
}

func (v NullableExecuteFunctionRequest) Get() *ExecuteFunctionRequest {
	return v.value
}

func (v *NullableExecuteFunctionRequest) Set(val *ExecuteFunctionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableExecuteFunctionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableExecuteFunctionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExecuteFunctionRequest(val *ExecuteFunctionRequest) *NullableExecuteFunctionRequest {
	return &NullableExecuteFunctionRequest{value: val, isSet: true}
}

func (v NullableExecuteFunctionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExecuteFunctionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


