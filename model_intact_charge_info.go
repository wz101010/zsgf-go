/*
全部  API 文档

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package zsgf

import (
	"encoding/json"
)

// checks if the IntactChargeInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IntactChargeInfo{}

// IntactChargeInfo struct for IntactChargeInfo
type IntactChargeInfo struct {
	ActualAmount NullableString `json:"actualAmount,omitempty"`
	BillType NullableString `json:"billType,omitempty"`
	GmtPay NullableString `json:"gmtPay,omitempty"`
	IsRefund *bool `json:"isRefund,omitempty"`
	OutBizNo NullableString `json:"outBizNo,omitempty"`
	PlanAmount NullableString `json:"planAmount,omitempty"`
	ProductName NullableString `json:"productName,omitempty"`
	ServiceTarget NullableString `json:"serviceTarget,omitempty"`
	ServiceType NullableString `json:"serviceType,omitempty"`
	Status NullableString `json:"status,omitempty"`
	TargetAccountNo NullableString `json:"targetAccountNo,omitempty"`
	TargetUserId NullableString `json:"targetUserId,omitempty"`
}

// NewIntactChargeInfo instantiates a new IntactChargeInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIntactChargeInfo() *IntactChargeInfo {
	this := IntactChargeInfo{}
	return &this
}

// NewIntactChargeInfoWithDefaults instantiates a new IntactChargeInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIntactChargeInfoWithDefaults() *IntactChargeInfo {
	this := IntactChargeInfo{}
	return &this
}

// GetActualAmount returns the ActualAmount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IntactChargeInfo) GetActualAmount() string {
	if o == nil || IsNil(o.ActualAmount.Get()) {
		var ret string
		return ret
	}
	return *o.ActualAmount.Get()
}

// GetActualAmountOk returns a tuple with the ActualAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IntactChargeInfo) GetActualAmountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ActualAmount.Get(), o.ActualAmount.IsSet()
}

// HasActualAmount returns a boolean if a field has been set.
func (o *IntactChargeInfo) HasActualAmount() bool {
	if o != nil && o.ActualAmount.IsSet() {
		return true
	}

	return false
}

// SetActualAmount gets a reference to the given NullableString and assigns it to the ActualAmount field.
func (o *IntactChargeInfo) SetActualAmount(v string) {
	o.ActualAmount.Set(&v)
}
// SetActualAmountNil sets the value for ActualAmount to be an explicit nil
func (o *IntactChargeInfo) SetActualAmountNil() {
	o.ActualAmount.Set(nil)
}

// UnsetActualAmount ensures that no value is present for ActualAmount, not even an explicit nil
func (o *IntactChargeInfo) UnsetActualAmount() {
	o.ActualAmount.Unset()
}

// GetBillType returns the BillType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IntactChargeInfo) GetBillType() string {
	if o == nil || IsNil(o.BillType.Get()) {
		var ret string
		return ret
	}
	return *o.BillType.Get()
}

// GetBillTypeOk returns a tuple with the BillType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IntactChargeInfo) GetBillTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BillType.Get(), o.BillType.IsSet()
}

// HasBillType returns a boolean if a field has been set.
func (o *IntactChargeInfo) HasBillType() bool {
	if o != nil && o.BillType.IsSet() {
		return true
	}

	return false
}

// SetBillType gets a reference to the given NullableString and assigns it to the BillType field.
func (o *IntactChargeInfo) SetBillType(v string) {
	o.BillType.Set(&v)
}
// SetBillTypeNil sets the value for BillType to be an explicit nil
func (o *IntactChargeInfo) SetBillTypeNil() {
	o.BillType.Set(nil)
}

// UnsetBillType ensures that no value is present for BillType, not even an explicit nil
func (o *IntactChargeInfo) UnsetBillType() {
	o.BillType.Unset()
}

// GetGmtPay returns the GmtPay field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IntactChargeInfo) GetGmtPay() string {
	if o == nil || IsNil(o.GmtPay.Get()) {
		var ret string
		return ret
	}
	return *o.GmtPay.Get()
}

// GetGmtPayOk returns a tuple with the GmtPay field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IntactChargeInfo) GetGmtPayOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GmtPay.Get(), o.GmtPay.IsSet()
}

// HasGmtPay returns a boolean if a field has been set.
func (o *IntactChargeInfo) HasGmtPay() bool {
	if o != nil && o.GmtPay.IsSet() {
		return true
	}

	return false
}

// SetGmtPay gets a reference to the given NullableString and assigns it to the GmtPay field.
func (o *IntactChargeInfo) SetGmtPay(v string) {
	o.GmtPay.Set(&v)
}
// SetGmtPayNil sets the value for GmtPay to be an explicit nil
func (o *IntactChargeInfo) SetGmtPayNil() {
	o.GmtPay.Set(nil)
}

// UnsetGmtPay ensures that no value is present for GmtPay, not even an explicit nil
func (o *IntactChargeInfo) UnsetGmtPay() {
	o.GmtPay.Unset()
}

// GetIsRefund returns the IsRefund field value if set, zero value otherwise.
func (o *IntactChargeInfo) GetIsRefund() bool {
	if o == nil || IsNil(o.IsRefund) {
		var ret bool
		return ret
	}
	return *o.IsRefund
}

// GetIsRefundOk returns a tuple with the IsRefund field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IntactChargeInfo) GetIsRefundOk() (*bool, bool) {
	if o == nil || IsNil(o.IsRefund) {
		return nil, false
	}
	return o.IsRefund, true
}

// HasIsRefund returns a boolean if a field has been set.
func (o *IntactChargeInfo) HasIsRefund() bool {
	if o != nil && !IsNil(o.IsRefund) {
		return true
	}

	return false
}

// SetIsRefund gets a reference to the given bool and assigns it to the IsRefund field.
func (o *IntactChargeInfo) SetIsRefund(v bool) {
	o.IsRefund = &v
}

// GetOutBizNo returns the OutBizNo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IntactChargeInfo) GetOutBizNo() string {
	if o == nil || IsNil(o.OutBizNo.Get()) {
		var ret string
		return ret
	}
	return *o.OutBizNo.Get()
}

// GetOutBizNoOk returns a tuple with the OutBizNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IntactChargeInfo) GetOutBizNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OutBizNo.Get(), o.OutBizNo.IsSet()
}

// HasOutBizNo returns a boolean if a field has been set.
func (o *IntactChargeInfo) HasOutBizNo() bool {
	if o != nil && o.OutBizNo.IsSet() {
		return true
	}

	return false
}

// SetOutBizNo gets a reference to the given NullableString and assigns it to the OutBizNo field.
func (o *IntactChargeInfo) SetOutBizNo(v string) {
	o.OutBizNo.Set(&v)
}
// SetOutBizNoNil sets the value for OutBizNo to be an explicit nil
func (o *IntactChargeInfo) SetOutBizNoNil() {
	o.OutBizNo.Set(nil)
}

// UnsetOutBizNo ensures that no value is present for OutBizNo, not even an explicit nil
func (o *IntactChargeInfo) UnsetOutBizNo() {
	o.OutBizNo.Unset()
}

// GetPlanAmount returns the PlanAmount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IntactChargeInfo) GetPlanAmount() string {
	if o == nil || IsNil(o.PlanAmount.Get()) {
		var ret string
		return ret
	}
	return *o.PlanAmount.Get()
}

// GetPlanAmountOk returns a tuple with the PlanAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IntactChargeInfo) GetPlanAmountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PlanAmount.Get(), o.PlanAmount.IsSet()
}

// HasPlanAmount returns a boolean if a field has been set.
func (o *IntactChargeInfo) HasPlanAmount() bool {
	if o != nil && o.PlanAmount.IsSet() {
		return true
	}

	return false
}

// SetPlanAmount gets a reference to the given NullableString and assigns it to the PlanAmount field.
func (o *IntactChargeInfo) SetPlanAmount(v string) {
	o.PlanAmount.Set(&v)
}
// SetPlanAmountNil sets the value for PlanAmount to be an explicit nil
func (o *IntactChargeInfo) SetPlanAmountNil() {
	o.PlanAmount.Set(nil)
}

// UnsetPlanAmount ensures that no value is present for PlanAmount, not even an explicit nil
func (o *IntactChargeInfo) UnsetPlanAmount() {
	o.PlanAmount.Unset()
}

// GetProductName returns the ProductName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IntactChargeInfo) GetProductName() string {
	if o == nil || IsNil(o.ProductName.Get()) {
		var ret string
		return ret
	}
	return *o.ProductName.Get()
}

// GetProductNameOk returns a tuple with the ProductName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IntactChargeInfo) GetProductNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProductName.Get(), o.ProductName.IsSet()
}

// HasProductName returns a boolean if a field has been set.
func (o *IntactChargeInfo) HasProductName() bool {
	if o != nil && o.ProductName.IsSet() {
		return true
	}

	return false
}

// SetProductName gets a reference to the given NullableString and assigns it to the ProductName field.
func (o *IntactChargeInfo) SetProductName(v string) {
	o.ProductName.Set(&v)
}
// SetProductNameNil sets the value for ProductName to be an explicit nil
func (o *IntactChargeInfo) SetProductNameNil() {
	o.ProductName.Set(nil)
}

// UnsetProductName ensures that no value is present for ProductName, not even an explicit nil
func (o *IntactChargeInfo) UnsetProductName() {
	o.ProductName.Unset()
}

// GetServiceTarget returns the ServiceTarget field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IntactChargeInfo) GetServiceTarget() string {
	if o == nil || IsNil(o.ServiceTarget.Get()) {
		var ret string
		return ret
	}
	return *o.ServiceTarget.Get()
}

// GetServiceTargetOk returns a tuple with the ServiceTarget field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IntactChargeInfo) GetServiceTargetOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ServiceTarget.Get(), o.ServiceTarget.IsSet()
}

// HasServiceTarget returns a boolean if a field has been set.
func (o *IntactChargeInfo) HasServiceTarget() bool {
	if o != nil && o.ServiceTarget.IsSet() {
		return true
	}

	return false
}

// SetServiceTarget gets a reference to the given NullableString and assigns it to the ServiceTarget field.
func (o *IntactChargeInfo) SetServiceTarget(v string) {
	o.ServiceTarget.Set(&v)
}
// SetServiceTargetNil sets the value for ServiceTarget to be an explicit nil
func (o *IntactChargeInfo) SetServiceTargetNil() {
	o.ServiceTarget.Set(nil)
}

// UnsetServiceTarget ensures that no value is present for ServiceTarget, not even an explicit nil
func (o *IntactChargeInfo) UnsetServiceTarget() {
	o.ServiceTarget.Unset()
}

// GetServiceType returns the ServiceType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IntactChargeInfo) GetServiceType() string {
	if o == nil || IsNil(o.ServiceType.Get()) {
		var ret string
		return ret
	}
	return *o.ServiceType.Get()
}

// GetServiceTypeOk returns a tuple with the ServiceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IntactChargeInfo) GetServiceTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ServiceType.Get(), o.ServiceType.IsSet()
}

// HasServiceType returns a boolean if a field has been set.
func (o *IntactChargeInfo) HasServiceType() bool {
	if o != nil && o.ServiceType.IsSet() {
		return true
	}

	return false
}

// SetServiceType gets a reference to the given NullableString and assigns it to the ServiceType field.
func (o *IntactChargeInfo) SetServiceType(v string) {
	o.ServiceType.Set(&v)
}
// SetServiceTypeNil sets the value for ServiceType to be an explicit nil
func (o *IntactChargeInfo) SetServiceTypeNil() {
	o.ServiceType.Set(nil)
}

// UnsetServiceType ensures that no value is present for ServiceType, not even an explicit nil
func (o *IntactChargeInfo) UnsetServiceType() {
	o.ServiceType.Unset()
}

// GetStatus returns the Status field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IntactChargeInfo) GetStatus() string {
	if o == nil || IsNil(o.Status.Get()) {
		var ret string
		return ret
	}
	return *o.Status.Get()
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IntactChargeInfo) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Status.Get(), o.Status.IsSet()
}

// HasStatus returns a boolean if a field has been set.
func (o *IntactChargeInfo) HasStatus() bool {
	if o != nil && o.Status.IsSet() {
		return true
	}

	return false
}

// SetStatus gets a reference to the given NullableString and assigns it to the Status field.
func (o *IntactChargeInfo) SetStatus(v string) {
	o.Status.Set(&v)
}
// SetStatusNil sets the value for Status to be an explicit nil
func (o *IntactChargeInfo) SetStatusNil() {
	o.Status.Set(nil)
}

// UnsetStatus ensures that no value is present for Status, not even an explicit nil
func (o *IntactChargeInfo) UnsetStatus() {
	o.Status.Unset()
}

// GetTargetAccountNo returns the TargetAccountNo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IntactChargeInfo) GetTargetAccountNo() string {
	if o == nil || IsNil(o.TargetAccountNo.Get()) {
		var ret string
		return ret
	}
	return *o.TargetAccountNo.Get()
}

// GetTargetAccountNoOk returns a tuple with the TargetAccountNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IntactChargeInfo) GetTargetAccountNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TargetAccountNo.Get(), o.TargetAccountNo.IsSet()
}

// HasTargetAccountNo returns a boolean if a field has been set.
func (o *IntactChargeInfo) HasTargetAccountNo() bool {
	if o != nil && o.TargetAccountNo.IsSet() {
		return true
	}

	return false
}

// SetTargetAccountNo gets a reference to the given NullableString and assigns it to the TargetAccountNo field.
func (o *IntactChargeInfo) SetTargetAccountNo(v string) {
	o.TargetAccountNo.Set(&v)
}
// SetTargetAccountNoNil sets the value for TargetAccountNo to be an explicit nil
func (o *IntactChargeInfo) SetTargetAccountNoNil() {
	o.TargetAccountNo.Set(nil)
}

// UnsetTargetAccountNo ensures that no value is present for TargetAccountNo, not even an explicit nil
func (o *IntactChargeInfo) UnsetTargetAccountNo() {
	o.TargetAccountNo.Unset()
}

// GetTargetUserId returns the TargetUserId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IntactChargeInfo) GetTargetUserId() string {
	if o == nil || IsNil(o.TargetUserId.Get()) {
		var ret string
		return ret
	}
	return *o.TargetUserId.Get()
}

// GetTargetUserIdOk returns a tuple with the TargetUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IntactChargeInfo) GetTargetUserIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TargetUserId.Get(), o.TargetUserId.IsSet()
}

// HasTargetUserId returns a boolean if a field has been set.
func (o *IntactChargeInfo) HasTargetUserId() bool {
	if o != nil && o.TargetUserId.IsSet() {
		return true
	}

	return false
}

// SetTargetUserId gets a reference to the given NullableString and assigns it to the TargetUserId field.
func (o *IntactChargeInfo) SetTargetUserId(v string) {
	o.TargetUserId.Set(&v)
}
// SetTargetUserIdNil sets the value for TargetUserId to be an explicit nil
func (o *IntactChargeInfo) SetTargetUserIdNil() {
	o.TargetUserId.Set(nil)
}

// UnsetTargetUserId ensures that no value is present for TargetUserId, not even an explicit nil
func (o *IntactChargeInfo) UnsetTargetUserId() {
	o.TargetUserId.Unset()
}

func (o IntactChargeInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IntactChargeInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ActualAmount.IsSet() {
		toSerialize["actualAmount"] = o.ActualAmount.Get()
	}
	if o.BillType.IsSet() {
		toSerialize["billType"] = o.BillType.Get()
	}
	if o.GmtPay.IsSet() {
		toSerialize["gmtPay"] = o.GmtPay.Get()
	}
	if !IsNil(o.IsRefund) {
		toSerialize["isRefund"] = o.IsRefund
	}
	if o.OutBizNo.IsSet() {
		toSerialize["outBizNo"] = o.OutBizNo.Get()
	}
	if o.PlanAmount.IsSet() {
		toSerialize["planAmount"] = o.PlanAmount.Get()
	}
	if o.ProductName.IsSet() {
		toSerialize["productName"] = o.ProductName.Get()
	}
	if o.ServiceTarget.IsSet() {
		toSerialize["serviceTarget"] = o.ServiceTarget.Get()
	}
	if o.ServiceType.IsSet() {
		toSerialize["serviceType"] = o.ServiceType.Get()
	}
	if o.Status.IsSet() {
		toSerialize["status"] = o.Status.Get()
	}
	if o.TargetAccountNo.IsSet() {
		toSerialize["targetAccountNo"] = o.TargetAccountNo.Get()
	}
	if o.TargetUserId.IsSet() {
		toSerialize["targetUserId"] = o.TargetUserId.Get()
	}
	return toSerialize, nil
}

type NullableIntactChargeInfo struct {
	value *IntactChargeInfo
	isSet bool
}

func (v NullableIntactChargeInfo) Get() *IntactChargeInfo {
	return v.value
}

func (v *NullableIntactChargeInfo) Set(val *IntactChargeInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableIntactChargeInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableIntactChargeInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIntactChargeInfo(val *IntactChargeInfo) *NullableIntactChargeInfo {
	return &NullableIntactChargeInfo{value: val, isSet: true}
}

func (v NullableIntactChargeInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIntactChargeInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


