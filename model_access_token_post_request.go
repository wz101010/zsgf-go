/*
全部  API 文档

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package zsgf

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AccessTokenPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccessTokenPostRequest{}

// AccessTokenPostRequest struct for AccessTokenPostRequest
type AccessTokenPostRequest struct {
	Title string `json:"title"`
	Tags NullableString `json:"tags,omitempty"`
	UserID *int64 `json:"userID,omitempty"`
	Description NullableString `json:"description,omitempty"`
	Permissions NullableString `json:"permissions,omitempty"`
	ExpireInDays *int32 `json:"expireInDays,omitempty"`
}

type _AccessTokenPostRequest AccessTokenPostRequest

// NewAccessTokenPostRequest instantiates a new AccessTokenPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccessTokenPostRequest(title string) *AccessTokenPostRequest {
	this := AccessTokenPostRequest{}
	this.Title = title
	return &this
}

// NewAccessTokenPostRequestWithDefaults instantiates a new AccessTokenPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccessTokenPostRequestWithDefaults() *AccessTokenPostRequest {
	this := AccessTokenPostRequest{}
	return &this
}

// GetTitle returns the Title field value
func (o *AccessTokenPostRequest) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *AccessTokenPostRequest) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *AccessTokenPostRequest) SetTitle(v string) {
	o.Title = v
}

// GetTags returns the Tags field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccessTokenPostRequest) GetTags() string {
	if o == nil || IsNil(o.Tags.Get()) {
		var ret string
		return ret
	}
	return *o.Tags.Get()
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccessTokenPostRequest) GetTagsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Tags.Get(), o.Tags.IsSet()
}

// HasTags returns a boolean if a field has been set.
func (o *AccessTokenPostRequest) HasTags() bool {
	if o != nil && o.Tags.IsSet() {
		return true
	}

	return false
}

// SetTags gets a reference to the given NullableString and assigns it to the Tags field.
func (o *AccessTokenPostRequest) SetTags(v string) {
	o.Tags.Set(&v)
}
// SetTagsNil sets the value for Tags to be an explicit nil
func (o *AccessTokenPostRequest) SetTagsNil() {
	o.Tags.Set(nil)
}

// UnsetTags ensures that no value is present for Tags, not even an explicit nil
func (o *AccessTokenPostRequest) UnsetTags() {
	o.Tags.Unset()
}

// GetUserID returns the UserID field value if set, zero value otherwise.
func (o *AccessTokenPostRequest) GetUserID() int64 {
	if o == nil || IsNil(o.UserID) {
		var ret int64
		return ret
	}
	return *o.UserID
}

// GetUserIDOk returns a tuple with the UserID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessTokenPostRequest) GetUserIDOk() (*int64, bool) {
	if o == nil || IsNil(o.UserID) {
		return nil, false
	}
	return o.UserID, true
}

// HasUserID returns a boolean if a field has been set.
func (o *AccessTokenPostRequest) HasUserID() bool {
	if o != nil && !IsNil(o.UserID) {
		return true
	}

	return false
}

// SetUserID gets a reference to the given int64 and assigns it to the UserID field.
func (o *AccessTokenPostRequest) SetUserID(v int64) {
	o.UserID = &v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccessTokenPostRequest) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccessTokenPostRequest) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *AccessTokenPostRequest) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *AccessTokenPostRequest) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *AccessTokenPostRequest) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *AccessTokenPostRequest) UnsetDescription() {
	o.Description.Unset()
}

// GetPermissions returns the Permissions field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccessTokenPostRequest) GetPermissions() string {
	if o == nil || IsNil(o.Permissions.Get()) {
		var ret string
		return ret
	}
	return *o.Permissions.Get()
}

// GetPermissionsOk returns a tuple with the Permissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccessTokenPostRequest) GetPermissionsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Permissions.Get(), o.Permissions.IsSet()
}

// HasPermissions returns a boolean if a field has been set.
func (o *AccessTokenPostRequest) HasPermissions() bool {
	if o != nil && o.Permissions.IsSet() {
		return true
	}

	return false
}

// SetPermissions gets a reference to the given NullableString and assigns it to the Permissions field.
func (o *AccessTokenPostRequest) SetPermissions(v string) {
	o.Permissions.Set(&v)
}
// SetPermissionsNil sets the value for Permissions to be an explicit nil
func (o *AccessTokenPostRequest) SetPermissionsNil() {
	o.Permissions.Set(nil)
}

// UnsetPermissions ensures that no value is present for Permissions, not even an explicit nil
func (o *AccessTokenPostRequest) UnsetPermissions() {
	o.Permissions.Unset()
}

// GetExpireInDays returns the ExpireInDays field value if set, zero value otherwise.
func (o *AccessTokenPostRequest) GetExpireInDays() int32 {
	if o == nil || IsNil(o.ExpireInDays) {
		var ret int32
		return ret
	}
	return *o.ExpireInDays
}

// GetExpireInDaysOk returns a tuple with the ExpireInDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessTokenPostRequest) GetExpireInDaysOk() (*int32, bool) {
	if o == nil || IsNil(o.ExpireInDays) {
		return nil, false
	}
	return o.ExpireInDays, true
}

// HasExpireInDays returns a boolean if a field has been set.
func (o *AccessTokenPostRequest) HasExpireInDays() bool {
	if o != nil && !IsNil(o.ExpireInDays) {
		return true
	}

	return false
}

// SetExpireInDays gets a reference to the given int32 and assigns it to the ExpireInDays field.
func (o *AccessTokenPostRequest) SetExpireInDays(v int32) {
	o.ExpireInDays = &v
}

func (o AccessTokenPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccessTokenPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["title"] = o.Title
	if o.Tags.IsSet() {
		toSerialize["tags"] = o.Tags.Get()
	}
	if !IsNil(o.UserID) {
		toSerialize["userID"] = o.UserID
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.Permissions.IsSet() {
		toSerialize["permissions"] = o.Permissions.Get()
	}
	if !IsNil(o.ExpireInDays) {
		toSerialize["expireInDays"] = o.ExpireInDays
	}
	return toSerialize, nil
}

func (o *AccessTokenPostRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"title",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAccessTokenPostRequest := _AccessTokenPostRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAccessTokenPostRequest)

	if err != nil {
		return err
	}

	*o = AccessTokenPostRequest(varAccessTokenPostRequest)

	return err
}

type NullableAccessTokenPostRequest struct {
	value *AccessTokenPostRequest
	isSet bool
}

func (v NullableAccessTokenPostRequest) Get() *AccessTokenPostRequest {
	return v.value
}

func (v *NullableAccessTokenPostRequest) Set(val *AccessTokenPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAccessTokenPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAccessTokenPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccessTokenPostRequest(val *AccessTokenPostRequest) *NullableAccessTokenPostRequest {
	return &NullableAccessTokenPostRequest{value: val, isSet: true}
}

func (v NullableAccessTokenPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccessTokenPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


