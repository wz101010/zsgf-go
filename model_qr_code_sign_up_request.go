/*
全部  API 文档

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package zsgf

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the QRCodeSignUpRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QRCodeSignUpRequest{}

// QRCodeSignUpRequest struct for QRCodeSignUpRequest
type QRCodeSignUpRequest struct {
	SignInKey *int64 `json:"signInKey,omitempty"`
	UnionID string `json:"unionID"`
	// 昵称
	NickName NullableString `json:"nickName,omitempty"`
	// 头像
	Avatar NullableString `json:"avatar,omitempty"`
	// 自定义数据
	Data NullableString `json:"data,omitempty"`
	// 邮箱
	Email NullableString `json:"email,omitempty" validate:"regexp=^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\\\.[a-zA-Z]{2,5}$"`
	// 邮箱验证码（只有启用的邮箱验证码功能时，才需要传入）
	EmailCode NullableString `json:"emailCode,omitempty" validate:"regexp=\\\\d{4,8}$"`
	// 手机号
	Phone NullableString `json:"phone,omitempty" validate:"regexp=^(\\\\d{11})?$"`
	// 手机验证码（只有启用的手机验证码功能时，才需要传入）
	PhoneCode NullableString `json:"phoneCode,omitempty" validate:"regexp=\\\\d{4,8}$"`
}

type _QRCodeSignUpRequest QRCodeSignUpRequest

// NewQRCodeSignUpRequest instantiates a new QRCodeSignUpRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQRCodeSignUpRequest(unionID string) *QRCodeSignUpRequest {
	this := QRCodeSignUpRequest{}
	this.UnionID = unionID
	return &this
}

// NewQRCodeSignUpRequestWithDefaults instantiates a new QRCodeSignUpRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQRCodeSignUpRequestWithDefaults() *QRCodeSignUpRequest {
	this := QRCodeSignUpRequest{}
	return &this
}

// GetSignInKey returns the SignInKey field value if set, zero value otherwise.
func (o *QRCodeSignUpRequest) GetSignInKey() int64 {
	if o == nil || IsNil(o.SignInKey) {
		var ret int64
		return ret
	}
	return *o.SignInKey
}

// GetSignInKeyOk returns a tuple with the SignInKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QRCodeSignUpRequest) GetSignInKeyOk() (*int64, bool) {
	if o == nil || IsNil(o.SignInKey) {
		return nil, false
	}
	return o.SignInKey, true
}

// HasSignInKey returns a boolean if a field has been set.
func (o *QRCodeSignUpRequest) HasSignInKey() bool {
	if o != nil && !IsNil(o.SignInKey) {
		return true
	}

	return false
}

// SetSignInKey gets a reference to the given int64 and assigns it to the SignInKey field.
func (o *QRCodeSignUpRequest) SetSignInKey(v int64) {
	o.SignInKey = &v
}

// GetUnionID returns the UnionID field value
func (o *QRCodeSignUpRequest) GetUnionID() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UnionID
}

// GetUnionIDOk returns a tuple with the UnionID field value
// and a boolean to check if the value has been set.
func (o *QRCodeSignUpRequest) GetUnionIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UnionID, true
}

// SetUnionID sets field value
func (o *QRCodeSignUpRequest) SetUnionID(v string) {
	o.UnionID = v
}

// GetNickName returns the NickName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QRCodeSignUpRequest) GetNickName() string {
	if o == nil || IsNil(o.NickName.Get()) {
		var ret string
		return ret
	}
	return *o.NickName.Get()
}

// GetNickNameOk returns a tuple with the NickName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QRCodeSignUpRequest) GetNickNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.NickName.Get(), o.NickName.IsSet()
}

// HasNickName returns a boolean if a field has been set.
func (o *QRCodeSignUpRequest) HasNickName() bool {
	if o != nil && o.NickName.IsSet() {
		return true
	}

	return false
}

// SetNickName gets a reference to the given NullableString and assigns it to the NickName field.
func (o *QRCodeSignUpRequest) SetNickName(v string) {
	o.NickName.Set(&v)
}
// SetNickNameNil sets the value for NickName to be an explicit nil
func (o *QRCodeSignUpRequest) SetNickNameNil() {
	o.NickName.Set(nil)
}

// UnsetNickName ensures that no value is present for NickName, not even an explicit nil
func (o *QRCodeSignUpRequest) UnsetNickName() {
	o.NickName.Unset()
}

// GetAvatar returns the Avatar field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QRCodeSignUpRequest) GetAvatar() string {
	if o == nil || IsNil(o.Avatar.Get()) {
		var ret string
		return ret
	}
	return *o.Avatar.Get()
}

// GetAvatarOk returns a tuple with the Avatar field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QRCodeSignUpRequest) GetAvatarOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Avatar.Get(), o.Avatar.IsSet()
}

// HasAvatar returns a boolean if a field has been set.
func (o *QRCodeSignUpRequest) HasAvatar() bool {
	if o != nil && o.Avatar.IsSet() {
		return true
	}

	return false
}

// SetAvatar gets a reference to the given NullableString and assigns it to the Avatar field.
func (o *QRCodeSignUpRequest) SetAvatar(v string) {
	o.Avatar.Set(&v)
}
// SetAvatarNil sets the value for Avatar to be an explicit nil
func (o *QRCodeSignUpRequest) SetAvatarNil() {
	o.Avatar.Set(nil)
}

// UnsetAvatar ensures that no value is present for Avatar, not even an explicit nil
func (o *QRCodeSignUpRequest) UnsetAvatar() {
	o.Avatar.Unset()
}

// GetData returns the Data field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QRCodeSignUpRequest) GetData() string {
	if o == nil || IsNil(o.Data.Get()) {
		var ret string
		return ret
	}
	return *o.Data.Get()
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QRCodeSignUpRequest) GetDataOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data.Get(), o.Data.IsSet()
}

// HasData returns a boolean if a field has been set.
func (o *QRCodeSignUpRequest) HasData() bool {
	if o != nil && o.Data.IsSet() {
		return true
	}

	return false
}

// SetData gets a reference to the given NullableString and assigns it to the Data field.
func (o *QRCodeSignUpRequest) SetData(v string) {
	o.Data.Set(&v)
}
// SetDataNil sets the value for Data to be an explicit nil
func (o *QRCodeSignUpRequest) SetDataNil() {
	o.Data.Set(nil)
}

// UnsetData ensures that no value is present for Data, not even an explicit nil
func (o *QRCodeSignUpRequest) UnsetData() {
	o.Data.Unset()
}

// GetEmail returns the Email field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QRCodeSignUpRequest) GetEmail() string {
	if o == nil || IsNil(o.Email.Get()) {
		var ret string
		return ret
	}
	return *o.Email.Get()
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QRCodeSignUpRequest) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Email.Get(), o.Email.IsSet()
}

// HasEmail returns a boolean if a field has been set.
func (o *QRCodeSignUpRequest) HasEmail() bool {
	if o != nil && o.Email.IsSet() {
		return true
	}

	return false
}

// SetEmail gets a reference to the given NullableString and assigns it to the Email field.
func (o *QRCodeSignUpRequest) SetEmail(v string) {
	o.Email.Set(&v)
}
// SetEmailNil sets the value for Email to be an explicit nil
func (o *QRCodeSignUpRequest) SetEmailNil() {
	o.Email.Set(nil)
}

// UnsetEmail ensures that no value is present for Email, not even an explicit nil
func (o *QRCodeSignUpRequest) UnsetEmail() {
	o.Email.Unset()
}

// GetEmailCode returns the EmailCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QRCodeSignUpRequest) GetEmailCode() string {
	if o == nil || IsNil(o.EmailCode.Get()) {
		var ret string
		return ret
	}
	return *o.EmailCode.Get()
}

// GetEmailCodeOk returns a tuple with the EmailCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QRCodeSignUpRequest) GetEmailCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EmailCode.Get(), o.EmailCode.IsSet()
}

// HasEmailCode returns a boolean if a field has been set.
func (o *QRCodeSignUpRequest) HasEmailCode() bool {
	if o != nil && o.EmailCode.IsSet() {
		return true
	}

	return false
}

// SetEmailCode gets a reference to the given NullableString and assigns it to the EmailCode field.
func (o *QRCodeSignUpRequest) SetEmailCode(v string) {
	o.EmailCode.Set(&v)
}
// SetEmailCodeNil sets the value for EmailCode to be an explicit nil
func (o *QRCodeSignUpRequest) SetEmailCodeNil() {
	o.EmailCode.Set(nil)
}

// UnsetEmailCode ensures that no value is present for EmailCode, not even an explicit nil
func (o *QRCodeSignUpRequest) UnsetEmailCode() {
	o.EmailCode.Unset()
}

// GetPhone returns the Phone field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QRCodeSignUpRequest) GetPhone() string {
	if o == nil || IsNil(o.Phone.Get()) {
		var ret string
		return ret
	}
	return *o.Phone.Get()
}

// GetPhoneOk returns a tuple with the Phone field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QRCodeSignUpRequest) GetPhoneOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Phone.Get(), o.Phone.IsSet()
}

// HasPhone returns a boolean if a field has been set.
func (o *QRCodeSignUpRequest) HasPhone() bool {
	if o != nil && o.Phone.IsSet() {
		return true
	}

	return false
}

// SetPhone gets a reference to the given NullableString and assigns it to the Phone field.
func (o *QRCodeSignUpRequest) SetPhone(v string) {
	o.Phone.Set(&v)
}
// SetPhoneNil sets the value for Phone to be an explicit nil
func (o *QRCodeSignUpRequest) SetPhoneNil() {
	o.Phone.Set(nil)
}

// UnsetPhone ensures that no value is present for Phone, not even an explicit nil
func (o *QRCodeSignUpRequest) UnsetPhone() {
	o.Phone.Unset()
}

// GetPhoneCode returns the PhoneCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QRCodeSignUpRequest) GetPhoneCode() string {
	if o == nil || IsNil(o.PhoneCode.Get()) {
		var ret string
		return ret
	}
	return *o.PhoneCode.Get()
}

// GetPhoneCodeOk returns a tuple with the PhoneCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QRCodeSignUpRequest) GetPhoneCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PhoneCode.Get(), o.PhoneCode.IsSet()
}

// HasPhoneCode returns a boolean if a field has been set.
func (o *QRCodeSignUpRequest) HasPhoneCode() bool {
	if o != nil && o.PhoneCode.IsSet() {
		return true
	}

	return false
}

// SetPhoneCode gets a reference to the given NullableString and assigns it to the PhoneCode field.
func (o *QRCodeSignUpRequest) SetPhoneCode(v string) {
	o.PhoneCode.Set(&v)
}
// SetPhoneCodeNil sets the value for PhoneCode to be an explicit nil
func (o *QRCodeSignUpRequest) SetPhoneCodeNil() {
	o.PhoneCode.Set(nil)
}

// UnsetPhoneCode ensures that no value is present for PhoneCode, not even an explicit nil
func (o *QRCodeSignUpRequest) UnsetPhoneCode() {
	o.PhoneCode.Unset()
}

func (o QRCodeSignUpRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QRCodeSignUpRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SignInKey) {
		toSerialize["signInKey"] = o.SignInKey
	}
	toSerialize["unionID"] = o.UnionID
	if o.NickName.IsSet() {
		toSerialize["nickName"] = o.NickName.Get()
	}
	if o.Avatar.IsSet() {
		toSerialize["avatar"] = o.Avatar.Get()
	}
	if o.Data.IsSet() {
		toSerialize["data"] = o.Data.Get()
	}
	if o.Email.IsSet() {
		toSerialize["email"] = o.Email.Get()
	}
	if o.EmailCode.IsSet() {
		toSerialize["emailCode"] = o.EmailCode.Get()
	}
	if o.Phone.IsSet() {
		toSerialize["phone"] = o.Phone.Get()
	}
	if o.PhoneCode.IsSet() {
		toSerialize["phoneCode"] = o.PhoneCode.Get()
	}
	return toSerialize, nil
}

func (o *QRCodeSignUpRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"unionID",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varQRCodeSignUpRequest := _QRCodeSignUpRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varQRCodeSignUpRequest)

	if err != nil {
		return err
	}

	*o = QRCodeSignUpRequest(varQRCodeSignUpRequest)

	return err
}

type NullableQRCodeSignUpRequest struct {
	value *QRCodeSignUpRequest
	isSet bool
}

func (v NullableQRCodeSignUpRequest) Get() *QRCodeSignUpRequest {
	return v.value
}

func (v *NullableQRCodeSignUpRequest) Set(val *QRCodeSignUpRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableQRCodeSignUpRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableQRCodeSignUpRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQRCodeSignUpRequest(val *QRCodeSignUpRequest) *NullableQRCodeSignUpRequest {
	return &NullableQRCodeSignUpRequest{value: val, isSet: true}
}

func (v NullableQRCodeSignUpRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQRCodeSignUpRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


