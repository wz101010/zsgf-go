/*
全部  API 文档

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package zsgf

import (
	"encoding/json"
)

// checks if the SystemFileListResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SystemFileListResult{}

// SystemFileListResult struct for SystemFileListResult
type SystemFileListResult struct {
	Directories []SystemDirectoryItem `json:"directories,omitempty"`
	Files []SystemFileItem `json:"files,omitempty"`
	Size *int64 `json:"size,omitempty"`
}

// NewSystemFileListResult instantiates a new SystemFileListResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSystemFileListResult() *SystemFileListResult {
	this := SystemFileListResult{}
	return &this
}

// NewSystemFileListResultWithDefaults instantiates a new SystemFileListResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSystemFileListResultWithDefaults() *SystemFileListResult {
	this := SystemFileListResult{}
	return &this
}

// GetDirectories returns the Directories field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SystemFileListResult) GetDirectories() []SystemDirectoryItem {
	if o == nil {
		var ret []SystemDirectoryItem
		return ret
	}
	return o.Directories
}

// GetDirectoriesOk returns a tuple with the Directories field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SystemFileListResult) GetDirectoriesOk() ([]SystemDirectoryItem, bool) {
	if o == nil || IsNil(o.Directories) {
		return nil, false
	}
	return o.Directories, true
}

// HasDirectories returns a boolean if a field has been set.
func (o *SystemFileListResult) HasDirectories() bool {
	if o != nil && !IsNil(o.Directories) {
		return true
	}

	return false
}

// SetDirectories gets a reference to the given []SystemDirectoryItem and assigns it to the Directories field.
func (o *SystemFileListResult) SetDirectories(v []SystemDirectoryItem) {
	o.Directories = v
}

// GetFiles returns the Files field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SystemFileListResult) GetFiles() []SystemFileItem {
	if o == nil {
		var ret []SystemFileItem
		return ret
	}
	return o.Files
}

// GetFilesOk returns a tuple with the Files field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SystemFileListResult) GetFilesOk() ([]SystemFileItem, bool) {
	if o == nil || IsNil(o.Files) {
		return nil, false
	}
	return o.Files, true
}

// HasFiles returns a boolean if a field has been set.
func (o *SystemFileListResult) HasFiles() bool {
	if o != nil && !IsNil(o.Files) {
		return true
	}

	return false
}

// SetFiles gets a reference to the given []SystemFileItem and assigns it to the Files field.
func (o *SystemFileListResult) SetFiles(v []SystemFileItem) {
	o.Files = v
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *SystemFileListResult) GetSize() int64 {
	if o == nil || IsNil(o.Size) {
		var ret int64
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemFileListResult) GetSizeOk() (*int64, bool) {
	if o == nil || IsNil(o.Size) {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *SystemFileListResult) HasSize() bool {
	if o != nil && !IsNil(o.Size) {
		return true
	}

	return false
}

// SetSize gets a reference to the given int64 and assigns it to the Size field.
func (o *SystemFileListResult) SetSize(v int64) {
	o.Size = &v
}

func (o SystemFileListResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SystemFileListResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Directories != nil {
		toSerialize["directories"] = o.Directories
	}
	if o.Files != nil {
		toSerialize["files"] = o.Files
	}
	if !IsNil(o.Size) {
		toSerialize["size"] = o.Size
	}
	return toSerialize, nil
}

type NullableSystemFileListResult struct {
	value *SystemFileListResult
	isSet bool
}

func (v NullableSystemFileListResult) Get() *SystemFileListResult {
	return v.value
}

func (v *NullableSystemFileListResult) Set(val *SystemFileListResult) {
	v.value = val
	v.isSet = true
}

func (v NullableSystemFileListResult) IsSet() bool {
	return v.isSet
}

func (v *NullableSystemFileListResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSystemFileListResult(val *SystemFileListResult) *NullableSystemFileListResult {
	return &NullableSystemFileListResult{value: val, isSet: true}
}

func (v NullableSystemFileListResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSystemFileListResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


