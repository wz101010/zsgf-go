/*
全部  API 文档

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package zsgf

import (
	"encoding/json"
)

// checks if the CreateOrderResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateOrderResult{}

// CreateOrderResult struct for CreateOrderResult
type CreateOrderResult struct {
	Id *int64 `json:"id,omitempty"`
	OrderNo NullableString `json:"orderNo,omitempty"`
}

// NewCreateOrderResult instantiates a new CreateOrderResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateOrderResult() *CreateOrderResult {
	this := CreateOrderResult{}
	return &this
}

// NewCreateOrderResultWithDefaults instantiates a new CreateOrderResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateOrderResultWithDefaults() *CreateOrderResult {
	this := CreateOrderResult{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CreateOrderResult) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrderResult) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CreateOrderResult) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *CreateOrderResult) SetId(v int64) {
	o.Id = &v
}

// GetOrderNo returns the OrderNo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateOrderResult) GetOrderNo() string {
	if o == nil || IsNil(o.OrderNo.Get()) {
		var ret string
		return ret
	}
	return *o.OrderNo.Get()
}

// GetOrderNoOk returns a tuple with the OrderNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateOrderResult) GetOrderNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OrderNo.Get(), o.OrderNo.IsSet()
}

// HasOrderNo returns a boolean if a field has been set.
func (o *CreateOrderResult) HasOrderNo() bool {
	if o != nil && o.OrderNo.IsSet() {
		return true
	}

	return false
}

// SetOrderNo gets a reference to the given NullableString and assigns it to the OrderNo field.
func (o *CreateOrderResult) SetOrderNo(v string) {
	o.OrderNo.Set(&v)
}
// SetOrderNoNil sets the value for OrderNo to be an explicit nil
func (o *CreateOrderResult) SetOrderNoNil() {
	o.OrderNo.Set(nil)
}

// UnsetOrderNo ensures that no value is present for OrderNo, not even an explicit nil
func (o *CreateOrderResult) UnsetOrderNo() {
	o.OrderNo.Unset()
}

func (o CreateOrderResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateOrderResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if o.OrderNo.IsSet() {
		toSerialize["orderNo"] = o.OrderNo.Get()
	}
	return toSerialize, nil
}

type NullableCreateOrderResult struct {
	value *CreateOrderResult
	isSet bool
}

func (v NullableCreateOrderResult) Get() *CreateOrderResult {
	return v.value
}

func (v *NullableCreateOrderResult) Set(val *CreateOrderResult) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateOrderResult) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateOrderResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateOrderResult(val *CreateOrderResult) *NullableCreateOrderResult {
	return &NullableCreateOrderResult{value: val, isSet: true}
}

func (v NullableCreateOrderResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateOrderResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


