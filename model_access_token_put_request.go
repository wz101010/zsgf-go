/*
全部  API 文档

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package zsgf

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AccessTokenPutRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccessTokenPutRequest{}

// AccessTokenPutRequest 请求更新访问令牌的模型
type AccessTokenPutRequest struct {
	// 访问令牌的标题
	Title string `json:"title"`
	// 访问令牌的标签
	Tags NullableString `json:"tags,omitempty"`
	// 访问令牌的描述
	Description NullableString `json:"description,omitempty"`
	// 访问令牌的权限
	Permissions NullableString `json:"permissions,omitempty"`
	// 是否启用访问令牌
	Enable *bool `json:"enable,omitempty"`
}

type _AccessTokenPutRequest AccessTokenPutRequest

// NewAccessTokenPutRequest instantiates a new AccessTokenPutRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccessTokenPutRequest(title string) *AccessTokenPutRequest {
	this := AccessTokenPutRequest{}
	this.Title = title
	var tags string = ""
	this.Tags = *NewNullableString(&tags)
	var description string = ""
	this.Description = *NewNullableString(&description)
	var permissions string = ""
	this.Permissions = *NewNullableString(&permissions)
	var enable bool = false
	this.Enable = &enable
	return &this
}

// NewAccessTokenPutRequestWithDefaults instantiates a new AccessTokenPutRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccessTokenPutRequestWithDefaults() *AccessTokenPutRequest {
	this := AccessTokenPutRequest{}
	var title string = "默认标题"
	this.Title = title
	var tags string = ""
	this.Tags = *NewNullableString(&tags)
	var description string = ""
	this.Description = *NewNullableString(&description)
	var permissions string = ""
	this.Permissions = *NewNullableString(&permissions)
	var enable bool = false
	this.Enable = &enable
	return &this
}

// GetTitle returns the Title field value
func (o *AccessTokenPutRequest) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *AccessTokenPutRequest) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *AccessTokenPutRequest) SetTitle(v string) {
	o.Title = v
}

// GetTags returns the Tags field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccessTokenPutRequest) GetTags() string {
	if o == nil || IsNil(o.Tags.Get()) {
		var ret string
		return ret
	}
	return *o.Tags.Get()
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccessTokenPutRequest) GetTagsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Tags.Get(), o.Tags.IsSet()
}

// HasTags returns a boolean if a field has been set.
func (o *AccessTokenPutRequest) HasTags() bool {
	if o != nil && o.Tags.IsSet() {
		return true
	}

	return false
}

// SetTags gets a reference to the given NullableString and assigns it to the Tags field.
func (o *AccessTokenPutRequest) SetTags(v string) {
	o.Tags.Set(&v)
}
// SetTagsNil sets the value for Tags to be an explicit nil
func (o *AccessTokenPutRequest) SetTagsNil() {
	o.Tags.Set(nil)
}

// UnsetTags ensures that no value is present for Tags, not even an explicit nil
func (o *AccessTokenPutRequest) UnsetTags() {
	o.Tags.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccessTokenPutRequest) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccessTokenPutRequest) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *AccessTokenPutRequest) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *AccessTokenPutRequest) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *AccessTokenPutRequest) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *AccessTokenPutRequest) UnsetDescription() {
	o.Description.Unset()
}

// GetPermissions returns the Permissions field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccessTokenPutRequest) GetPermissions() string {
	if o == nil || IsNil(o.Permissions.Get()) {
		var ret string
		return ret
	}
	return *o.Permissions.Get()
}

// GetPermissionsOk returns a tuple with the Permissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccessTokenPutRequest) GetPermissionsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Permissions.Get(), o.Permissions.IsSet()
}

// HasPermissions returns a boolean if a field has been set.
func (o *AccessTokenPutRequest) HasPermissions() bool {
	if o != nil && o.Permissions.IsSet() {
		return true
	}

	return false
}

// SetPermissions gets a reference to the given NullableString and assigns it to the Permissions field.
func (o *AccessTokenPutRequest) SetPermissions(v string) {
	o.Permissions.Set(&v)
}
// SetPermissionsNil sets the value for Permissions to be an explicit nil
func (o *AccessTokenPutRequest) SetPermissionsNil() {
	o.Permissions.Set(nil)
}

// UnsetPermissions ensures that no value is present for Permissions, not even an explicit nil
func (o *AccessTokenPutRequest) UnsetPermissions() {
	o.Permissions.Unset()
}

// GetEnable returns the Enable field value if set, zero value otherwise.
func (o *AccessTokenPutRequest) GetEnable() bool {
	if o == nil || IsNil(o.Enable) {
		var ret bool
		return ret
	}
	return *o.Enable
}

// GetEnableOk returns a tuple with the Enable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessTokenPutRequest) GetEnableOk() (*bool, bool) {
	if o == nil || IsNil(o.Enable) {
		return nil, false
	}
	return o.Enable, true
}

// HasEnable returns a boolean if a field has been set.
func (o *AccessTokenPutRequest) HasEnable() bool {
	if o != nil && !IsNil(o.Enable) {
		return true
	}

	return false
}

// SetEnable gets a reference to the given bool and assigns it to the Enable field.
func (o *AccessTokenPutRequest) SetEnable(v bool) {
	o.Enable = &v
}

func (o AccessTokenPutRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccessTokenPutRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["title"] = o.Title
	if o.Tags.IsSet() {
		toSerialize["tags"] = o.Tags.Get()
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.Permissions.IsSet() {
		toSerialize["permissions"] = o.Permissions.Get()
	}
	if !IsNil(o.Enable) {
		toSerialize["enable"] = o.Enable
	}
	return toSerialize, nil
}

func (o *AccessTokenPutRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"title",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAccessTokenPutRequest := _AccessTokenPutRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAccessTokenPutRequest)

	if err != nil {
		return err
	}

	*o = AccessTokenPutRequest(varAccessTokenPutRequest)

	return err
}

type NullableAccessTokenPutRequest struct {
	value *AccessTokenPutRequest
	isSet bool
}

func (v NullableAccessTokenPutRequest) Get() *AccessTokenPutRequest {
	return v.value
}

func (v *NullableAccessTokenPutRequest) Set(val *AccessTokenPutRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAccessTokenPutRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAccessTokenPutRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccessTokenPutRequest(val *AccessTokenPutRequest) *NullableAccessTokenPutRequest {
	return &NullableAccessTokenPutRequest{value: val, isSet: true}
}

func (v NullableAccessTokenPutRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccessTokenPutRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


