/*
全部  API 文档

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package zsgf

import (
	"encoding/json"
	"time"
)

// checks if the ServiceItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServiceItem{}

// ServiceItem 服务配置项实体，用于定义和管理服务相关的配置信息。
type ServiceItem struct {
	// 服务配置项的唯一标识符。
	Id *int64 `json:"id,omitempty"`
	// 服务配置项所属的业务代码，用于分类管理。
	BizCode NullableString `json:"bizCode,omitempty"`
	// 关联的服务商代码，用于标识提供该配置项的服务商。
	ProviderCode NullableString `json:"providerCode,omitempty"`
	// 服务配置项所属的功能分组代码，用于组织和管理相关配置项。
	GroupCode NullableString `json:"groupCode,omitempty"`
	// 服务配置项的名称，用于描述其功能或用途。
	Name NullableString `json:"name,omitempty"`
	// 服务配置项的唯一代码，用于系统内部标识。
	Code NullableString `json:"code,omitempty"`
	// 服务配置项的值类型，例如 'text', 'number', 'boolean' 等。默认为 'text'。
	ValueType NullableString `json:"valueType,omitempty"`
	// 服务配置项的图标URL或路径，用于在界面上显示。
	Icon NullableString `json:"icon,omitempty"`
	// 服务配置项的默认值，当未设置具体值时使用。
	ValueDefaults NullableString `json:"valueDefaults,omitempty"`
	// 服务配置项的详细描述信息，用于说明其用途和配置方法。
	Description NullableString `json:"description,omitempty"`
	// 用于分类或标记服务配置项的标签。
	Tags NullableString `json:"tags,omitempty"`
	// 指示该配置项是否为系统级别的配置项，默认为 false。
	IsSystem *bool `json:"isSystem,omitempty"`
	// 指示服务配置项是否在界面上显示，默认为 true。
	Show *bool `json:"show,omitempty"`
	// 服务配置项在界面上的显示顺序。
	ShowIndex *int32 `json:"showIndex,omitempty"`
	// 服务配置项的创建日期，默认为当前时间。
	CreateDate *time.Time `json:"createDate,omitempty"`
	// 服务配置项的最后更新日期，默认为当前时间。
	LastUpdate *time.Time `json:"lastUpdate,omitempty"`
}

// NewServiceItem instantiates a new ServiceItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceItem() *ServiceItem {
	this := ServiceItem{}
	return &this
}

// NewServiceItemWithDefaults instantiates a new ServiceItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceItemWithDefaults() *ServiceItem {
	this := ServiceItem{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ServiceItem) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceItem) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ServiceItem) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *ServiceItem) SetId(v int64) {
	o.Id = &v
}

// GetBizCode returns the BizCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceItem) GetBizCode() string {
	if o == nil || IsNil(o.BizCode.Get()) {
		var ret string
		return ret
	}
	return *o.BizCode.Get()
}

// GetBizCodeOk returns a tuple with the BizCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceItem) GetBizCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BizCode.Get(), o.BizCode.IsSet()
}

// HasBizCode returns a boolean if a field has been set.
func (o *ServiceItem) HasBizCode() bool {
	if o != nil && o.BizCode.IsSet() {
		return true
	}

	return false
}

// SetBizCode gets a reference to the given NullableString and assigns it to the BizCode field.
func (o *ServiceItem) SetBizCode(v string) {
	o.BizCode.Set(&v)
}
// SetBizCodeNil sets the value for BizCode to be an explicit nil
func (o *ServiceItem) SetBizCodeNil() {
	o.BizCode.Set(nil)
}

// UnsetBizCode ensures that no value is present for BizCode, not even an explicit nil
func (o *ServiceItem) UnsetBizCode() {
	o.BizCode.Unset()
}

// GetProviderCode returns the ProviderCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceItem) GetProviderCode() string {
	if o == nil || IsNil(o.ProviderCode.Get()) {
		var ret string
		return ret
	}
	return *o.ProviderCode.Get()
}

// GetProviderCodeOk returns a tuple with the ProviderCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceItem) GetProviderCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProviderCode.Get(), o.ProviderCode.IsSet()
}

// HasProviderCode returns a boolean if a field has been set.
func (o *ServiceItem) HasProviderCode() bool {
	if o != nil && o.ProviderCode.IsSet() {
		return true
	}

	return false
}

// SetProviderCode gets a reference to the given NullableString and assigns it to the ProviderCode field.
func (o *ServiceItem) SetProviderCode(v string) {
	o.ProviderCode.Set(&v)
}
// SetProviderCodeNil sets the value for ProviderCode to be an explicit nil
func (o *ServiceItem) SetProviderCodeNil() {
	o.ProviderCode.Set(nil)
}

// UnsetProviderCode ensures that no value is present for ProviderCode, not even an explicit nil
func (o *ServiceItem) UnsetProviderCode() {
	o.ProviderCode.Unset()
}

// GetGroupCode returns the GroupCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceItem) GetGroupCode() string {
	if o == nil || IsNil(o.GroupCode.Get()) {
		var ret string
		return ret
	}
	return *o.GroupCode.Get()
}

// GetGroupCodeOk returns a tuple with the GroupCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceItem) GetGroupCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GroupCode.Get(), o.GroupCode.IsSet()
}

// HasGroupCode returns a boolean if a field has been set.
func (o *ServiceItem) HasGroupCode() bool {
	if o != nil && o.GroupCode.IsSet() {
		return true
	}

	return false
}

// SetGroupCode gets a reference to the given NullableString and assigns it to the GroupCode field.
func (o *ServiceItem) SetGroupCode(v string) {
	o.GroupCode.Set(&v)
}
// SetGroupCodeNil sets the value for GroupCode to be an explicit nil
func (o *ServiceItem) SetGroupCodeNil() {
	o.GroupCode.Set(nil)
}

// UnsetGroupCode ensures that no value is present for GroupCode, not even an explicit nil
func (o *ServiceItem) UnsetGroupCode() {
	o.GroupCode.Unset()
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceItem) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceItem) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *ServiceItem) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *ServiceItem) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *ServiceItem) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *ServiceItem) UnsetName() {
	o.Name.Unset()
}

// GetCode returns the Code field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceItem) GetCode() string {
	if o == nil || IsNil(o.Code.Get()) {
		var ret string
		return ret
	}
	return *o.Code.Get()
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceItem) GetCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Code.Get(), o.Code.IsSet()
}

// HasCode returns a boolean if a field has been set.
func (o *ServiceItem) HasCode() bool {
	if o != nil && o.Code.IsSet() {
		return true
	}

	return false
}

// SetCode gets a reference to the given NullableString and assigns it to the Code field.
func (o *ServiceItem) SetCode(v string) {
	o.Code.Set(&v)
}
// SetCodeNil sets the value for Code to be an explicit nil
func (o *ServiceItem) SetCodeNil() {
	o.Code.Set(nil)
}

// UnsetCode ensures that no value is present for Code, not even an explicit nil
func (o *ServiceItem) UnsetCode() {
	o.Code.Unset()
}

// GetValueType returns the ValueType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceItem) GetValueType() string {
	if o == nil || IsNil(o.ValueType.Get()) {
		var ret string
		return ret
	}
	return *o.ValueType.Get()
}

// GetValueTypeOk returns a tuple with the ValueType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceItem) GetValueTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ValueType.Get(), o.ValueType.IsSet()
}

// HasValueType returns a boolean if a field has been set.
func (o *ServiceItem) HasValueType() bool {
	if o != nil && o.ValueType.IsSet() {
		return true
	}

	return false
}

// SetValueType gets a reference to the given NullableString and assigns it to the ValueType field.
func (o *ServiceItem) SetValueType(v string) {
	o.ValueType.Set(&v)
}
// SetValueTypeNil sets the value for ValueType to be an explicit nil
func (o *ServiceItem) SetValueTypeNil() {
	o.ValueType.Set(nil)
}

// UnsetValueType ensures that no value is present for ValueType, not even an explicit nil
func (o *ServiceItem) UnsetValueType() {
	o.ValueType.Unset()
}

// GetIcon returns the Icon field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceItem) GetIcon() string {
	if o == nil || IsNil(o.Icon.Get()) {
		var ret string
		return ret
	}
	return *o.Icon.Get()
}

// GetIconOk returns a tuple with the Icon field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceItem) GetIconOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Icon.Get(), o.Icon.IsSet()
}

// HasIcon returns a boolean if a field has been set.
func (o *ServiceItem) HasIcon() bool {
	if o != nil && o.Icon.IsSet() {
		return true
	}

	return false
}

// SetIcon gets a reference to the given NullableString and assigns it to the Icon field.
func (o *ServiceItem) SetIcon(v string) {
	o.Icon.Set(&v)
}
// SetIconNil sets the value for Icon to be an explicit nil
func (o *ServiceItem) SetIconNil() {
	o.Icon.Set(nil)
}

// UnsetIcon ensures that no value is present for Icon, not even an explicit nil
func (o *ServiceItem) UnsetIcon() {
	o.Icon.Unset()
}

// GetValueDefaults returns the ValueDefaults field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceItem) GetValueDefaults() string {
	if o == nil || IsNil(o.ValueDefaults.Get()) {
		var ret string
		return ret
	}
	return *o.ValueDefaults.Get()
}

// GetValueDefaultsOk returns a tuple with the ValueDefaults field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceItem) GetValueDefaultsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ValueDefaults.Get(), o.ValueDefaults.IsSet()
}

// HasValueDefaults returns a boolean if a field has been set.
func (o *ServiceItem) HasValueDefaults() bool {
	if o != nil && o.ValueDefaults.IsSet() {
		return true
	}

	return false
}

// SetValueDefaults gets a reference to the given NullableString and assigns it to the ValueDefaults field.
func (o *ServiceItem) SetValueDefaults(v string) {
	o.ValueDefaults.Set(&v)
}
// SetValueDefaultsNil sets the value for ValueDefaults to be an explicit nil
func (o *ServiceItem) SetValueDefaultsNil() {
	o.ValueDefaults.Set(nil)
}

// UnsetValueDefaults ensures that no value is present for ValueDefaults, not even an explicit nil
func (o *ServiceItem) UnsetValueDefaults() {
	o.ValueDefaults.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceItem) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceItem) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *ServiceItem) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *ServiceItem) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *ServiceItem) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *ServiceItem) UnsetDescription() {
	o.Description.Unset()
}

// GetTags returns the Tags field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceItem) GetTags() string {
	if o == nil || IsNil(o.Tags.Get()) {
		var ret string
		return ret
	}
	return *o.Tags.Get()
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceItem) GetTagsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Tags.Get(), o.Tags.IsSet()
}

// HasTags returns a boolean if a field has been set.
func (o *ServiceItem) HasTags() bool {
	if o != nil && o.Tags.IsSet() {
		return true
	}

	return false
}

// SetTags gets a reference to the given NullableString and assigns it to the Tags field.
func (o *ServiceItem) SetTags(v string) {
	o.Tags.Set(&v)
}
// SetTagsNil sets the value for Tags to be an explicit nil
func (o *ServiceItem) SetTagsNil() {
	o.Tags.Set(nil)
}

// UnsetTags ensures that no value is present for Tags, not even an explicit nil
func (o *ServiceItem) UnsetTags() {
	o.Tags.Unset()
}

// GetIsSystem returns the IsSystem field value if set, zero value otherwise.
func (o *ServiceItem) GetIsSystem() bool {
	if o == nil || IsNil(o.IsSystem) {
		var ret bool
		return ret
	}
	return *o.IsSystem
}

// GetIsSystemOk returns a tuple with the IsSystem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceItem) GetIsSystemOk() (*bool, bool) {
	if o == nil || IsNil(o.IsSystem) {
		return nil, false
	}
	return o.IsSystem, true
}

// HasIsSystem returns a boolean if a field has been set.
func (o *ServiceItem) HasIsSystem() bool {
	if o != nil && !IsNil(o.IsSystem) {
		return true
	}

	return false
}

// SetIsSystem gets a reference to the given bool and assigns it to the IsSystem field.
func (o *ServiceItem) SetIsSystem(v bool) {
	o.IsSystem = &v
}

// GetShow returns the Show field value if set, zero value otherwise.
func (o *ServiceItem) GetShow() bool {
	if o == nil || IsNil(o.Show) {
		var ret bool
		return ret
	}
	return *o.Show
}

// GetShowOk returns a tuple with the Show field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceItem) GetShowOk() (*bool, bool) {
	if o == nil || IsNil(o.Show) {
		return nil, false
	}
	return o.Show, true
}

// HasShow returns a boolean if a field has been set.
func (o *ServiceItem) HasShow() bool {
	if o != nil && !IsNil(o.Show) {
		return true
	}

	return false
}

// SetShow gets a reference to the given bool and assigns it to the Show field.
func (o *ServiceItem) SetShow(v bool) {
	o.Show = &v
}

// GetShowIndex returns the ShowIndex field value if set, zero value otherwise.
func (o *ServiceItem) GetShowIndex() int32 {
	if o == nil || IsNil(o.ShowIndex) {
		var ret int32
		return ret
	}
	return *o.ShowIndex
}

// GetShowIndexOk returns a tuple with the ShowIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceItem) GetShowIndexOk() (*int32, bool) {
	if o == nil || IsNil(o.ShowIndex) {
		return nil, false
	}
	return o.ShowIndex, true
}

// HasShowIndex returns a boolean if a field has been set.
func (o *ServiceItem) HasShowIndex() bool {
	if o != nil && !IsNil(o.ShowIndex) {
		return true
	}

	return false
}

// SetShowIndex gets a reference to the given int32 and assigns it to the ShowIndex field.
func (o *ServiceItem) SetShowIndex(v int32) {
	o.ShowIndex = &v
}

// GetCreateDate returns the CreateDate field value if set, zero value otherwise.
func (o *ServiceItem) GetCreateDate() time.Time {
	if o == nil || IsNil(o.CreateDate) {
		var ret time.Time
		return ret
	}
	return *o.CreateDate
}

// GetCreateDateOk returns a tuple with the CreateDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceItem) GetCreateDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreateDate) {
		return nil, false
	}
	return o.CreateDate, true
}

// HasCreateDate returns a boolean if a field has been set.
func (o *ServiceItem) HasCreateDate() bool {
	if o != nil && !IsNil(o.CreateDate) {
		return true
	}

	return false
}

// SetCreateDate gets a reference to the given time.Time and assigns it to the CreateDate field.
func (o *ServiceItem) SetCreateDate(v time.Time) {
	o.CreateDate = &v
}

// GetLastUpdate returns the LastUpdate field value if set, zero value otherwise.
func (o *ServiceItem) GetLastUpdate() time.Time {
	if o == nil || IsNil(o.LastUpdate) {
		var ret time.Time
		return ret
	}
	return *o.LastUpdate
}

// GetLastUpdateOk returns a tuple with the LastUpdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceItem) GetLastUpdateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastUpdate) {
		return nil, false
	}
	return o.LastUpdate, true
}

// HasLastUpdate returns a boolean if a field has been set.
func (o *ServiceItem) HasLastUpdate() bool {
	if o != nil && !IsNil(o.LastUpdate) {
		return true
	}

	return false
}

// SetLastUpdate gets a reference to the given time.Time and assigns it to the LastUpdate field.
func (o *ServiceItem) SetLastUpdate(v time.Time) {
	o.LastUpdate = &v
}

func (o ServiceItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServiceItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if o.BizCode.IsSet() {
		toSerialize["bizCode"] = o.BizCode.Get()
	}
	if o.ProviderCode.IsSet() {
		toSerialize["providerCode"] = o.ProviderCode.Get()
	}
	if o.GroupCode.IsSet() {
		toSerialize["groupCode"] = o.GroupCode.Get()
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.Code.IsSet() {
		toSerialize["code"] = o.Code.Get()
	}
	if o.ValueType.IsSet() {
		toSerialize["valueType"] = o.ValueType.Get()
	}
	if o.Icon.IsSet() {
		toSerialize["icon"] = o.Icon.Get()
	}
	if o.ValueDefaults.IsSet() {
		toSerialize["valueDefaults"] = o.ValueDefaults.Get()
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.Tags.IsSet() {
		toSerialize["tags"] = o.Tags.Get()
	}
	if !IsNil(o.IsSystem) {
		toSerialize["isSystem"] = o.IsSystem
	}
	if !IsNil(o.Show) {
		toSerialize["show"] = o.Show
	}
	if !IsNil(o.ShowIndex) {
		toSerialize["showIndex"] = o.ShowIndex
	}
	if !IsNil(o.CreateDate) {
		toSerialize["createDate"] = o.CreateDate
	}
	if !IsNil(o.LastUpdate) {
		toSerialize["lastUpdate"] = o.LastUpdate
	}
	return toSerialize, nil
}

type NullableServiceItem struct {
	value *ServiceItem
	isSet bool
}

func (v NullableServiceItem) Get() *ServiceItem {
	return v.value
}

func (v *NullableServiceItem) Set(val *ServiceItem) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceItem) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceItem(val *ServiceItem) *NullableServiceItem {
	return &NullableServiceItem{value: val, isSet: true}
}

func (v NullableServiceItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


