/*
全部  API 文档

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package zsgf

import (
	"encoding/json"
)

// checks if the QRCodePreSignInRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QRCodePreSignInRequest{}

// QRCodePreSignInRequest struct for QRCodePreSignInRequest
type QRCodePreSignInRequest struct {
	Scopes NullableString `json:"scopes,omitempty"`
	Remark NullableString `json:"remark,omitempty"`
	Scheme NullableString `json:"scheme,omitempty"`
}

// NewQRCodePreSignInRequest instantiates a new QRCodePreSignInRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQRCodePreSignInRequest() *QRCodePreSignInRequest {
	this := QRCodePreSignInRequest{}
	return &this
}

// NewQRCodePreSignInRequestWithDefaults instantiates a new QRCodePreSignInRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQRCodePreSignInRequestWithDefaults() *QRCodePreSignInRequest {
	this := QRCodePreSignInRequest{}
	return &this
}

// GetScopes returns the Scopes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QRCodePreSignInRequest) GetScopes() string {
	if o == nil || IsNil(o.Scopes.Get()) {
		var ret string
		return ret
	}
	return *o.Scopes.Get()
}

// GetScopesOk returns a tuple with the Scopes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QRCodePreSignInRequest) GetScopesOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Scopes.Get(), o.Scopes.IsSet()
}

// HasScopes returns a boolean if a field has been set.
func (o *QRCodePreSignInRequest) HasScopes() bool {
	if o != nil && o.Scopes.IsSet() {
		return true
	}

	return false
}

// SetScopes gets a reference to the given NullableString and assigns it to the Scopes field.
func (o *QRCodePreSignInRequest) SetScopes(v string) {
	o.Scopes.Set(&v)
}
// SetScopesNil sets the value for Scopes to be an explicit nil
func (o *QRCodePreSignInRequest) SetScopesNil() {
	o.Scopes.Set(nil)
}

// UnsetScopes ensures that no value is present for Scopes, not even an explicit nil
func (o *QRCodePreSignInRequest) UnsetScopes() {
	o.Scopes.Unset()
}

// GetRemark returns the Remark field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QRCodePreSignInRequest) GetRemark() string {
	if o == nil || IsNil(o.Remark.Get()) {
		var ret string
		return ret
	}
	return *o.Remark.Get()
}

// GetRemarkOk returns a tuple with the Remark field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QRCodePreSignInRequest) GetRemarkOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Remark.Get(), o.Remark.IsSet()
}

// HasRemark returns a boolean if a field has been set.
func (o *QRCodePreSignInRequest) HasRemark() bool {
	if o != nil && o.Remark.IsSet() {
		return true
	}

	return false
}

// SetRemark gets a reference to the given NullableString and assigns it to the Remark field.
func (o *QRCodePreSignInRequest) SetRemark(v string) {
	o.Remark.Set(&v)
}
// SetRemarkNil sets the value for Remark to be an explicit nil
func (o *QRCodePreSignInRequest) SetRemarkNil() {
	o.Remark.Set(nil)
}

// UnsetRemark ensures that no value is present for Remark, not even an explicit nil
func (o *QRCodePreSignInRequest) UnsetRemark() {
	o.Remark.Unset()
}

// GetScheme returns the Scheme field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QRCodePreSignInRequest) GetScheme() string {
	if o == nil || IsNil(o.Scheme.Get()) {
		var ret string
		return ret
	}
	return *o.Scheme.Get()
}

// GetSchemeOk returns a tuple with the Scheme field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QRCodePreSignInRequest) GetSchemeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Scheme.Get(), o.Scheme.IsSet()
}

// HasScheme returns a boolean if a field has been set.
func (o *QRCodePreSignInRequest) HasScheme() bool {
	if o != nil && o.Scheme.IsSet() {
		return true
	}

	return false
}

// SetScheme gets a reference to the given NullableString and assigns it to the Scheme field.
func (o *QRCodePreSignInRequest) SetScheme(v string) {
	o.Scheme.Set(&v)
}
// SetSchemeNil sets the value for Scheme to be an explicit nil
func (o *QRCodePreSignInRequest) SetSchemeNil() {
	o.Scheme.Set(nil)
}

// UnsetScheme ensures that no value is present for Scheme, not even an explicit nil
func (o *QRCodePreSignInRequest) UnsetScheme() {
	o.Scheme.Unset()
}

func (o QRCodePreSignInRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QRCodePreSignInRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Scopes.IsSet() {
		toSerialize["scopes"] = o.Scopes.Get()
	}
	if o.Remark.IsSet() {
		toSerialize["remark"] = o.Remark.Get()
	}
	if o.Scheme.IsSet() {
		toSerialize["scheme"] = o.Scheme.Get()
	}
	return toSerialize, nil
}

type NullableQRCodePreSignInRequest struct {
	value *QRCodePreSignInRequest
	isSet bool
}

func (v NullableQRCodePreSignInRequest) Get() *QRCodePreSignInRequest {
	return v.value
}

func (v *NullableQRCodePreSignInRequest) Set(val *QRCodePreSignInRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableQRCodePreSignInRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableQRCodePreSignInRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQRCodePreSignInRequest(val *QRCodePreSignInRequest) *NullableQRCodePreSignInRequest {
	return &NullableQRCodePreSignInRequest{value: val, isSet: true}
}

func (v NullableQRCodePreSignInRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQRCodePreSignInRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


